-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dct_dct_2d is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_block_ce0 : OUT STD_LOGIC;
    in_block_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_block_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    in_block_ce1 : OUT STD_LOGIC;
    in_block_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_block_ce0 : OUT STD_LOGIC;
    out_block_we0 : OUT STD_LOGIC;
    out_block_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of dct_dct_2d is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_pp0_stg0_fsm_3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_st6_fsm_4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_st7_fsm_5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_pp1_stg0_fsm_6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_st10_fsm_7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_25 : BOOLEAN;
    signal indvar_flatten_reg_147 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_reg_158 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_reg_169 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten1_reg_192 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_1_reg_203 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_reg_214 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond5_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_65 : BOOLEAN;
    signal i_4_fu_260_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_4_reg_478 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_483 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_3 : STD_LOGIC;
    signal ap_sig_76 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal indvar_flatten_next_fu_272_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_1_mid2_fu_290_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_mid2_reg_492 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_mid2_v_fu_298_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_mid2_v_reg_497 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_6_fu_333_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond2_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_4 : STD_LOGIC;
    signal ap_sig_104 : BOOLEAN;
    signal i_5_fu_370_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_reg_517 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten1_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten1_reg_522 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_6 : STD_LOGIC;
    signal ap_sig_115 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal indvar_flatten_next1_fu_382_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_3_mid2_fu_400_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_mid2_reg_531 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_mid2_v_fu_408_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_mid2_v_reg_536 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_7_fu_443_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal row_outbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal row_outbuf_ce0 : STD_LOGIC;
    signal row_outbuf_we0 : STD_LOGIC;
    signal row_outbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_outbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_outbuf_ce0 : STD_LOGIC;
    signal col_outbuf_we0 : STD_LOGIC;
    signal col_outbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_inbuf_ce0 : STD_LOGIC;
    signal col_inbuf_we0 : STD_LOGIC;
    signal col_inbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_ce1 : STD_LOGIC;
    signal col_inbuf_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_dct_1d2_fu_225_ap_start : STD_LOGIC;
    signal grp_dct_dct_1d2_fu_225_ap_done : STD_LOGIC;
    signal grp_dct_dct_1d2_fu_225_ap_idle : STD_LOGIC;
    signal grp_dct_dct_1d2_fu_225_ap_ready : STD_LOGIC;
    signal grp_dct_dct_1d2_fu_225_src_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dct_dct_1d2_fu_225_src_ce0 : STD_LOGIC;
    signal grp_dct_dct_1d2_fu_225_src_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_dct_1d2_fu_225_src_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dct_dct_1d2_fu_225_src_ce1 : STD_LOGIC;
    signal grp_dct_dct_1d2_fu_225_src_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_dct_1d2_fu_225_tmp_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dct_dct_1d2_fu_225_dst_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dct_dct_1d2_fu_225_dst_ce0 : STD_LOGIC;
    signal grp_dct_dct_1d2_fu_225_dst_we0 : STD_LOGIC;
    signal grp_dct_dct_1d2_fu_225_dst_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_dct_1d2_fu_225_tmp_21 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_135 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_208 : BOOLEAN;
    signal j_phi_fu_162_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_2_reg_180 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_5 : STD_LOGIC;
    signal ap_sig_227 : BOOLEAN;
    signal j_1_phi_fu_207_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_grp_dct_dct_1d2_fu_225_ap_start : STD_LOGIC := '0';
    signal tmp_7_cast_fu_328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_cast_fu_359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_cast_fu_438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_cast_fu_469_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_278_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_310_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_mid2_cast_fu_306_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_cast_fu_318_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_322_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_339_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_cast_fu_350_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_cast_fu_346_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_353_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond4_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_3_fu_388_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_420_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_mid2_cast_fu_416_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_cast_fu_428_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_432_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_449_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_5_cast_fu_460_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_cast_fu_456_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_463_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_7 : STD_LOGIC;
    signal ap_sig_451 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component dct_dct_1d2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        src_ce0 : OUT STD_LOGIC;
        src_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        src_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        src_ce1 : OUT STD_LOGIC;
        src_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        tmp_2 : IN STD_LOGIC_VECTOR (3 downto 0);
        dst_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        dst_ce0 : OUT STD_LOGIC;
        dst_we0 : OUT STD_LOGIC;
        dst_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        tmp_21 : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component dct_dct_2d_row_outbuf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_dct_2d_col_inbuf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    row_outbuf_U : component dct_dct_2d_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => row_outbuf_address0,
        ce0 => row_outbuf_ce0,
        we0 => row_outbuf_we0,
        d0 => grp_dct_dct_1d2_fu_225_dst_d0,
        q0 => row_outbuf_q0);

    col_outbuf_U : component dct_dct_2d_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_outbuf_address0,
        ce0 => col_outbuf_ce0,
        we0 => col_outbuf_we0,
        d0 => grp_dct_dct_1d2_fu_225_dst_d0,
        q0 => col_outbuf_q0);

    col_inbuf_U : component dct_dct_2d_col_inbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_inbuf_address0,
        ce0 => col_inbuf_ce0,
        we0 => col_inbuf_we0,
        d0 => row_outbuf_q0,
        q0 => col_inbuf_q0,
        address1 => grp_dct_dct_1d2_fu_225_src_address1,
        ce1 => col_inbuf_ce1,
        q1 => col_inbuf_q1);

    grp_dct_dct_1d2_fu_225 : component dct_dct_1d2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dct_dct_1d2_fu_225_ap_start,
        ap_done => grp_dct_dct_1d2_fu_225_ap_done,
        ap_idle => grp_dct_dct_1d2_fu_225_ap_idle,
        ap_ready => grp_dct_dct_1d2_fu_225_ap_ready,
        src_address0 => grp_dct_dct_1d2_fu_225_src_address0,
        src_ce0 => grp_dct_dct_1d2_fu_225_src_ce0,
        src_q0 => grp_dct_dct_1d2_fu_225_src_q0,
        src_address1 => grp_dct_dct_1d2_fu_225_src_address1,
        src_ce1 => grp_dct_dct_1d2_fu_225_src_ce1,
        src_q1 => grp_dct_dct_1d2_fu_225_src_q1,
        tmp_2 => grp_dct_dct_1d2_fu_225_tmp_2,
        dst_address0 => grp_dct_dct_1d2_fu_225_dst_address0,
        dst_ce0 => grp_dct_dct_1d2_fu_225_dst_ce0,
        dst_we0 => grp_dct_dct_1d2_fu_225_dst_we0,
        dst_d0 => grp_dct_dct_1d2_fu_225_dst_d0,
        tmp_21 => grp_dct_dct_1d2_fu_225_tmp_21);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_dct_dct_1d2_fu_225_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_dct_dct_1d2_fu_225_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_fu_254_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and (ap_const_lv1_0 = exitcond2_fu_364_p2)))) then 
                    ap_reg_grp_dct_dct_1d2_fu_225_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_dct_dct_1d2_fu_225_ap_ready)) then 
                    ap_reg_grp_dct_dct_1d2_fu_225_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not((exitcond_flatten_fu_266_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_fu_254_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (exitcond_flatten_fu_266_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_fu_254_p2 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and not((exitcond_flatten_fu_266_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and not((ap_const_lv1_0 = exitcond_flatten1_fu_376_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((ap_const_lv1_0 = exitcond2_fu_364_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_lv1_0 = exitcond_flatten1_fu_376_p2))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((ap_const_lv1_0 = exitcond2_fu_364_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and not((ap_const_lv1_0 = exitcond_flatten1_fu_376_p2))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_fu_254_p2 = ap_const_lv1_0)))) then 
                i_1_reg_169 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_266_p2 = ap_const_lv1_0))) then 
                i_1_reg_169 <= i_6_fu_333_p2;
            end if; 
        end if;
    end process;

    i_2_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((exitcond_flatten_fu_266_p2 = ap_const_lv1_0)))) then 
                i_2_reg_180 <= ap_const_lv4_0;
            elsif ((not((ap_const_logic_0 = grp_dct_dct_1d2_fu_225_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5))) then 
                i_2_reg_180 <= i_5_reg_517;
            end if; 
        end if;
    end process;

    i_3_reg_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((ap_const_lv1_0 = exitcond2_fu_364_p2)))) then 
                i_3_reg_214 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten1_fu_376_p2))) then 
                i_3_reg_214 <= i_7_fu_443_p2;
            end if; 
        end if;
    end process;

    i_reg_135_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_logic_0 = grp_dct_dct_1d2_fu_225_ap_done)))) then 
                i_reg_135 <= i_4_reg_478;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_135 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    indvar_flatten1_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((ap_const_lv1_0 = exitcond2_fu_364_p2)))) then 
                indvar_flatten1_reg_192 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten1_fu_376_p2))) then 
                indvar_flatten1_reg_192 <= indvar_flatten_next1_fu_382_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_fu_254_p2 = ap_const_lv1_0)))) then 
                indvar_flatten_reg_147 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_266_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_147 <= indvar_flatten_next_fu_272_p2;
            end if; 
        end if;
    end process;

    j_1_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((ap_const_lv1_0 = exitcond2_fu_364_p2)))) then 
                j_1_reg_203 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten1_reg_522))) then 
                j_1_reg_203 <= tmp_4_mid2_v_reg_536;
            end if; 
        end if;
    end process;

    j_reg_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_fu_254_p2 = ap_const_lv1_0)))) then 
                j_reg_158 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_483 = ap_const_lv1_0))) then 
                j_reg_158 <= tmp_mid2_v_reg_497;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6)) then
                exitcond_flatten1_reg_522 <= exitcond_flatten1_fu_376_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3)) then
                exitcond_flatten_reg_483 <= exitcond_flatten_fu_266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (exitcond_flatten_fu_266_p2 = ap_const_lv1_0))) then
                i_1_mid2_reg_492 <= i_1_mid2_fu_290_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_lv1_0 = exitcond_flatten1_fu_376_p2))) then
                i_3_mid2_reg_531 <= i_3_mid2_fu_400_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_4_reg_478 <= i_4_fu_260_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4)) then
                i_5_reg_517 <= i_5_fu_370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and (ap_const_lv1_0 = exitcond_flatten1_fu_376_p2))) then
                tmp_4_mid2_v_reg_536 <= tmp_4_mid2_v_fu_408_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_266_p2 = ap_const_lv1_0))) then
                tmp_mid2_v_reg_497 <= tmp_mid2_v_fu_298_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond5_fu_254_p2, exitcond_flatten_fu_266_p2, ap_reg_ppiten_pp0_it0, exitcond2_fu_364_p2, exitcond_flatten1_fu_376_p2, ap_reg_ppiten_pp1_it0, grp_dct_dct_1d2_fu_225_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond5_fu_254_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_logic_0 = grp_dct_dct_1d2_fu_225_ap_done))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_3 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((exitcond_flatten_fu_266_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_4;
                end if;
            when ap_ST_st6_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_364_p2))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_5;
                end if;
            when ap_ST_st7_fsm_5 => 
                if (not((ap_const_logic_0 = grp_dct_dct_1d2_fu_225_ap_done))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_5;
                end if;
            when ap_ST_pp1_stg0_fsm_6 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((ap_const_lv1_0 = exitcond_flatten1_fu_376_p2))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_7;
                end if;
            when ap_ST_st10_fsm_7 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st10_fsm_7)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st10_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_104_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_104 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_115_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_115 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_208_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_208 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_227_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_227 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_25_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_25 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_451_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_451 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_65_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_65 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_76_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_76 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_3_assign_proc : process(ap_sig_76)
    begin
        if (ap_sig_76) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp1_stg0_fsm_6_assign_proc : process(ap_sig_115)
    begin
        if (ap_sig_115) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st10_fsm_7_assign_proc : process(ap_sig_451)
    begin
        if (ap_sig_451) then 
            ap_sig_cseq_ST_st10_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_25)
    begin
        if (ap_sig_25) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_65)
    begin
        if (ap_sig_65) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_208)
    begin
        if (ap_sig_208) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_4_assign_proc : process(ap_sig_104)
    begin
        if (ap_sig_104) then 
            ap_sig_cseq_ST_st6_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_5_assign_proc : process(ap_sig_227)
    begin
        if (ap_sig_227) then 
            ap_sig_cseq_ST_st7_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, grp_dct_dct_1d2_fu_225_src_address0, ap_sig_cseq_ST_st7_fsm_5, tmp_9_cast_fu_359_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            col_inbuf_address0 <= tmp_9_cast_fu_359_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5)) then 
            col_inbuf_address0 <= grp_dct_dct_1d2_fu_225_src_address0;
        else 
            col_inbuf_address0 <= "XXXXXX";
        end if; 
    end process;


    col_inbuf_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, grp_dct_dct_1d2_fu_225_src_ce0, ap_sig_cseq_ST_st7_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            col_inbuf_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5)) then 
            col_inbuf_ce0 <= grp_dct_dct_1d2_fu_225_src_ce0;
        else 
            col_inbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_ce1_assign_proc : process(grp_dct_dct_1d2_fu_225_src_ce1, ap_sig_cseq_ST_st7_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5)) then 
            col_inbuf_ce1 <= grp_dct_dct_1d2_fu_225_src_ce1;
        else 
            col_inbuf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_we0_assign_proc : process(exitcond_flatten_reg_483, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_483 = ap_const_lv1_0)))) then 
            col_inbuf_we0 <= ap_const_logic_1;
        else 
            col_inbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    col_outbuf_address0_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_6, ap_reg_ppiten_pp1_it0, grp_dct_dct_1d2_fu_225_dst_address0, ap_sig_cseq_ST_st7_fsm_5, tmp_15_cast_fu_438_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            col_outbuf_address0 <= tmp_15_cast_fu_438_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5)) then 
            col_outbuf_address0 <= grp_dct_dct_1d2_fu_225_dst_address0;
        else 
            col_outbuf_address0 <= "XXXXXX";
        end if; 
    end process;


    col_outbuf_ce0_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_6, ap_reg_ppiten_pp1_it0, grp_dct_dct_1d2_fu_225_dst_ce0, ap_sig_cseq_ST_st7_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            col_outbuf_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5)) then 
            col_outbuf_ce0 <= grp_dct_dct_1d2_fu_225_dst_ce0;
        else 
            col_outbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_outbuf_we0_assign_proc : process(grp_dct_dct_1d2_fu_225_dst_we0, ap_sig_cseq_ST_st7_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5)) then 
            col_outbuf_we0 <= grp_dct_dct_1d2_fu_225_dst_we0;
        else 
            col_outbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_364_p2 <= "1" when (i_2_reg_180 = ap_const_lv4_8) else "0";
    exitcond4_fu_394_p2 <= "1" when (i_3_reg_214 = ap_const_lv4_8) else "0";
    exitcond5_fu_254_p2 <= "1" when (i_reg_135 = ap_const_lv4_8) else "0";
    exitcond_flatten1_fu_376_p2 <= "1" when (indvar_flatten1_reg_192 = ap_const_lv7_40) else "0";
    exitcond_flatten_fu_266_p2 <= "1" when (indvar_flatten_reg_147 = ap_const_lv7_40) else "0";
    exitcond_fu_284_p2 <= "1" when (i_1_reg_169 = ap_const_lv4_8) else "0";
    grp_dct_dct_1d2_fu_225_ap_start <= ap_reg_grp_dct_dct_1d2_fu_225_ap_start;

    grp_dct_dct_1d2_fu_225_src_q0_assign_proc : process(in_block_q0, col_inbuf_q0, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st7_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5)) then 
            grp_dct_dct_1d2_fu_225_src_q0 <= col_inbuf_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            grp_dct_dct_1d2_fu_225_src_q0 <= in_block_q0;
        else 
            grp_dct_dct_1d2_fu_225_src_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_dct_dct_1d2_fu_225_src_q1_assign_proc : process(in_block_q1, col_inbuf_q1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st7_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5)) then 
            grp_dct_dct_1d2_fu_225_src_q1 <= col_inbuf_q1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            grp_dct_dct_1d2_fu_225_src_q1 <= in_block_q1;
        else 
            grp_dct_dct_1d2_fu_225_src_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_dct_dct_1d2_fu_225_tmp_2_assign_proc : process(i_reg_135, ap_sig_cseq_ST_st3_fsm_2, i_2_reg_180, ap_sig_cseq_ST_st7_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5)) then 
            grp_dct_dct_1d2_fu_225_tmp_2 <= i_2_reg_180;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            grp_dct_dct_1d2_fu_225_tmp_2 <= i_reg_135;
        else 
            grp_dct_dct_1d2_fu_225_tmp_2 <= "XXXX";
        end if; 
    end process;


    grp_dct_dct_1d2_fu_225_tmp_21_assign_proc : process(i_reg_135, ap_sig_cseq_ST_st3_fsm_2, i_2_reg_180, ap_sig_cseq_ST_st7_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5)) then 
            grp_dct_dct_1d2_fu_225_tmp_21 <= i_2_reg_180;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            grp_dct_dct_1d2_fu_225_tmp_21 <= i_reg_135;
        else 
            grp_dct_dct_1d2_fu_225_tmp_21 <= "XXXX";
        end if; 
    end process;

    i_1_mid2_fu_290_p3 <= 
        ap_const_lv4_0 when (exitcond_fu_284_p2(0) = '1') else 
        i_1_reg_169;
    i_3_mid2_fu_400_p3 <= 
        ap_const_lv4_0 when (exitcond4_fu_394_p2(0) = '1') else 
        i_3_reg_214;
    i_4_fu_260_p2 <= std_logic_vector(unsigned(i_reg_135) + unsigned(ap_const_lv4_1));
    i_5_fu_370_p2 <= std_logic_vector(unsigned(i_2_reg_180) + unsigned(ap_const_lv4_1));
    i_6_fu_333_p2 <= std_logic_vector(unsigned(i_1_mid2_fu_290_p3) + unsigned(ap_const_lv4_1));
    i_7_fu_443_p2 <= std_logic_vector(unsigned(i_3_mid2_fu_400_p3) + unsigned(ap_const_lv4_1));
    in_block_address0 <= grp_dct_dct_1d2_fu_225_src_address0;
    in_block_address1 <= grp_dct_dct_1d2_fu_225_src_address1;
    in_block_ce0 <= grp_dct_dct_1d2_fu_225_src_ce0;
    in_block_ce1 <= grp_dct_dct_1d2_fu_225_src_ce1;
    indvar_flatten_next1_fu_382_p2 <= std_logic_vector(unsigned(indvar_flatten1_reg_192) + unsigned(ap_const_lv7_1));
    indvar_flatten_next_fu_272_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_147) + unsigned(ap_const_lv7_1));

    j_1_phi_fu_207_p4_assign_proc : process(j_1_reg_203, exitcond_flatten1_reg_522, ap_sig_cseq_ST_pp1_stg0_fsm_6, ap_reg_ppiten_pp1_it1, tmp_4_mid2_v_reg_536)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten1_reg_522))) then 
            j_1_phi_fu_207_p4 <= tmp_4_mid2_v_reg_536;
        else 
            j_1_phi_fu_207_p4 <= j_1_reg_203;
        end if; 
    end process;

    j_2_fu_278_p2 <= std_logic_vector(unsigned(j_phi_fu_162_p4) + unsigned(ap_const_lv4_1));
    j_3_fu_388_p2 <= std_logic_vector(unsigned(j_1_phi_fu_207_p4) + unsigned(ap_const_lv4_1));

    j_phi_fu_162_p4_assign_proc : process(j_reg_158, exitcond_flatten_reg_483, ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it1, tmp_mid2_v_reg_497)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_483 = ap_const_lv1_0))) then 
            j_phi_fu_162_p4 <= tmp_mid2_v_reg_497;
        else 
            j_phi_fu_162_p4 <= j_reg_158;
        end if; 
    end process;

    out_block_address0 <= tmp_12_cast_fu_469_p1(6 - 1 downto 0);

    out_block_ce0_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_6, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            out_block_ce0 <= ap_const_logic_1;
        else 
            out_block_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_block_d0 <= col_outbuf_q0;

    out_block_we0_assign_proc : process(exitcond_flatten1_reg_522, ap_sig_cseq_ST_pp1_stg0_fsm_6, ap_reg_ppiten_pp1_it1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_6) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_flatten1_reg_522)))) then 
            out_block_we0 <= ap_const_logic_1;
        else 
            out_block_we0 <= ap_const_logic_0;
        end if; 
    end process;


    row_outbuf_address0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it0, grp_dct_dct_1d2_fu_225_dst_address0, ap_sig_cseq_ST_st3_fsm_2, tmp_7_cast_fu_328_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            row_outbuf_address0 <= tmp_7_cast_fu_328_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            row_outbuf_address0 <= grp_dct_dct_1d2_fu_225_dst_address0;
        else 
            row_outbuf_address0 <= "XXXXXX";
        end if; 
    end process;


    row_outbuf_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_3, ap_reg_ppiten_pp0_it0, grp_dct_dct_1d2_fu_225_dst_ce0, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_3) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            row_outbuf_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            row_outbuf_ce0 <= grp_dct_dct_1d2_fu_225_dst_ce0;
        else 
            row_outbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    row_outbuf_we0_assign_proc : process(grp_dct_dct_1d2_fu_225_dst_we0, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            row_outbuf_we0 <= grp_dct_dct_1d2_fu_225_dst_we0;
        else 
            row_outbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_11_cast_fu_456_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_449_p3),8));
    tmp_12_cast_fu_469_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_463_p2),64));
    tmp_14_cast_fu_428_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_420_p3),8));
    tmp_15_cast_fu_438_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_432_p2),64));
    tmp_1_cast_fu_346_p1 <= std_logic_vector(resize(unsigned(tmp_fu_339_p3),8));
    tmp_1_fu_463_p2 <= std_logic_vector(unsigned(tmp_5_cast_fu_460_p1) + unsigned(tmp_11_cast_fu_456_p1));
    tmp_2_fu_310_p3 <= (i_1_mid2_fu_290_p3 & ap_const_lv3_0);
    tmp_3_cast_fu_350_p1 <= std_logic_vector(resize(unsigned(i_1_mid2_reg_492),8));
    tmp_3_fu_420_p3 <= (i_3_mid2_fu_400_p3 & ap_const_lv3_0);
    tmp_4_cast_fu_318_p1 <= std_logic_vector(resize(unsigned(tmp_2_fu_310_p3),8));
    tmp_4_fu_432_p2 <= std_logic_vector(unsigned(tmp_4_mid2_cast_fu_416_p1) + unsigned(tmp_14_cast_fu_428_p1));
    tmp_4_mid2_cast_fu_416_p1 <= std_logic_vector(resize(unsigned(tmp_4_mid2_v_fu_408_p3),8));
    tmp_4_mid2_v_fu_408_p3 <= 
        j_3_fu_388_p2 when (exitcond4_fu_394_p2(0) = '1') else 
        j_1_phi_fu_207_p4;
    tmp_5_cast_fu_460_p1 <= std_logic_vector(resize(unsigned(i_3_mid2_reg_531),8));
    tmp_7_cast_fu_328_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_322_p2),64));
    tmp_7_fu_322_p2 <= std_logic_vector(unsigned(tmp_mid2_cast_fu_306_p1) + unsigned(tmp_4_cast_fu_318_p1));
    tmp_9_cast_fu_359_p1 <= std_logic_vector(resize(unsigned(tmp_9_fu_353_p2),64));
    tmp_9_fu_353_p2 <= std_logic_vector(unsigned(tmp_3_cast_fu_350_p1) + unsigned(tmp_1_cast_fu_346_p1));
    tmp_fu_339_p3 <= (tmp_mid2_v_reg_497 & ap_const_lv3_0);
    tmp_mid2_cast_fu_306_p1 <= std_logic_vector(resize(unsigned(tmp_mid2_v_fu_298_p3),8));
    tmp_mid2_v_fu_298_p3 <= 
        j_2_fu_278_p2 when (exitcond_fu_284_p2(0) = '1') else 
        j_phi_fu_162_p4;
    tmp_s_fu_449_p3 <= (tmp_4_mid2_v_reg_536 & ap_const_lv3_0);
end behav;
