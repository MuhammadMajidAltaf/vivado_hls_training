-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dct_Loop_Row_DCT_Loop_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    buf_2d_in_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_0_ce0 : OUT STD_LOGIC;
    buf_2d_in_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_1_ce0 : OUT STD_LOGIC;
    buf_2d_in_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_2_ce0 : OUT STD_LOGIC;
    buf_2d_in_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_3_ce0 : OUT STD_LOGIC;
    buf_2d_in_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_4_ce0 : OUT STD_LOGIC;
    buf_2d_in_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_5_ce0 : OUT STD_LOGIC;
    buf_2d_in_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_6_ce0 : OUT STD_LOGIC;
    buf_2d_in_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    buf_2d_in_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    buf_2d_in_7_ce0 : OUT STD_LOGIC;
    buf_2d_in_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    row_outbuf_i_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    row_outbuf_i_ce0 : OUT STD_LOGIC;
    row_outbuf_i_we0 : OUT STD_LOGIC;
    row_outbuf_i_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of dct_Loop_Row_DCT_Loop_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv29_1000 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000001000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_21 : BOOLEAN;
    signal dct_coeff_table_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_coeff_table_0_ce0 : STD_LOGIC;
    signal dct_coeff_table_0_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal dct_coeff_table_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_coeff_table_1_ce0 : STD_LOGIC;
    signal dct_coeff_table_1_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal dct_coeff_table_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_coeff_table_2_ce0 : STD_LOGIC;
    signal dct_coeff_table_2_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal dct_coeff_table_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_coeff_table_3_ce0 : STD_LOGIC;
    signal dct_coeff_table_3_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal dct_coeff_table_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_coeff_table_4_ce0 : STD_LOGIC;
    signal dct_coeff_table_4_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal dct_coeff_table_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_coeff_table_5_ce0 : STD_LOGIC;
    signal dct_coeff_table_5_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal dct_coeff_table_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_coeff_table_6_ce0 : STD_LOGIC;
    signal dct_coeff_table_6_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal dct_coeff_table_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_coeff_table_7_ce0 : STD_LOGIC;
    signal dct_coeff_table_7_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal k_i_reg_285 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond5_i_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_148 : BOOLEAN;
    signal i_fu_302_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_503 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_cast_fu_328_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_cast_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2d_in_0_addr_reg_513 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_1_addr_reg_518 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_2_addr_reg_523 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_3_addr_reg_528 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_4_addr_reg_533 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_5_addr_reg_538 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_6_addr_reg_543 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_7_addr_reg_548 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond1_i_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_reg_553 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_180 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_fu_338_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_fu_360_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_reg_562 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_3_reg_562_pp0_iter1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_3_reg_562_pp0_iter2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_3_reg_562_pp0_iter3 : STD_LOGIC_VECTOR (7 downto 0);
    signal dct_coeff_table_0_load_reg_607 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_reg_ppstg_dct_coeff_table_0_load_reg_607_pp0_iter2 : STD_LOGIC_VECTOR (13 downto 0);
    signal dct_coeff_table_1_load_reg_612 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_2d_in_1_load_reg_617 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_coeff_table_2_load_reg_622 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_reg_ppstg_dct_coeff_table_2_load_reg_622_pp0_iter2 : STD_LOGIC_VECTOR (14 downto 0);
    signal dct_coeff_table_3_load_reg_627 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_2d_in_3_load_reg_632 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_coeff_table_4_load_reg_637 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_reg_ppstg_dct_coeff_table_4_load_reg_637_pp0_iter2 : STD_LOGIC_VECTOR (14 downto 0);
    signal dct_coeff_table_5_load_reg_642 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_2d_in_5_load_reg_647 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_coeff_table_6_load_reg_652 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_2d_in_6_load_reg_657 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_coeff_table_7_load_reg_662 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_2d_in_7_load_reg_667 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_0_load_reg_672 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_1_i_fu_493_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_6_1_i_reg_677 : STD_LOGIC_VECTOR (28 downto 0);
    signal buf_2d_in_2_load_reg_682 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_3_i_fu_487_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_6_3_i_reg_687 : STD_LOGIC_VECTOR (28 downto 0);
    signal buf_2d_in_4_load_reg_692 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_5_i_fu_481_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_6_5_i_reg_697 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_441_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp5_reg_702 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_3_i_reg_707 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_0_i_reg_274 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_269 : BOOLEAN;
    signal tmp_81_cast_i_fu_308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_fu_344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_cast_fu_437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_320_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_i_cast_fu_356_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_473_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_465_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_457_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_fu_413_p2 : STD_LOGIC_VECTOR (28 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_fu_413_p2 : signal is "no";
    signal tmp3_fu_417_p2 : STD_LOGIC_VECTOR (28 downto 0);
    attribute use_dsp48 of tmp3_fu_417_p2 : signal is "no";
    signal tmp_i_17_fu_421_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_448_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_448_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_473_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_473_p00 : STD_LOGIC_VECTOR (28 downto 0);

    component dct_mac_muladd_15s_16s_29s_29_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component dct_mac_muladd_15s_16s_14ns_29_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component dct_mac_muladd_14ns_16s_29s_29_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (13 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component dct_mul_mul_15s_16s_29_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_7 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    dct_coeff_table_0_U : component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_0
    generic map (
        DataWidth => 14,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dct_coeff_table_0_address0,
        ce0 => dct_coeff_table_0_ce0,
        q0 => dct_coeff_table_0_q0);

    dct_coeff_table_1_U : component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_1
    generic map (
        DataWidth => 15,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dct_coeff_table_1_address0,
        ce0 => dct_coeff_table_1_ce0,
        q0 => dct_coeff_table_1_q0);

    dct_coeff_table_2_U : component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_2
    generic map (
        DataWidth => 15,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dct_coeff_table_2_address0,
        ce0 => dct_coeff_table_2_ce0,
        q0 => dct_coeff_table_2_q0);

    dct_coeff_table_3_U : component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_3
    generic map (
        DataWidth => 15,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dct_coeff_table_3_address0,
        ce0 => dct_coeff_table_3_ce0,
        q0 => dct_coeff_table_3_q0);

    dct_coeff_table_4_U : component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_4
    generic map (
        DataWidth => 15,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dct_coeff_table_4_address0,
        ce0 => dct_coeff_table_4_ce0,
        q0 => dct_coeff_table_4_q0);

    dct_coeff_table_5_U : component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_5
    generic map (
        DataWidth => 15,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dct_coeff_table_5_address0,
        ce0 => dct_coeff_table_5_ce0,
        q0 => dct_coeff_table_5_q0);

    dct_coeff_table_6_U : component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_6
    generic map (
        DataWidth => 15,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dct_coeff_table_6_address0,
        ce0 => dct_coeff_table_6_ce0,
        q0 => dct_coeff_table_6_q0);

    dct_coeff_table_7_U : component dct_Loop_Row_DCT_Loop_proc_dct_coeff_table_7
    generic map (
        DataWidth => 15,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dct_coeff_table_7_address0,
        ce0 => dct_coeff_table_7_ce0,
        q0 => dct_coeff_table_7_q0);

    dct_mac_muladd_15s_16s_29s_29_1_U9 : component dct_mac_muladd_15s_16s_29s_29_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        din0 => dct_coeff_table_6_load_reg_652,
        din1 => buf_2d_in_6_load_reg_657,
        din2 => grp_fu_448_p3,
        dout => grp_fu_441_p3);

    dct_mac_muladd_15s_16s_14ns_29_1_U10 : component dct_mac_muladd_15s_16s_14ns_29_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        din2_WIDTH => 14,
        dout_WIDTH => 29)
    port map (
        din0 => dct_coeff_table_7_load_reg_662,
        din1 => buf_2d_in_7_load_reg_667,
        din2 => grp_fu_448_p2,
        dout => grp_fu_448_p3);

    dct_mac_muladd_15s_16s_29s_29_1_U11 : component dct_mac_muladd_15s_16s_29s_29_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        din0 => ap_reg_ppstg_dct_coeff_table_4_load_reg_637_pp0_iter2,
        din1 => buf_2d_in_4_load_reg_692,
        din2 => tmp_6_5_i_reg_697,
        dout => grp_fu_457_p3);

    dct_mac_muladd_15s_16s_29s_29_1_U12 : component dct_mac_muladd_15s_16s_29s_29_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        din0 => ap_reg_ppstg_dct_coeff_table_2_load_reg_622_pp0_iter2,
        din1 => buf_2d_in_2_load_reg_682,
        din2 => tmp_6_3_i_reg_687,
        dout => grp_fu_465_p3);

    dct_mac_muladd_14ns_16s_29s_29_1_U13 : component dct_mac_muladd_14ns_16s_29s_29_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 14,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        din0 => grp_fu_473_p0,
        din1 => buf_2d_in_0_load_reg_672,
        din2 => tmp_6_1_i_reg_677,
        dout => grp_fu_473_p3);

    dct_mul_mul_15s_16s_29_1_U14 : component dct_mul_mul_15s_16s_29_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => dct_coeff_table_5_load_reg_642,
        din1 => buf_2d_in_5_load_reg_647,
        dout => tmp_6_5_i_fu_481_p2);

    dct_mul_mul_15s_16s_29_1_U15 : component dct_mul_mul_15s_16s_29_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => dct_coeff_table_3_load_reg_627,
        din1 => buf_2d_in_3_load_reg_632,
        dout => tmp_6_3_i_fu_487_p2);

    dct_mul_mul_15s_16s_29_1_U16 : component dct_mul_mul_15s_16s_29_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => dct_coeff_table_1_load_reg_612,
        din1 => buf_2d_in_1_load_reg_617,
        dout => tmp_6_1_i_fu_493_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_i_fu_296_p2 = ap_const_lv1_0)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_const_lv1_0 = exitcond1_i_fu_332_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_i_fu_296_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_i_fu_332_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_i_fu_296_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((ap_const_lv1_0 = exitcond1_i_fu_332_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
            end if;
        end if;
    end process;


    i_0_i_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_i_fu_332_p2)))) then 
                i_0_i_reg_274 <= i_reg_503;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_269))) then 
                i_0_i_reg_274 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    k_i_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_lv1_0 = exitcond1_i_fu_332_p2))) then 
                k_i_reg_285 <= k_fu_338_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_i_fu_296_p2 = ap_const_lv1_0))) then 
                k_i_reg_285 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_true = ap_true)) then
                ap_reg_ppstg_dct_coeff_table_0_load_reg_607_pp0_iter2 <= dct_coeff_table_0_load_reg_607;
                ap_reg_ppstg_dct_coeff_table_2_load_reg_622_pp0_iter2 <= dct_coeff_table_2_load_reg_622;
                ap_reg_ppstg_dct_coeff_table_4_load_reg_637_pp0_iter2 <= dct_coeff_table_4_load_reg_637;
                ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter2 <= ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter1;
                ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter3 <= ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter2;
                ap_reg_ppstg_tmp_3_reg_562_pp0_iter2 <= ap_reg_ppstg_tmp_3_reg_562_pp0_iter1;
                ap_reg_ppstg_tmp_3_reg_562_pp0_iter3 <= ap_reg_ppstg_tmp_3_reg_562_pp0_iter2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2)) then
                ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter1 <= exitcond1_i_reg_553;
                ap_reg_ppstg_tmp_3_reg_562_pp0_iter1 <= tmp_3_reg_562;
                exitcond1_i_reg_553 <= exitcond1_i_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond5_i_fu_296_p2 = ap_const_lv1_0))) then
                buf_2d_in_0_addr_reg_513 <= tmp_81_cast_i_fu_308_p1(3 - 1 downto 0);
                buf_2d_in_1_addr_reg_518 <= tmp_81_cast_i_fu_308_p1(3 - 1 downto 0);
                buf_2d_in_2_addr_reg_523 <= tmp_81_cast_i_fu_308_p1(3 - 1 downto 0);
                buf_2d_in_3_addr_reg_528 <= tmp_81_cast_i_fu_308_p1(3 - 1 downto 0);
                buf_2d_in_4_addr_reg_533 <= tmp_81_cast_i_fu_308_p1(3 - 1 downto 0);
                buf_2d_in_5_addr_reg_538 <= tmp_81_cast_i_fu_308_p1(3 - 1 downto 0);
                buf_2d_in_6_addr_reg_543 <= tmp_81_cast_i_fu_308_p1(3 - 1 downto 0);
                buf_2d_in_7_addr_reg_548 <= tmp_81_cast_i_fu_308_p1(3 - 1 downto 0);
                    tmp_16_cast_reg_508(6 downto 3) <= tmp_16_cast_fu_328_p1(6 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter1)) then
                buf_2d_in_0_load_reg_672 <= buf_2d_in_0_q0;
                buf_2d_in_2_load_reg_682 <= buf_2d_in_2_q0;
                buf_2d_in_4_load_reg_692 <= buf_2d_in_4_q0;
                tmp_6_1_i_reg_677 <= tmp_6_1_i_fu_493_p2;
                tmp_6_3_i_reg_687 <= tmp_6_3_i_fu_487_p2;
                tmp_6_5_i_reg_697 <= tmp_6_5_i_fu_481_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_i_reg_553))) then
                buf_2d_in_1_load_reg_617 <= buf_2d_in_1_q0;
                buf_2d_in_3_load_reg_632 <= buf_2d_in_3_q0;
                buf_2d_in_5_load_reg_647 <= buf_2d_in_5_q0;
                buf_2d_in_6_load_reg_657 <= buf_2d_in_6_q0;
                buf_2d_in_7_load_reg_667 <= buf_2d_in_7_q0;
                dct_coeff_table_0_load_reg_607 <= dct_coeff_table_0_q0;
                dct_coeff_table_1_load_reg_612 <= dct_coeff_table_1_q0;
                dct_coeff_table_2_load_reg_622 <= dct_coeff_table_2_q0;
                dct_coeff_table_3_load_reg_627 <= dct_coeff_table_3_q0;
                dct_coeff_table_4_load_reg_637 <= dct_coeff_table_4_q0;
                dct_coeff_table_5_load_reg_642 <= dct_coeff_table_5_q0;
                dct_coeff_table_6_load_reg_652 <= dct_coeff_table_6_q0;
                dct_coeff_table_7_load_reg_662 <= dct_coeff_table_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_reg_503 <= i_fu_302_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter1))) then
                tmp5_reg_702 <= grp_fu_441_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter2)) then
                tmp_3_i_reg_707 <= tmp_i_17_fu_421_p2(28 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_lv1_0 = exitcond1_i_fu_332_p2))) then
                tmp_3_reg_562 <= tmp_3_fu_360_p2;
            end if;
        end if;
    end process;
    tmp_16_cast_reg_508(2 downto 0) <= "000";
    tmp_16_cast_reg_508(7) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, exitcond5_i_fu_296_p2, exitcond1_i_fu_332_p2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_sig_269)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_269)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond5_i_fu_296_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_i_fu_332_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_i_fu_332_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_done_reg, exitcond5_i_fu_296_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_i_fu_296_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond5_i_fu_296_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond5_i_fu_296_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_148_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_148 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_180_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_180 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_21_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_21 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_269_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_269 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_180)
    begin
        if (ap_sig_180) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_21)
    begin
        if (ap_sig_21) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_148)
    begin
        if (ap_sig_148) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_0_address0 <= buf_2d_in_0_addr_reg_513;

    buf_2d_in_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            buf_2d_in_0_ce0 <= ap_const_logic_1;
        else 
            buf_2d_in_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_1_address0 <= buf_2d_in_1_addr_reg_518;

    buf_2d_in_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            buf_2d_in_1_ce0 <= ap_const_logic_1;
        else 
            buf_2d_in_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_2_address0 <= buf_2d_in_2_addr_reg_523;

    buf_2d_in_2_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            buf_2d_in_2_ce0 <= ap_const_logic_1;
        else 
            buf_2d_in_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_3_address0 <= buf_2d_in_3_addr_reg_528;

    buf_2d_in_3_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            buf_2d_in_3_ce0 <= ap_const_logic_1;
        else 
            buf_2d_in_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_4_address0 <= buf_2d_in_4_addr_reg_533;

    buf_2d_in_4_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            buf_2d_in_4_ce0 <= ap_const_logic_1;
        else 
            buf_2d_in_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_5_address0 <= buf_2d_in_5_addr_reg_538;

    buf_2d_in_5_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            buf_2d_in_5_ce0 <= ap_const_logic_1;
        else 
            buf_2d_in_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_6_address0 <= buf_2d_in_6_addr_reg_543;

    buf_2d_in_6_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            buf_2d_in_6_ce0 <= ap_const_logic_1;
        else 
            buf_2d_in_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_in_7_address0 <= buf_2d_in_7_addr_reg_548;

    buf_2d_in_7_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            buf_2d_in_7_ce0 <= ap_const_logic_1;
        else 
            buf_2d_in_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dct_coeff_table_0_address0 <= tmp_i_fu_344_p1(3 - 1 downto 0);

    dct_coeff_table_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            dct_coeff_table_0_ce0 <= ap_const_logic_1;
        else 
            dct_coeff_table_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dct_coeff_table_1_address0 <= tmp_i_fu_344_p1(3 - 1 downto 0);

    dct_coeff_table_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            dct_coeff_table_1_ce0 <= ap_const_logic_1;
        else 
            dct_coeff_table_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dct_coeff_table_2_address0 <= tmp_i_fu_344_p1(3 - 1 downto 0);

    dct_coeff_table_2_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            dct_coeff_table_2_ce0 <= ap_const_logic_1;
        else 
            dct_coeff_table_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dct_coeff_table_3_address0 <= tmp_i_fu_344_p1(3 - 1 downto 0);

    dct_coeff_table_3_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            dct_coeff_table_3_ce0 <= ap_const_logic_1;
        else 
            dct_coeff_table_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dct_coeff_table_4_address0 <= tmp_i_fu_344_p1(3 - 1 downto 0);

    dct_coeff_table_4_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            dct_coeff_table_4_ce0 <= ap_const_logic_1;
        else 
            dct_coeff_table_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dct_coeff_table_5_address0 <= tmp_i_fu_344_p1(3 - 1 downto 0);

    dct_coeff_table_5_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            dct_coeff_table_5_ce0 <= ap_const_logic_1;
        else 
            dct_coeff_table_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dct_coeff_table_6_address0 <= tmp_i_fu_344_p1(3 - 1 downto 0);

    dct_coeff_table_6_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            dct_coeff_table_6_ce0 <= ap_const_logic_1;
        else 
            dct_coeff_table_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dct_coeff_table_7_address0 <= tmp_i_fu_344_p1(3 - 1 downto 0);

    dct_coeff_table_7_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            dct_coeff_table_7_ce0 <= ap_const_logic_1;
        else 
            dct_coeff_table_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_i_fu_332_p2 <= "1" when (k_i_reg_285 = ap_const_lv4_8) else "0";
    exitcond5_i_fu_296_p2 <= "1" when (i_0_i_reg_274 = ap_const_lv4_8) else "0";
    grp_fu_448_p2 <= ap_const_lv29_1000(14 - 1 downto 0);
    grp_fu_473_p0 <= grp_fu_473_p00(14 - 1 downto 0);
    grp_fu_473_p00 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_dct_coeff_table_0_load_reg_607_pp0_iter2),29));
    i_fu_302_p2 <= std_logic_vector(unsigned(i_0_i_reg_274) + unsigned(ap_const_lv4_1));
    k_fu_338_p2 <= std_logic_vector(unsigned(k_i_reg_285) + unsigned(ap_const_lv4_1));
    row_outbuf_i_address0 <= tmp_17_cast_fu_437_p1(6 - 1 downto 0);

    row_outbuf_i_ce0_assign_proc : process(ap_reg_ppiten_pp0_it4)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) then 
            row_outbuf_i_ce0 <= ap_const_logic_1;
        else 
            row_outbuf_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    row_outbuf_i_d0 <= tmp_3_i_reg_707;

    row_outbuf_i_we0_assign_proc : process(ap_reg_ppiten_pp0_it4, ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter3)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_i_reg_553_pp0_iter3)))) then 
            row_outbuf_i_we0 <= ap_const_logic_1;
        else 
            row_outbuf_i_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp3_fu_417_p2 <= std_logic_vector(signed(grp_fu_457_p3) + signed(tmp5_reg_702));
    tmp_16_cast_fu_328_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_320_p3),8));
    tmp_17_cast_fu_437_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_3_reg_562_pp0_iter3),64));
    tmp_3_fu_360_p2 <= std_logic_vector(unsigned(tmp_16_cast_reg_508) + unsigned(tmp_i_cast_fu_356_p1));
    tmp_81_cast_i_fu_308_p1 <= std_logic_vector(resize(unsigned(i_0_i_reg_274),64));
    tmp_fu_413_p2 <= std_logic_vector(signed(grp_fu_473_p3) + signed(grp_fu_465_p3));
    tmp_i_17_fu_421_p2 <= std_logic_vector(unsigned(tmp_fu_413_p2) + unsigned(tmp3_fu_417_p2));
    tmp_i_cast_fu_356_p1 <= std_logic_vector(resize(unsigned(k_i_reg_285),8));
    tmp_i_fu_344_p1 <= std_logic_vector(resize(unsigned(k_i_reg_285),64));
    tmp_s_fu_320_p3 <= (i_0_i_reg_274 & ap_const_lv3_0);
end behav;
