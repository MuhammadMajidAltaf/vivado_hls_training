// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yuv_filter_yuv_scale (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_channels_ch1_dout,
        in_channels_ch1_empty_n,
        in_channels_ch1_read,
        in_channels_ch2_dout,
        in_channels_ch2_empty_n,
        in_channels_ch2_read,
        in_channels_ch3_dout,
        in_channels_ch3_empty_n,
        in_channels_ch3_read,
        in_width_dout,
        in_width_empty_n,
        in_width_read,
        in_height_dout,
        in_height_empty_n,
        in_height_read,
        out_channels_ch1_din,
        out_channels_ch1_full_n,
        out_channels_ch1_write,
        out_channels_ch2_din,
        out_channels_ch2_full_n,
        out_channels_ch2_write,
        out_channels_ch3_din,
        out_channels_ch3_full_n,
        out_channels_ch3_write,
        out_width_din,
        out_width_full_n,
        out_width_write,
        out_height_din,
        out_height_full_n,
        out_height_write,
        Y_scale_dout,
        Y_scale_empty_n,
        Y_scale_read,
        U_scale_dout,
        U_scale_empty_n,
        U_scale_read,
        V_scale_dout,
        V_scale_empty_n,
        V_scale_read
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st7_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_3 = 32'b11;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] in_channels_ch1_dout;
input   in_channels_ch1_empty_n;
output   in_channels_ch1_read;
input  [7:0] in_channels_ch2_dout;
input   in_channels_ch2_empty_n;
output   in_channels_ch2_read;
input  [7:0] in_channels_ch3_dout;
input   in_channels_ch3_empty_n;
output   in_channels_ch3_read;
input  [15:0] in_width_dout;
input   in_width_empty_n;
output   in_width_read;
input  [15:0] in_height_dout;
input   in_height_empty_n;
output   in_height_read;
output  [7:0] out_channels_ch1_din;
input   out_channels_ch1_full_n;
output   out_channels_ch1_write;
output  [7:0] out_channels_ch2_din;
input   out_channels_ch2_full_n;
output   out_channels_ch2_write;
output  [7:0] out_channels_ch3_din;
input   out_channels_ch3_full_n;
output   out_channels_ch3_write;
output  [15:0] out_width_din;
input   out_width_full_n;
output   out_width_write;
output  [15:0] out_height_din;
input   out_height_full_n;
output   out_height_write;
input  [7:0] Y_scale_dout;
input   Y_scale_empty_n;
output   Y_scale_read;
input  [7:0] U_scale_dout;
input   U_scale_empty_n;
output   U_scale_read;
input  [7:0] V_scale_dout;
input   V_scale_empty_n;
output   V_scale_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_channels_ch1_read;
reg in_channels_ch2_read;
reg in_channels_ch3_read;
reg in_width_read;
reg in_height_read;
reg out_channels_ch1_write;
reg out_channels_ch2_write;
reg out_channels_ch3_write;
reg out_width_write;
reg out_height_write;
reg Y_scale_read;
reg U_scale_read;
reg V_scale_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_22;
reg    in_channels_ch1_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_87;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg   [0:0] exitcond_flatten_reg_305;
reg    in_channels_ch2_blk_n;
reg    in_channels_ch3_blk_n;
reg    in_width_blk_n;
reg    in_height_blk_n;
reg    out_channels_ch1_blk_n;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2;
reg    out_channels_ch2_blk_n;
reg    out_channels_ch3_blk_n;
reg    out_width_blk_n;
reg    out_height_blk_n;
reg    Y_scale_blk_n;
reg    U_scale_blk_n;
reg    V_scale_blk_n;
reg   [31:0] indvar_flatten_reg_163;
reg   [7:0] Y_scale_read_reg_260;
reg    ap_sig_141;
reg   [7:0] U_scale_read_reg_265;
reg   [7:0] V_scale_read_reg_270;
reg   [15:0] width_reg_275;
reg   [15:0] height_reg_280;
wire   [14:0] tmp_cast_i_fu_174_p1;
reg   [14:0] tmp_cast_i_reg_285;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_159;
wire   [14:0] tmp_1_cast_i_fu_177_p1;
reg   [14:0] tmp_1_cast_i_reg_290;
wire   [14:0] tmp_2_cast_i_fu_180_p1;
reg   [14:0] tmp_2_cast_i_reg_295;
wire   [31:0] bound_fu_254_p2;
reg   [31:0] bound_reg_300;
wire   [0:0] exitcond_flatten_fu_189_p2;
reg    ap_sig_176;
reg    ap_sig_186;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter1;
wire   [31:0] indvar_flatten_next_fu_194_p2;
reg   [7:0] Y_reg_314;
reg   [7:0] U_reg_319;
reg   [7:0] V_reg_324;
reg   [7:0] tmp_10_i_reg_329;
reg   [7:0] tmp_11_i_reg_334;
reg   [7:0] tmp_12_i_reg_339;
wire   [7:0] tmp_7_i_fu_203_p0;
wire   [7:0] tmp_7_i_fu_203_p1;
wire   [7:0] tmp_i_fu_211_p0;
wire   [7:0] tmp_i_fu_211_p1;
wire   [7:0] tmp_8_i_fu_219_p0;
wire   [7:0] tmp_8_i_fu_219_p1;
wire   [14:0] tmp_7_i_fu_203_p2;
wire   [14:0] tmp_i_fu_211_p2;
wire   [14:0] tmp_8_i_fu_219_p2;
wire   [15:0] bound_fu_254_p0;
wire   [15:0] bound_fu_254_p1;
reg    ap_sig_cseq_ST_st7_fsm_3;
reg    ap_sig_298;
reg   [3:0] ap_NS_fsm;
wire   [31:0] bound_fu_254_p00;
wire   [31:0] bound_fu_254_p10;
wire   [14:0] tmp_7_i_fu_203_p00;
wire   [14:0] tmp_8_i_fu_219_p00;
wire   [14:0] tmp_i_fu_211_p00;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
end

yuv_filter_mul_mul_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yuv_filter_mul_mul_16ns_16ns_32_1_U22(
    .din0(bound_fu_254_p0),
    .din1(bound_fu_254_p1),
    .dout(bound_fu_254_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_3)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)) & ~(1'b0 == exitcond_flatten_fu_189_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)) & (1'b0 == exitcond_flatten_fu_189_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)) & ~(1'b0 == exitcond_flatten_fu_189_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            ap_reg_ppiten_pp0_it3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)) & (1'b0 == exitcond_flatten_fu_189_p2))) begin
        indvar_flatten_reg_163 <= indvar_flatten_next_fu_194_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        indvar_flatten_reg_163 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_flatten_reg_305 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)))) begin
        U_reg_319 <= in_channels_ch2_dout;
        V_reg_324 <= in_channels_ch3_dout;
        Y_reg_314 <= in_channels_ch1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_141)) begin
        U_scale_read_reg_265 <= U_scale_dout;
        V_scale_read_reg_270 <= V_scale_dout;
        Y_scale_read_reg_260 <= Y_scale_dout;
        height_reg_280 <= in_height_dout;
        width_reg_275 <= in_width_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)))) begin
        ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter1 <= exitcond_flatten_reg_305;
        exitcond_flatten_reg_305 <= exitcond_flatten_fu_189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186))) begin
        ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2 <= ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        bound_reg_300 <= bound_fu_254_p2;
        tmp_1_cast_i_reg_290[7 : 0] <= tmp_1_cast_i_fu_177_p1[7 : 0];
        tmp_2_cast_i_reg_295[7 : 0] <= tmp_2_cast_i_fu_180_p1[7 : 0];
        tmp_cast_i_reg_285[7 : 0] <= tmp_cast_i_fu_174_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter1))) begin
        tmp_10_i_reg_329 <= {{tmp_7_i_fu_203_p2[ap_const_lv32_E : ap_const_lv32_7]}};
        tmp_11_i_reg_334 <= {{tmp_i_fu_211_p2[ap_const_lv32_E : ap_const_lv32_7]}};
        tmp_12_i_reg_339 <= {{tmp_8_i_fu_219_p2[ap_const_lv32_E : ap_const_lv32_7]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        U_scale_blk_n = U_scale_empty_n;
    end else begin
        U_scale_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_141)) begin
        U_scale_read = 1'b1;
    end else begin
        U_scale_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        V_scale_blk_n = V_scale_empty_n;
    end else begin
        V_scale_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_141)) begin
        V_scale_read = 1'b1;
    end else begin
        V_scale_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        Y_scale_blk_n = Y_scale_empty_n;
    end else begin
        Y_scale_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_141)) begin
        Y_scale_read = 1'b1;
    end else begin
        Y_scale_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | (1'b1 == ap_sig_cseq_ST_st7_fsm_3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_87) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_159) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_298) begin
        ap_sig_cseq_ST_st7_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_305 == 1'b0))) begin
        in_channels_ch1_blk_n = in_channels_ch1_empty_n;
    end else begin
        in_channels_ch1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_305 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)))) begin
        in_channels_ch1_read = 1'b1;
    end else begin
        in_channels_ch1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_305 == 1'b0))) begin
        in_channels_ch2_blk_n = in_channels_ch2_empty_n;
    end else begin
        in_channels_ch2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_305 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)))) begin
        in_channels_ch2_read = 1'b1;
    end else begin
        in_channels_ch2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_305 == 1'b0))) begin
        in_channels_ch3_blk_n = in_channels_ch3_empty_n;
    end else begin
        in_channels_ch3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_305 == 1'b0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)))) begin
        in_channels_ch3_read = 1'b1;
    end else begin
        in_channels_ch3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        in_height_blk_n = in_height_empty_n;
    end else begin
        in_height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_141)) begin
        in_height_read = 1'b1;
    end else begin
        in_height_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        in_width_blk_n = in_width_empty_n;
    end else begin
        in_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_141)) begin
        in_width_read = 1'b1;
    end else begin
        in_width_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it3) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2))) begin
        out_channels_ch1_blk_n = out_channels_ch1_full_n;
    end else begin
        out_channels_ch1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it3) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)))) begin
        out_channels_ch1_write = 1'b1;
    end else begin
        out_channels_ch1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it3) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2))) begin
        out_channels_ch2_blk_n = out_channels_ch2_full_n;
    end else begin
        out_channels_ch2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it3) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)))) begin
        out_channels_ch2_write = 1'b1;
    end else begin
        out_channels_ch2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it3) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2))) begin
        out_channels_ch3_blk_n = out_channels_ch3_full_n;
    end else begin
        out_channels_ch3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it3) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)))) begin
        out_channels_ch3_write = 1'b1;
    end else begin
        out_channels_ch3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        out_height_blk_n = out_height_full_n;
    end else begin
        out_height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_141)) begin
        out_height_write = 1'b1;
    end else begin
        out_height_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        out_width_blk_n = out_width_full_n;
    end else begin
        out_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_141)) begin
        out_width_write = 1'b1;
    end else begin
        out_width_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_141) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
        end
        ap_ST_pp0_stg0_fsm_2 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it3) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)) & ~(1'b1 == ap_reg_ppiten_pp0_it2)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)) & ~(1'b0 == exitcond_flatten_fu_189_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it3) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)) & ~(1'b1 == ap_reg_ppiten_pp0_it2)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_176) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ap_sig_186)) & ~(1'b0 == exitcond_flatten_fu_189_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st7_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st7_fsm_3 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_141 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (Y_scale_empty_n == 1'b0) | (U_scale_empty_n == 1'b0) | (V_scale_empty_n == 1'b0) | (in_width_empty_n == 1'b0) | (in_height_empty_n == 1'b0) | (out_width_full_n == 1'b0) | (out_height_full_n == 1'b0));
end

always @ (*) begin
    ap_sig_159 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_176 = (((exitcond_flatten_reg_305 == 1'b0) & (in_channels_ch1_empty_n == 1'b0)) | ((exitcond_flatten_reg_305 == 1'b0) & (in_channels_ch2_empty_n == 1'b0)) | ((exitcond_flatten_reg_305 == 1'b0) & (in_channels_ch3_empty_n == 1'b0)));
end

always @ (*) begin
    ap_sig_186 = (((1'b0 == ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2) & (out_channels_ch1_full_n == 1'b0)) | ((1'b0 == ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2) & (out_channels_ch2_full_n == 1'b0)) | ((1'b0 == ap_reg_ppstg_exitcond_flatten_reg_305_pp0_iter2) & (out_channels_ch3_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_22 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_298 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_87 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign bound_fu_254_p0 = bound_fu_254_p00;

assign bound_fu_254_p00 = height_reg_280;

assign bound_fu_254_p1 = bound_fu_254_p10;

assign bound_fu_254_p10 = width_reg_275;

assign exitcond_flatten_fu_189_p2 = ((indvar_flatten_reg_163 == bound_reg_300) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_194_p2 = (indvar_flatten_reg_163 + ap_const_lv32_1);

assign out_channels_ch1_din = tmp_10_i_reg_329;

assign out_channels_ch2_din = tmp_11_i_reg_334;

assign out_channels_ch3_din = tmp_12_i_reg_339;

assign out_height_din = in_height_dout;

assign out_width_din = in_width_dout;

assign tmp_1_cast_i_fu_177_p1 = U_scale_read_reg_265;

assign tmp_2_cast_i_fu_180_p1 = V_scale_read_reg_270;

assign tmp_7_i_fu_203_p0 = tmp_7_i_fu_203_p00;

assign tmp_7_i_fu_203_p00 = Y_reg_314;

assign tmp_7_i_fu_203_p1 = tmp_cast_i_reg_285;

assign tmp_7_i_fu_203_p2 = (tmp_7_i_fu_203_p0 * tmp_7_i_fu_203_p1);

assign tmp_8_i_fu_219_p0 = tmp_8_i_fu_219_p00;

assign tmp_8_i_fu_219_p00 = V_reg_324;

assign tmp_8_i_fu_219_p1 = tmp_2_cast_i_reg_295;

assign tmp_8_i_fu_219_p2 = (tmp_8_i_fu_219_p0 * tmp_8_i_fu_219_p1);

assign tmp_cast_i_fu_174_p1 = Y_scale_read_reg_260;

assign tmp_i_fu_211_p0 = tmp_i_fu_211_p00;

assign tmp_i_fu_211_p00 = U_reg_319;

assign tmp_i_fu_211_p1 = tmp_1_cast_i_reg_290;

assign tmp_i_fu_211_p2 = (tmp_i_fu_211_p0 * tmp_i_fu_211_p1);

always @ (posedge ap_clk) begin
    tmp_cast_i_reg_285[14:8] <= 7'b0000000;
    tmp_1_cast_i_reg_290[14:8] <= 7'b0000000;
    tmp_2_cast_i_reg_295[14:8] <= 7'b0000000;
end

endmodule //yuv_filter_yuv_scale
