// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yuv_filter_yuv2rgb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_channels_ch1_dout,
        in_channels_ch1_empty_n,
        in_channels_ch1_read,
        in_channels_ch2_dout,
        in_channels_ch2_empty_n,
        in_channels_ch2_read,
        in_channels_ch3_dout,
        in_channels_ch3_empty_n,
        in_channels_ch3_read,
        in_width_dout,
        in_width_empty_n,
        in_width_read,
        in_height_dout,
        in_height_empty_n,
        in_height_read,
        out_channels_ch1_address0,
        out_channels_ch1_ce0,
        out_channels_ch1_we0,
        out_channels_ch1_d0,
        out_channels_ch2_address0,
        out_channels_ch2_ce0,
        out_channels_ch2_we0,
        out_channels_ch2_d0,
        out_channels_ch3_address0,
        out_channels_ch3_ce0,
        out_channels_ch3_we0,
        out_channels_ch3_d0,
        out_width,
        out_width_ap_vld,
        out_height,
        out_height_ap_vld
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st9_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv17_1FF30 = 17'b11111111100110000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv16_FF9C = 16'b1111111110011100;
parameter    ap_const_lv9_1F0 = 9'b111110000;
parameter    ap_const_lv18_12A = 18'b100101010;
parameter    ap_const_lv18_80 = 18'b10000000;
parameter    ap_const_lv18_199 = 18'b110011001;
parameter    ap_const_lv32_3 = 32'b11;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] in_channels_ch1_dout;
input   in_channels_ch1_empty_n;
output   in_channels_ch1_read;
input  [7:0] in_channels_ch2_dout;
input   in_channels_ch2_empty_n;
output   in_channels_ch2_read;
input  [7:0] in_channels_ch3_dout;
input   in_channels_ch3_empty_n;
output   in_channels_ch3_read;
input  [15:0] in_width_dout;
input   in_width_empty_n;
output   in_width_read;
input  [15:0] in_height_dout;
input   in_height_empty_n;
output   in_height_read;
output  [21:0] out_channels_ch1_address0;
output   out_channels_ch1_ce0;
output   out_channels_ch1_we0;
output  [7:0] out_channels_ch1_d0;
output  [21:0] out_channels_ch2_address0;
output   out_channels_ch2_ce0;
output   out_channels_ch2_we0;
output  [7:0] out_channels_ch2_d0;
output  [21:0] out_channels_ch3_address0;
output   out_channels_ch3_ce0;
output   out_channels_ch3_we0;
output  [7:0] out_channels_ch3_d0;
output  [15:0] out_width;
output   out_width_ap_vld;
output  [15:0] out_height;
output   out_height_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_channels_ch1_read;
reg in_channels_ch2_read;
reg in_channels_ch3_read;
reg in_width_read;
reg in_height_read;
reg out_channels_ch1_ce0;
reg out_channels_ch1_we0;
reg out_channels_ch2_ce0;
reg out_channels_ch2_we0;
reg out_channels_ch3_ce0;
reg out_channels_ch3_we0;
reg out_width_ap_vld;
reg out_height_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_22;
reg    in_channels_ch1_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_80;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg    ap_reg_ppiten_pp0_it4;
reg    ap_reg_ppiten_pp0_it5;
reg   [0:0] exitcond_flatten_reg_631;
reg    in_channels_ch2_blk_n;
reg    in_channels_ch3_blk_n;
reg    in_width_blk_n;
reg    in_height_blk_n;
reg   [31:0] indvar_flatten_reg_202;
reg   [15:0] x_reg_213;
reg   [15:0] y_reg_224;
reg   [15:0] width_reg_613;
reg    ap_sig_121;
reg   [15:0] height_reg_619;
wire   [31:0] bound_fu_579_p2;
reg   [31:0] bound_reg_626;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_133;
wire   [0:0] exitcond_flatten_fu_241_p2;
reg    ap_sig_144;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter1;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3;
wire   [31:0] indvar_flatten_next_fu_246_p2;
wire   [15:0] tmp_mid2_v_fu_271_p3;
reg   [15:0] tmp_mid2_v_reg_640;
wire   [22:0] tmp_s_fu_313_p2;
reg   [22:0] tmp_s_reg_645;
reg   [22:0] ap_reg_ppstg_tmp_s_reg_645_pp0_iter1;
reg   [22:0] ap_reg_ppstg_tmp_s_reg_645_pp0_iter2;
reg   [22:0] ap_reg_ppstg_tmp_s_reg_645_pp0_iter3;
wire   [15:0] y_1_fu_319_p2;
reg   [7:0] Y_reg_655;
reg   [7:0] U_reg_660;
reg   [7:0] V_reg_665;
wire   [7:0] D_fu_328_p2;
reg  signed [7:0] D_reg_670;
wire   [7:0] E_fu_333_p2;
reg  signed [7:0] E_reg_677;
wire  signed [17:0] grp_fu_593_p4;
reg  signed [17:0] tmp_5_reg_682;
wire   [16:0] tmp_11_fu_342_p2;
reg   [16:0] tmp_11_reg_690;
wire   [7:0] R_fu_399_p3;
reg   [7:0] R_reg_695;
wire   [7:0] G_fu_466_p3;
reg   [7:0] G_reg_700;
wire   [7:0] B_fu_565_p3;
reg   [7:0] B_reg_705;
reg   [15:0] x_phi_fu_217_p4;
wire   [63:0] tmp_19_cast_fu_573_p1;
wire   [0:0] exitcond_fu_258_p2;
wire   [15:0] x_1_fu_252_p2;
wire   [12:0] tmp_fu_279_p1;
wire   [14:0] tmp_1_fu_291_p1;
wire   [22:0] p_shl3_cast_fu_295_p3;
wire   [22:0] p_shl2_cast_fu_283_p3;
wire   [15:0] y_mid2_fu_263_p3;
wire   [22:0] tmp_7_fu_303_p2;
wire   [22:0] tmp_cast_fu_309_p1;
wire  signed [7:0] tmp_11_fu_342_p1;
wire  signed [17:0] grp_fu_603_p3;
wire   [1:0] tmp_8_fu_354_p4;
wire   [0:0] icmp_fu_363_p2;
wire   [0:0] tmp_9_fu_369_p3;
wire   [0:0] tmp_12_fu_393_p2;
wire   [7:0] p_phitmp_fu_385_p3;
wire   [7:0] phitmp_fu_376_p4;
wire  signed [16:0] grp_fu_585_p3;
wire  signed [17:0] tmp1_cast_fu_410_p1;
(* use_dsp48 = "no" *) wire   [17:0] tmp_13_fu_413_p2;
wire   [1:0] tmp_14_fu_418_p4;
wire   [0:0] icmp1_fu_428_p2;
wire   [0:0] tmp_15_fu_434_p3;
wire   [0:0] tmp_16_fu_460_p2;
wire   [7:0] p_phitmp2_fu_452_p3;
wire   [7:0] phitmp2_fu_442_p4;
wire   [16:0] p_shl_fu_474_p3;
wire   [9:0] p_shl1_fu_485_p3;
wire  signed [17:0] p_shl_cast_fu_481_p1;
wire  signed [17:0] p_shl1_cast_fu_492_p1;
wire   [17:0] tmp_17_fu_496_p2;
wire  signed [18:0] tmp_20_cast_fu_351_p1;
wire  signed [18:0] tmp_35_cast_fu_502_p1;
wire   [18:0] tmp_18_fu_511_p2;
wire   [2:0] tmp_20_fu_517_p4;
(* use_dsp48 = "no" *) wire   [17:0] tmp_19_fu_506_p2;
wire   [0:0] icmp2_fu_527_p2;
wire   [0:0] tmp_21_fu_533_p3;
wire   [0:0] tmp_22_fu_559_p2;
wire   [7:0] p_phitmp3_fu_551_p3;
wire   [7:0] phitmp3_fu_541_p4;
wire   [15:0] bound_fu_579_p0;
wire   [15:0] bound_fu_579_p1;
wire  signed [7:0] grp_fu_585_p0;
wire  signed [4:0] grp_fu_593_p0;
wire   [7:0] grp_fu_593_p1;
wire   [9:0] grp_fu_593_p2;
wire   [8:0] grp_fu_593_p3;
wire   [9:0] grp_fu_603_p0;
reg    ap_sig_cseq_ST_st9_fsm_3;
reg    ap_sig_494;
reg   [3:0] ap_NS_fsm;
wire   [31:0] bound_fu_579_p00;
wire   [31:0] bound_fu_579_p10;
wire   [8:0] grp_fu_593_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
#0 ap_reg_ppiten_pp0_it4 = 1'b0;
#0 ap_reg_ppiten_pp0_it5 = 1'b0;
end

yuv_filter_mul_mul_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yuv_filter_mul_mul_16ns_16ns_32_1_U36(
    .din0(bound_fu_579_p0),
    .din1(bound_fu_579_p1),
    .dout(bound_fu_579_p2)
);

yuv_filter_mac_muladd_8s_8s_17ns_17_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
yuv_filter_mac_muladd_8s_8s_17ns_17_1_U37(
    .din0(grp_fu_585_p0),
    .din1(D_reg_670),
    .din2(tmp_11_reg_690),
    .dout(grp_fu_585_p3)
);

yuv_filter_ama_addmuladd_5s_8ns_10ns_9ns_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
yuv_filter_ama_addmuladd_5s_8ns_10ns_9ns_18_1_U38(
    .din0(grp_fu_593_p0),
    .din1(grp_fu_593_p1),
    .din2(grp_fu_593_p2),
    .din3(grp_fu_593_p3),
    .dout(grp_fu_593_p4)
);

yuv_filter_mac_muladd_10ns_8s_18s_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
yuv_filter_mac_muladd_10ns_8s_18s_18_1_U39(
    .din0(grp_fu_603_p0),
    .din1(E_reg_677),
    .din2(tmp_5_reg_682),
    .dout(grp_fu_603_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_3)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & ~(1'b0 == exitcond_flatten_fu_241_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == exitcond_flatten_fu_241_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & ~(1'b0 == exitcond_flatten_fu_241_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            ap_reg_ppiten_pp0_it5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == exitcond_flatten_fu_241_p2))) begin
        indvar_flatten_reg_202 <= indvar_flatten_next_fu_246_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        indvar_flatten_reg_202 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_631 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144))) begin
        x_reg_213 <= tmp_mid2_v_reg_640;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        x_reg_213 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == exitcond_flatten_fu_241_p2))) begin
        y_reg_224 <= y_1_fu_319_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        y_reg_224 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter2))) begin
        B_reg_705 <= B_fu_565_p3;
        G_reg_700 <= G_fu_466_p3;
        R_reg_695 <= R_fu_399_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter1))) begin
        D_reg_670 <= D_fu_328_p2;
        E_reg_677 <= E_fu_333_p2;
        tmp_11_reg_690 <= tmp_11_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (exitcond_flatten_reg_631 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144))) begin
        U_reg_660 <= in_channels_ch2_dout;
        V_reg_665 <= in_channels_ch3_dout;
        Y_reg_655 <= in_channels_ch1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144))) begin
        ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter1 <= exitcond_flatten_reg_631;
        ap_reg_ppstg_tmp_s_reg_645_pp0_iter1 <= tmp_s_reg_645;
        exitcond_flatten_reg_631 <= exitcond_flatten_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)) begin
        ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter2 <= ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter1;
        ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3 <= ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter2;
        ap_reg_ppstg_tmp_s_reg_645_pp0_iter2 <= ap_reg_ppstg_tmp_s_reg_645_pp0_iter1;
        ap_reg_ppstg_tmp_s_reg_645_pp0_iter3 <= ap_reg_ppstg_tmp_s_reg_645_pp0_iter2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        bound_reg_626 <= bound_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_121)) begin
        height_reg_619 <= in_height_dout;
        width_reg_613 <= in_width_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter1))) begin
        tmp_5_reg_682 <= grp_fu_593_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == exitcond_flatten_fu_241_p2))) begin
        tmp_mid2_v_reg_640 <= tmp_mid2_v_fu_271_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == exitcond_flatten_fu_241_p2))) begin
        tmp_s_reg_645 <= tmp_s_fu_313_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | (1'b1 == ap_sig_cseq_ST_st9_fsm_3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_80) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_133) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_494) begin
        ap_sig_cseq_ST_st9_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_631 == 1'b0))) begin
        in_channels_ch1_blk_n = in_channels_ch1_empty_n;
    end else begin
        in_channels_ch1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_631 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144))) begin
        in_channels_ch1_read = 1'b1;
    end else begin
        in_channels_ch1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_631 == 1'b0))) begin
        in_channels_ch2_blk_n = in_channels_ch2_empty_n;
    end else begin
        in_channels_ch2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_631 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144))) begin
        in_channels_ch2_read = 1'b1;
    end else begin
        in_channels_ch2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_631 == 1'b0))) begin
        in_channels_ch3_blk_n = in_channels_ch3_empty_n;
    end else begin
        in_channels_ch3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_631 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144))) begin
        in_channels_ch3_read = 1'b1;
    end else begin
        in_channels_ch3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        in_height_blk_n = in_height_empty_n;
    end else begin
        in_height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_121)) begin
        in_height_read = 1'b1;
    end else begin
        in_height_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        in_width_blk_n = in_width_empty_n;
    end else begin
        in_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_121)) begin
        in_width_read = 1'b1;
    end else begin
        in_width_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it4) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)) | ((1'b1 == ap_reg_ppiten_pp0_it5) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)))) begin
        out_channels_ch1_ce0 = 1'b1;
    end else begin
        out_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it4) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3))) begin
        out_channels_ch1_we0 = 1'b1;
    end else begin
        out_channels_ch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it4) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)) | ((1'b1 == ap_reg_ppiten_pp0_it5) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)))) begin
        out_channels_ch2_ce0 = 1'b1;
    end else begin
        out_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it4) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3))) begin
        out_channels_ch2_we0 = 1'b1;
    end else begin
        out_channels_ch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it4) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)) | ((1'b1 == ap_reg_ppiten_pp0_it5) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144)))) begin
        out_channels_ch3_ce0 = 1'b1;
    end else begin
        out_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it4) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3))) begin
        out_channels_ch3_we0 = 1'b1;
    end else begin
        out_channels_ch3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        out_height_ap_vld = 1'b1;
    end else begin
        out_height_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        out_width_ap_vld = 1'b1;
    end else begin
        out_width_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_631 == 1'b0))) begin
        x_phi_fu_217_p4 = tmp_mid2_v_reg_640;
    end else begin
        x_phi_fu_217_p4 = x_reg_213;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_121) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
        end
        ap_ST_pp0_stg0_fsm_2 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it5) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & ~(1'b1 == ap_reg_ppiten_pp0_it4)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & ~(1'b0 == exitcond_flatten_fu_241_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it5) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & ~(1'b1 == ap_reg_ppiten_pp0_it4)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_144) & ~(1'b0 == exitcond_flatten_fu_241_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st9_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st9_fsm_3 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_fu_565_p3 = ((tmp_22_fu_559_p2[0:0] === 1'b1) ? p_phitmp3_fu_551_p3 : phitmp3_fu_541_p4);

assign D_fu_328_p2 = (U_reg_660 ^ ap_const_lv8_80);

assign E_fu_333_p2 = (V_reg_665 ^ ap_const_lv8_80);

assign G_fu_466_p3 = ((tmp_16_fu_460_p2[0:0] === 1'b1) ? p_phitmp2_fu_452_p3 : phitmp2_fu_442_p4);

assign R_fu_399_p3 = ((tmp_12_fu_393_p2[0:0] === 1'b1) ? p_phitmp_fu_385_p3 : phitmp_fu_376_p4);

always @ (*) begin
    ap_sig_121 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (in_width_empty_n == 1'b0) | (in_height_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_133 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_144 = (((exitcond_flatten_reg_631 == 1'b0) & (in_channels_ch1_empty_n == 1'b0)) | ((exitcond_flatten_reg_631 == 1'b0) & (in_channels_ch2_empty_n == 1'b0)) | ((exitcond_flatten_reg_631 == 1'b0) & (in_channels_ch3_empty_n == 1'b0)));
end

always @ (*) begin
    ap_sig_22 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_494 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_80 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign bound_fu_579_p0 = bound_fu_579_p00;

assign bound_fu_579_p00 = height_reg_619;

assign bound_fu_579_p1 = bound_fu_579_p10;

assign bound_fu_579_p10 = width_reg_613;

assign exitcond_flatten_fu_241_p2 = ((indvar_flatten_reg_202 == bound_reg_626) ? 1'b1 : 1'b0);

assign exitcond_fu_258_p2 = ((y_reg_224 == height_reg_619) ? 1'b1 : 1'b0);

assign grp_fu_585_p0 = ap_const_lv16_FF9C;

assign grp_fu_593_p0 = ap_const_lv9_1F0;

assign grp_fu_593_p1 = grp_fu_593_p10;

assign grp_fu_593_p10 = Y_reg_655;

assign grp_fu_593_p2 = ap_const_lv18_12A;

assign grp_fu_593_p3 = ap_const_lv18_80;

assign grp_fu_603_p0 = ap_const_lv18_199;

assign icmp1_fu_428_p2 = ((tmp_14_fu_418_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign icmp2_fu_527_p2 = (($signed(tmp_20_fu_517_p4) > $signed(3'b000)) ? 1'b1 : 1'b0);

assign icmp_fu_363_p2 = ((tmp_8_fu_354_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_246_p2 = (indvar_flatten_reg_202 + ap_const_lv32_1);

assign out_channels_ch1_address0 = tmp_19_cast_fu_573_p1;

assign out_channels_ch1_d0 = R_reg_695;

assign out_channels_ch2_address0 = tmp_19_cast_fu_573_p1;

assign out_channels_ch2_d0 = G_reg_700;

assign out_channels_ch3_address0 = tmp_19_cast_fu_573_p1;

assign out_channels_ch3_d0 = B_reg_705;

assign out_height = height_reg_619;

assign out_width = width_reg_613;

assign p_phitmp2_fu_452_p3 = ((icmp1_fu_428_p2[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign p_phitmp3_fu_551_p3 = ((icmp2_fu_527_p2[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign p_phitmp_fu_385_p3 = ((icmp_fu_363_p2[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign p_shl1_cast_fu_492_p1 = $signed(p_shl1_fu_485_p3);

assign p_shl1_fu_485_p3 = {{D_reg_670}, {ap_const_lv2_0}};

assign p_shl2_cast_fu_283_p3 = {{tmp_fu_279_p1}, {ap_const_lv10_0}};

assign p_shl3_cast_fu_295_p3 = {{tmp_1_fu_291_p1}, {ap_const_lv8_0}};

assign p_shl_cast_fu_481_p1 = $signed(p_shl_fu_474_p3);

assign p_shl_fu_474_p3 = {{D_reg_670}, {ap_const_lv9_0}};

assign phitmp2_fu_442_p4 = {{tmp_13_fu_413_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign phitmp3_fu_541_p4 = {{tmp_19_fu_506_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign phitmp_fu_376_p4 = {{grp_fu_603_p3[ap_const_lv32_F : ap_const_lv32_8]}};

assign tmp1_cast_fu_410_p1 = grp_fu_585_p3;

assign tmp_11_fu_342_p1 = E_fu_333_p2;

assign tmp_11_fu_342_p2 = ($signed(ap_const_lv17_1FF30) * $signed(tmp_11_fu_342_p1));

assign tmp_12_fu_393_p2 = (icmp_fu_363_p2 | tmp_9_fu_369_p3);

assign tmp_13_fu_413_p2 = ($signed(tmp1_cast_fu_410_p1) + $signed(tmp_5_reg_682));

assign tmp_14_fu_418_p4 = {{tmp_13_fu_413_p2[ap_const_lv32_11 : ap_const_lv32_10]}};

assign tmp_15_fu_434_p3 = tmp_13_fu_413_p2[ap_const_lv32_11];

assign tmp_16_fu_460_p2 = (icmp1_fu_428_p2 | tmp_15_fu_434_p3);

assign tmp_17_fu_496_p2 = ($signed(p_shl_cast_fu_481_p1) + $signed(p_shl1_cast_fu_492_p1));

assign tmp_18_fu_511_p2 = ($signed(tmp_20_cast_fu_351_p1) + $signed(tmp_35_cast_fu_502_p1));

assign tmp_19_cast_fu_573_p1 = ap_reg_ppstg_tmp_s_reg_645_pp0_iter3;

assign tmp_19_fu_506_p2 = ($signed(tmp_17_fu_496_p2) + $signed(tmp_5_reg_682));

assign tmp_1_fu_291_p1 = tmp_mid2_v_fu_271_p3[14:0];

assign tmp_20_cast_fu_351_p1 = tmp_5_reg_682;

assign tmp_20_fu_517_p4 = {{tmp_18_fu_511_p2[ap_const_lv32_12 : ap_const_lv32_10]}};

assign tmp_21_fu_533_p3 = tmp_18_fu_511_p2[ap_const_lv32_12];

assign tmp_22_fu_559_p2 = (icmp2_fu_527_p2 | tmp_21_fu_533_p3);

assign tmp_35_cast_fu_502_p1 = $signed(tmp_17_fu_496_p2);

assign tmp_7_fu_303_p2 = (p_shl3_cast_fu_295_p3 + p_shl2_cast_fu_283_p3);

assign tmp_8_fu_354_p4 = {{grp_fu_603_p3[ap_const_lv32_11 : ap_const_lv32_10]}};

assign tmp_9_fu_369_p3 = grp_fu_603_p3[ap_const_lv32_11];

assign tmp_cast_fu_309_p1 = y_mid2_fu_263_p3;

assign tmp_fu_279_p1 = tmp_mid2_v_fu_271_p3[12:0];

assign tmp_mid2_v_fu_271_p3 = ((exitcond_fu_258_p2[0:0] === 1'b1) ? x_1_fu_252_p2 : x_phi_fu_217_p4);

assign tmp_s_fu_313_p2 = (tmp_7_fu_303_p2 + tmp_cast_fu_309_p1);

assign x_1_fu_252_p2 = (ap_const_lv16_1 + x_phi_fu_217_p4);

assign y_1_fu_319_p2 = (ap_const_lv16_1 + y_mid2_fu_263_p3);

assign y_mid2_fu_263_p3 = ((exitcond_fu_258_p2[0:0] === 1'b1) ? ap_const_lv16_0 : y_reg_224);

endmodule //yuv_filter_yuv2rgb
