// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yuv_filter_rgb2yuv11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_channels_ch1_address0,
        in_channels_ch1_ce0,
        in_channels_ch1_q0,
        in_channels_ch2_address0,
        in_channels_ch2_ce0,
        in_channels_ch2_q0,
        in_channels_ch3_address0,
        in_channels_ch3_ce0,
        in_channels_ch3_q0,
        in_width,
        in_height,
        out_channels_ch1_din,
        out_channels_ch1_full_n,
        out_channels_ch1_write,
        out_channels_ch2_din,
        out_channels_ch2_full_n,
        out_channels_ch2_write,
        out_channels_ch3_din,
        out_channels_ch3_full_n,
        out_channels_ch3_write,
        out_width_din,
        out_width_full_n,
        out_width_write,
        out_height_din,
        out_height_full_n,
        out_height_write,
        Y_scale,
        U_scale,
        V_scale,
        Y_scale_out_din,
        Y_scale_out_full_n,
        Y_scale_out_write,
        U_scale_out_din,
        U_scale_out_full_n,
        U_scale_out_write,
        V_scale_out_din,
        V_scale_out_full_n,
        V_scale_out_write
);

parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st9_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv10_80 = 10'b10000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv8_10 = 8'b10000;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv13_19 = 13'b11001;
parameter    ap_const_lv16_FFA2 = 16'b1111111110100010;
parameter    ap_const_lv15_7A = 15'b1111010;
parameter    ap_const_lv15_80 = 15'b10000000;
parameter    ap_const_lv16_FFB6 = 16'b1111111110110110;
parameter    ap_const_lv15_7FDA = 15'b111111111011010;
parameter    ap_const_lv32_2 = 32'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [21:0] in_channels_ch1_address0;
output   in_channels_ch1_ce0;
input  [7:0] in_channels_ch1_q0;
output  [21:0] in_channels_ch2_address0;
output   in_channels_ch2_ce0;
input  [7:0] in_channels_ch2_q0;
output  [21:0] in_channels_ch3_address0;
output   in_channels_ch3_ce0;
input  [7:0] in_channels_ch3_q0;
input  [15:0] in_width;
input  [15:0] in_height;
output  [7:0] out_channels_ch1_din;
input   out_channels_ch1_full_n;
output   out_channels_ch1_write;
output  [7:0] out_channels_ch2_din;
input   out_channels_ch2_full_n;
output   out_channels_ch2_write;
output  [7:0] out_channels_ch3_din;
input   out_channels_ch3_full_n;
output   out_channels_ch3_write;
output  [15:0] out_width_din;
input   out_width_full_n;
output   out_width_write;
output  [15:0] out_height_din;
input   out_height_full_n;
output   out_height_write;
input  [7:0] Y_scale;
input  [7:0] U_scale;
input  [7:0] V_scale;
output  [7:0] Y_scale_out_din;
input   Y_scale_out_full_n;
output   Y_scale_out_write;
output  [7:0] U_scale_out_din;
input   U_scale_out_full_n;
output   U_scale_out_write;
output  [7:0] V_scale_out_din;
input   V_scale_out_full_n;
output   V_scale_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_channels_ch1_ce0;
reg in_channels_ch2_ce0;
reg in_channels_ch3_ce0;
reg out_channels_ch1_write;
reg out_channels_ch2_write;
reg out_channels_ch3_write;
reg out_width_write;
reg out_height_write;
reg Y_scale_out_write;
reg U_scale_out_write;
reg V_scale_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_21;
reg    out_channels_ch1_blk_n;
reg    ap_reg_ppiten_pp0_it6;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg    ap_reg_ppiten_pp0_it4;
reg    ap_reg_ppiten_pp0_it5;
reg   [0:0] exitcond_flatten_reg_659;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5;
reg    out_channels_ch2_blk_n;
reg    out_channels_ch3_blk_n;
reg    out_width_blk_n;
reg    out_height_blk_n;
reg    Y_scale_out_blk_n;
reg    U_scale_out_blk_n;
reg    V_scale_out_blk_n;
reg   [31:0] indvar_flatten_reg_261;
reg   [15:0] x_i_i_reg_272;
reg   [15:0] y_i_i_reg_283;
reg    ap_sig_134;
wire   [31:0] bound_fu_607_p2;
reg   [31:0] bound_reg_654;
wire   [0:0] exitcond_flatten_fu_302_p2;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_145;
reg    ap_sig_155;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter1;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter3;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter4;
wire   [31:0] indvar_flatten_next_fu_307_p2;
wire   [15:0] tmp_i_i_mid2_v_fu_332_p3;
reg   [15:0] tmp_i_i_mid2_v_reg_668;
wire   [22:0] tmp_24_fu_374_p2;
reg   [22:0] tmp_24_reg_673;
wire   [15:0] y_fu_380_p2;
reg   [7:0] R_reg_698;
reg   [7:0] G_reg_705;
reg   [7:0] B_reg_712;
wire   [11:0] p_shl3_i_i_fu_392_p3;
reg   [11:0] p_shl3_i_i_reg_719;
wire   [12:0] p_neg_i_i_fu_404_p2;
reg   [12:0] p_neg_i_i_reg_724;
reg   [7:0] tmp_50_i_i_reg_729;
reg   [7:0] tmp_58_i_i_reg_734;
reg   [7:0] tmp_66_i_i_reg_739;
reg   [15:0] x_i_i_phi_fu_276_p4;
wire   [63:0] tmp_28_cast_fu_386_p1;
wire   [0:0] exitcond_i_i_fu_319_p2;
wire   [15:0] x_fu_313_p2;
wire   [12:0] tmp_22_fu_340_p1;
wire   [14:0] tmp_23_fu_352_p1;
wire   [22:0] p_shl_cast_fu_344_p3;
wire   [22:0] p_shl1_cast_fu_356_p3;
wire   [15:0] y_i_i_mid2_fu_324_p3;
wire   [22:0] tmp_i_i_cast_fu_370_p1;
wire   [22:0] tmp_s_fu_364_p2;
wire   [12:0] p_shl3_cast7_i_i_fu_400_p1;
wire   [13:0] p_shl5_i_i_fu_413_p3;
wire   [8:0] p_shl6_i_i_fu_424_p3;
wire   [14:0] p_shl4_i_i_fu_441_p3;
wire   [9:0] p_shl6_cast_i_i_cast_fu_431_p1;
wire   [9:0] tmp_fu_455_p2;
wire   [14:0] tmp_cast_fu_461_p1;
wire   [14:0] p_shl5_cast_i_i_fu_420_p1;
wire   [14:0] tmp_46_i_i_fu_465_p2;
wire   [15:0] p_shl4_cast_i_i_fu_448_p1;
wire   [15:0] tmp_46_cast_i_i_fu_471_p1;
wire   [12:0] grp_fu_598_p3;
wire   [15:0] tmp2_cast_fu_481_p1;
wire   [15:0] tmp1_fu_475_p2;
wire   [15:0] tmp_48_i_i_fu_484_p2;
wire   [14:0] p_shl2_i_i_fu_500_p3;
wire   [15:0] p_shl2_cast_i_i_fu_507_p1;
wire   [15:0] p_shl3_cast_i_i_fu_511_p1;
wire  signed [14:0] grp_fu_640_p3;
wire   [15:0] tmp_53_i_i_fu_514_p2;
wire  signed [15:0] tmp_54_cast_i_i_fu_520_p1;
wire  signed [15:0] grp_fu_631_p3;
wire   [8:0] p_shl1_i_i_fu_541_p3;
wire  signed [13:0] p_neg_cast_i_i_fu_538_p1;
wire   [13:0] p_shl1_cast_i_i_fu_548_p1;
wire   [13:0] tmp_61_i_i_fu_552_p2;
wire   [14:0] grp_fu_622_p3;
wire   [15:0] tmp_62_cast_i_i_fu_562_p1;
wire  signed [15:0] tmp_61_cast_i_i_fu_558_p1;
wire  signed [15:0] grp_fu_613_p3;
wire   [5:0] grp_fu_598_p0;
wire   [7:0] grp_fu_598_p1;
wire   [7:0] grp_fu_598_p2;
wire   [15:0] bound_fu_607_p0;
wire   [15:0] bound_fu_607_p1;
wire  signed [7:0] grp_fu_613_p0;
wire   [7:0] grp_fu_613_p1;
wire   [15:0] tmp_42_cast11_i_i_fu_435_p1;
wire   [15:0] grp_fu_613_p2;
wire   [7:0] grp_fu_622_p0;
wire   [7:0] grp_fu_622_p1;
wire   [14:0] tmp_40_cast14_i_i_fu_410_p1;
wire   [8:0] grp_fu_622_p2;
wire  signed [7:0] grp_fu_631_p0;
wire   [7:0] grp_fu_631_p1;
wire   [15:0] grp_fu_631_p2;
wire  signed [6:0] grp_fu_640_p0;
wire   [7:0] grp_fu_640_p1;
wire   [8:0] grp_fu_640_p2;
reg    ap_sig_cseq_ST_st9_fsm_2;
reg    ap_sig_494;
reg   [2:0] ap_NS_fsm;
wire   [31:0] bound_fu_607_p00;
wire   [31:0] bound_fu_607_p10;
wire   [12:0] grp_fu_598_p10;
wire   [12:0] grp_fu_598_p20;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'b1;
#0 ap_reg_ppiten_pp0_it6 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
#0 ap_reg_ppiten_pp0_it4 = 1'b0;
#0 ap_reg_ppiten_pp0_it5 = 1'b0;
end

yuv_filter_mac_muladd_6ns_8ns_8ns_13_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
yuv_filter_mac_muladd_6ns_8ns_8ns_13_1_U0(
    .din0(grp_fu_598_p0),
    .din1(grp_fu_598_p1),
    .din2(grp_fu_598_p2),
    .dout(grp_fu_598_p3)
);

yuv_filter_mul_mul_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yuv_filter_mul_mul_16ns_16ns_32_1_U1(
    .din0(bound_fu_607_p0),
    .din1(bound_fu_607_p1),
    .dout(bound_fu_607_p2)
);

yuv_filter_mac_muladd_8s_8ns_16ns_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
yuv_filter_mac_muladd_8s_8ns_16ns_16_1_U2(
    .din0(grp_fu_613_p0),
    .din1(grp_fu_613_p1),
    .din2(grp_fu_613_p2),
    .dout(grp_fu_613_p3)
);

yuv_filter_mac_muladd_8ns_8ns_9ns_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
yuv_filter_mac_muladd_8ns_8ns_9ns_15_1_U3(
    .din0(grp_fu_622_p0),
    .din1(grp_fu_622_p1),
    .din2(grp_fu_622_p2),
    .dout(grp_fu_622_p3)
);

yuv_filter_mac_muladd_8s_8ns_16ns_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
yuv_filter_mac_muladd_8s_8ns_16ns_16_1_U4(
    .din0(grp_fu_631_p0),
    .din1(grp_fu_631_p1),
    .din2(grp_fu_631_p2),
    .dout(grp_fu_631_p3)
);

yuv_filter_mac_muladd_7s_8ns_9ns_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
yuv_filter_mac_muladd_7s_8ns_9ns_15_1_U5(
    .din0(grp_fu_640_p0),
    .din1(grp_fu_640_p1),
    .din2(grp_fu_640_p2),
    .dout(grp_fu_640_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_2)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & ~(1'b0 == exitcond_flatten_fu_302_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & (1'b0 == exitcond_flatten_fu_302_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & ~(1'b0 == exitcond_flatten_fu_302_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
            ap_reg_ppiten_pp0_it6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & (1'b0 == exitcond_flatten_fu_302_p2))) begin
        indvar_flatten_reg_261 <= indvar_flatten_next_fu_307_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
        indvar_flatten_reg_261 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & (exitcond_flatten_reg_659 == 1'b0))) begin
        x_i_i_reg_272 <= tmp_i_i_mid2_v_reg_668;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
        x_i_i_reg_272 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & (1'b0 == exitcond_flatten_fu_302_p2))) begin
        y_i_i_reg_283 <= y_fu_380_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
        y_i_i_reg_283 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter3))) begin
        B_reg_712 <= in_channels_ch3_q0;
        G_reg_705 <= in_channels_ch2_q0;
        R_reg_698 <= in_channels_ch1_q0;
        p_neg_i_i_reg_724[12 : 4] <= p_neg_i_i_fu_404_p2[12 : 4];
        p_shl3_i_i_reg_719[11 : 4] <= p_shl3_i_i_fu_392_p3[11 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155))) begin
        ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter1 <= exitcond_flatten_reg_659;
        exitcond_flatten_reg_659 <= exitcond_flatten_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) begin
        ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter2 <= ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter1;
        ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter3 <= ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter2;
        ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter4 <= ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter3;
        ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5 <= ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
        bound_reg_654 <= bound_fu_607_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & (1'b0 == exitcond_flatten_fu_302_p2))) begin
        tmp_24_reg_673 <= tmp_24_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & (1'b0 == ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter4))) begin
        tmp_50_i_i_reg_729 <= {{tmp_48_i_i_fu_484_p2[ap_const_lv32_F : ap_const_lv32_8]}};
        tmp_58_i_i_reg_734 <= {{grp_fu_631_p3[ap_const_lv32_F : ap_const_lv32_8]}};
        tmp_66_i_i_reg_739 <= {{grp_fu_613_p3[ap_const_lv32_F : ap_const_lv32_8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & (1'b0 == exitcond_flatten_fu_302_p2))) begin
        tmp_i_i_mid2_v_reg_668 <= tmp_i_i_mid2_v_fu_332_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        U_scale_out_blk_n = U_scale_out_full_n;
    end else begin
        U_scale_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
        U_scale_out_write = 1'b1;
    end else begin
        U_scale_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        V_scale_out_blk_n = V_scale_out_full_n;
    end else begin
        V_scale_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
        V_scale_out_write = 1'b1;
    end else begin
        V_scale_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        Y_scale_out_blk_n = Y_scale_out_full_n;
    end else begin
        Y_scale_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
        Y_scale_out_write = 1'b1;
    end else begin
        Y_scale_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | (1'b1 == ap_sig_cseq_ST_st9_fsm_2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_145) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_21) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_494) begin
        ap_sig_cseq_ST_st9_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)))) begin
        in_channels_ch1_ce0 = 1'b1;
    end else begin
        in_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)))) begin
        in_channels_ch2_ce0 = 1'b1;
    end else begin
        in_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) | ((1'b1 == ap_reg_ppiten_pp0_it3) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)) | ((1'b1 == ap_reg_ppiten_pp0_it4) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155)))) begin
        in_channels_ch3_ce0 = 1'b1;
    end else begin
        in_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it6) & (ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5 == 1'b0))) begin
        out_channels_ch1_blk_n = out_channels_ch1_full_n;
    end else begin
        out_channels_ch1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it6) & (ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155))) begin
        out_channels_ch1_write = 1'b1;
    end else begin
        out_channels_ch1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it6) & (ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5 == 1'b0))) begin
        out_channels_ch2_blk_n = out_channels_ch2_full_n;
    end else begin
        out_channels_ch2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it6) & (ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155))) begin
        out_channels_ch2_write = 1'b1;
    end else begin
        out_channels_ch2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it6) & (ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5 == 1'b0))) begin
        out_channels_ch3_blk_n = out_channels_ch3_full_n;
    end else begin
        out_channels_ch3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it6) & (ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155))) begin
        out_channels_ch3_write = 1'b1;
    end else begin
        out_channels_ch3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        out_height_blk_n = out_height_full_n;
    end else begin
        out_height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
        out_height_write = 1'b1;
    end else begin
        out_height_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        out_width_blk_n = out_width_full_n;
    end else begin
        out_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_134)) begin
        out_width_write = 1'b1;
    end else begin
        out_width_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_reg_659 == 1'b0))) begin
        x_i_i_phi_fu_276_p4 = tmp_i_i_mid2_v_reg_668;
    end else begin
        x_i_i_phi_fu_276_p4 = x_i_i_reg_272;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_134) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it6) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & ~(1'b1 == ap_reg_ppiten_pp0_it5)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & ~(1'b0 == exitcond_flatten_fu_302_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if ((((1'b1 == ap_reg_ppiten_pp0_it6) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & ~(1'b1 == ap_reg_ppiten_pp0_it5)) | ((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it6) & ap_sig_155) & ~(1'b0 == exitcond_flatten_fu_302_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st9_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        end
        ap_ST_st9_fsm_2 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign U_scale_out_din = U_scale;

assign V_scale_out_din = V_scale;

assign Y_scale_out_din = Y_scale;

always @ (*) begin
    ap_sig_134 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (Y_scale_out_full_n == 1'b0) | (U_scale_out_full_n == 1'b0) | (V_scale_out_full_n == 1'b0) | (out_width_full_n == 1'b0) | (out_height_full_n == 1'b0));
end

always @ (*) begin
    ap_sig_145 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_155 = (((ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5 == 1'b0) & (out_channels_ch1_full_n == 1'b0)) | ((ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5 == 1'b0) & (out_channels_ch2_full_n == 1'b0)) | ((ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5 == 1'b0) & (out_channels_ch3_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_21 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_494 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign bound_fu_607_p0 = bound_fu_607_p00;

assign bound_fu_607_p00 = in_height;

assign bound_fu_607_p1 = bound_fu_607_p10;

assign bound_fu_607_p10 = in_width;

assign exitcond_flatten_fu_302_p2 = ((indvar_flatten_reg_261 == bound_reg_654) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_319_p2 = ((y_i_i_reg_283 == in_height) ? 1'b1 : 1'b0);

assign grp_fu_598_p0 = ap_const_lv13_19;

assign grp_fu_598_p1 = grp_fu_598_p10;

assign grp_fu_598_p10 = B_reg_712;

assign grp_fu_598_p2 = grp_fu_598_p20;

assign grp_fu_598_p20 = G_reg_705;

assign grp_fu_613_p0 = ap_const_lv16_FFA2;

assign grp_fu_613_p1 = tmp_42_cast11_i_i_fu_435_p1;

assign grp_fu_613_p2 = ($signed(tmp_62_cast_i_i_fu_562_p1) + $signed(tmp_61_cast_i_i_fu_558_p1));

assign grp_fu_622_p0 = ap_const_lv15_7A;

assign grp_fu_622_p1 = tmp_40_cast14_i_i_fu_410_p1;

assign grp_fu_622_p2 = ap_const_lv15_80;

assign grp_fu_631_p0 = ap_const_lv16_FFB6;

assign grp_fu_631_p1 = tmp_42_cast11_i_i_fu_435_p1;

assign grp_fu_631_p2 = ($signed(tmp_53_i_i_fu_514_p2) + $signed(tmp_54_cast_i_i_fu_520_p1));

assign grp_fu_640_p0 = ap_const_lv15_7FDA;

assign grp_fu_640_p1 = tmp_40_cast14_i_i_fu_410_p1;

assign grp_fu_640_p2 = ap_const_lv15_80;

assign in_channels_ch1_address0 = tmp_28_cast_fu_386_p1;

assign in_channels_ch2_address0 = tmp_28_cast_fu_386_p1;

assign in_channels_ch3_address0 = tmp_28_cast_fu_386_p1;

assign indvar_flatten_next_fu_307_p2 = (indvar_flatten_reg_261 + ap_const_lv32_1);

assign out_channels_ch1_din = (ap_const_lv8_10 + tmp_50_i_i_reg_729);

assign out_channels_ch2_din = (tmp_58_i_i_reg_734 ^ ap_const_lv8_80);

assign out_channels_ch3_din = (tmp_66_i_i_reg_739 ^ ap_const_lv8_80);

assign out_height_din = in_height;

assign out_width_din = in_width;

assign p_neg_cast_i_i_fu_538_p1 = $signed(p_neg_i_i_reg_724);

assign p_neg_i_i_fu_404_p2 = (ap_const_lv13_0 - p_shl3_cast7_i_i_fu_400_p1);

assign p_shl1_cast_fu_356_p3 = {{tmp_23_fu_352_p1}, {ap_const_lv8_0}};

assign p_shl1_cast_i_i_fu_548_p1 = p_shl1_i_i_fu_541_p3;

assign p_shl1_i_i_fu_541_p3 = {{B_reg_712}, {1'b0}};

assign p_shl2_cast_i_i_fu_507_p1 = p_shl2_i_i_fu_500_p3;

assign p_shl2_i_i_fu_500_p3 = {{B_reg_712}, {ap_const_lv7_0}};

assign p_shl3_cast7_i_i_fu_400_p1 = p_shl3_i_i_fu_392_p3;

assign p_shl3_cast_i_i_fu_511_p1 = p_shl3_i_i_reg_719;

assign p_shl3_i_i_fu_392_p3 = {{in_channels_ch3_q0}, {ap_const_lv4_0}};

assign p_shl4_cast_i_i_fu_448_p1 = p_shl4_i_i_fu_441_p3;

assign p_shl4_i_i_fu_441_p3 = {{G_reg_705}, {ap_const_lv7_0}};

assign p_shl5_cast_i_i_fu_420_p1 = p_shl5_i_i_fu_413_p3;

assign p_shl5_i_i_fu_413_p3 = {{R_reg_698}, {ap_const_lv6_0}};

assign p_shl6_cast_i_i_cast_fu_431_p1 = p_shl6_i_i_fu_424_p3;

assign p_shl6_i_i_fu_424_p3 = {{R_reg_698}, {1'b0}};

assign p_shl_cast_fu_344_p3 = {{tmp_22_fu_340_p1}, {ap_const_lv10_0}};

assign tmp1_fu_475_p2 = (p_shl4_cast_i_i_fu_448_p1 + tmp_46_cast_i_i_fu_471_p1);

assign tmp2_cast_fu_481_p1 = grp_fu_598_p3;

assign tmp_22_fu_340_p1 = tmp_i_i_mid2_v_fu_332_p3[12:0];

assign tmp_23_fu_352_p1 = tmp_i_i_mid2_v_fu_332_p3[14:0];

assign tmp_24_fu_374_p2 = (tmp_i_i_cast_fu_370_p1 + tmp_s_fu_364_p2);

assign tmp_28_cast_fu_386_p1 = tmp_24_reg_673;

assign tmp_40_cast14_i_i_fu_410_p1 = R_reg_698;

assign tmp_42_cast11_i_i_fu_435_p1 = G_reg_705;

assign tmp_46_cast_i_i_fu_471_p1 = tmp_46_i_i_fu_465_p2;

assign tmp_46_i_i_fu_465_p2 = (tmp_cast_fu_461_p1 + p_shl5_cast_i_i_fu_420_p1);

assign tmp_48_i_i_fu_484_p2 = (tmp2_cast_fu_481_p1 + tmp1_fu_475_p2);

assign tmp_53_i_i_fu_514_p2 = (p_shl2_cast_i_i_fu_507_p1 - p_shl3_cast_i_i_fu_511_p1);

assign tmp_54_cast_i_i_fu_520_p1 = grp_fu_640_p3;

assign tmp_61_cast_i_i_fu_558_p1 = $signed(tmp_61_i_i_fu_552_p2);

assign tmp_61_i_i_fu_552_p2 = ($signed(p_neg_cast_i_i_fu_538_p1) - $signed(p_shl1_cast_i_i_fu_548_p1));

assign tmp_62_cast_i_i_fu_562_p1 = grp_fu_622_p3;

assign tmp_cast_fu_461_p1 = tmp_fu_455_p2;

assign tmp_fu_455_p2 = (ap_const_lv10_80 + p_shl6_cast_i_i_cast_fu_431_p1);

assign tmp_i_i_cast_fu_370_p1 = y_i_i_mid2_fu_324_p3;

assign tmp_i_i_mid2_v_fu_332_p3 = ((exitcond_i_i_fu_319_p2[0:0] === 1'b1) ? x_fu_313_p2 : x_i_i_phi_fu_276_p4);

assign tmp_s_fu_364_p2 = (p_shl_cast_fu_344_p3 + p_shl1_cast_fu_356_p3);

assign x_fu_313_p2 = (ap_const_lv16_1 + x_i_i_phi_fu_276_p4);

assign y_fu_380_p2 = (ap_const_lv16_1 + y_i_i_mid2_fu_324_p3);

assign y_i_i_mid2_fu_324_p3 = ((exitcond_i_i_fu_319_p2[0:0] === 1'b1) ? ap_const_lv16_0 : y_i_i_reg_283);

always @ (posedge ap_clk) begin
    p_shl3_i_i_reg_719[3:0] <= 4'b0000;
    p_neg_i_i_reg_724[3:0] <= 4'b0000;
end

endmodule //yuv_filter_rgb2yuv11
