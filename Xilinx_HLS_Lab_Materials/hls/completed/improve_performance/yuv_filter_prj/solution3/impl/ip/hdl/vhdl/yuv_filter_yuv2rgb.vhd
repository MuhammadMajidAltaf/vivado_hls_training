-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yuv_filter_yuv2rgb is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_channels_ch1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch1_empty_n : IN STD_LOGIC;
    in_channels_ch1_read : OUT STD_LOGIC;
    in_channels_ch2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch2_empty_n : IN STD_LOGIC;
    in_channels_ch2_read : OUT STD_LOGIC;
    in_channels_ch3_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch3_empty_n : IN STD_LOGIC;
    in_channels_ch3_read : OUT STD_LOGIC;
    in_width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_width_empty_n : IN STD_LOGIC;
    in_width_read : OUT STD_LOGIC;
    in_height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_height_empty_n : IN STD_LOGIC;
    in_height_read : OUT STD_LOGIC;
    out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch1_ce0 : OUT STD_LOGIC;
    out_channels_ch1_we0 : OUT STD_LOGIC;
    out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch2_ce0 : OUT STD_LOGIC;
    out_channels_ch2_we0 : OUT STD_LOGIC;
    out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch3_ce0 : OUT STD_LOGIC;
    out_channels_ch3_we0 : OUT STD_LOGIC;
    out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_width : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_width_ap_vld : OUT STD_LOGIC;
    out_height : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_height_ap_vld : OUT STD_LOGIC );
end;


architecture behav of yuv_filter_yuv2rgb is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st9_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv17_1FF30 : STD_LOGIC_VECTOR (16 downto 0) := "11111111100110000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv16_FF9C : STD_LOGIC_VECTOR (15 downto 0) := "1111111110011100";
    constant ap_const_lv9_1F0 : STD_LOGIC_VECTOR (8 downto 0) := "111110000";
    constant ap_const_lv18_12A : STD_LOGIC_VECTOR (17 downto 0) := "000000000100101010";
    constant ap_const_lv18_80 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_const_lv18_199 : STD_LOGIC_VECTOR (17 downto 0) := "000000000110011001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_22 : BOOLEAN;
    signal in_channels_ch1_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_80 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_channels_ch2_blk_n : STD_LOGIC;
    signal in_channels_ch3_blk_n : STD_LOGIC;
    signal in_width_blk_n : STD_LOGIC;
    signal in_height_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_202 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_213 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_reg_224 : STD_LOGIC_VECTOR (15 downto 0);
    signal width_reg_613 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_121 : BOOLEAN;
    signal height_reg_619 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_fu_579_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_reg_626 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_133 : BOOLEAN;
    signal exitcond_flatten_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_144 : BOOLEAN;
    signal ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_246_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_mid2_v_fu_271_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_mid2_v_reg_640 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_313_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_s_reg_645 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_645_pp0_iter1 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_645_pp0_iter2 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_tmp_s_reg_645_pp0_iter3 : STD_LOGIC_VECTOR (22 downto 0);
    signal y_1_fu_319_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal Y_reg_655 : STD_LOGIC_VECTOR (7 downto 0);
    signal U_reg_660 : STD_LOGIC_VECTOR (7 downto 0);
    signal V_reg_665 : STD_LOGIC_VECTOR (7 downto 0);
    signal D_fu_328_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal D_reg_670 : STD_LOGIC_VECTOR (7 downto 0);
    signal E_fu_333_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal E_reg_677 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_593_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_5_reg_682 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_11_fu_342_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_reg_690 : STD_LOGIC_VECTOR (16 downto 0);
    signal R_fu_399_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_reg_695 : STD_LOGIC_VECTOR (7 downto 0);
    signal G_fu_466_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal G_reg_700 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_fu_565_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_reg_705 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_phi_fu_217_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_cast_fu_573_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_1_fu_252_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_279_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_291_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl3_cast_fu_295_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl2_cast_fu_283_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal y_mid2_fu_263_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_303_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_cast_fu_309_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_11_fu_342_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_603_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_8_fu_354_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_369_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_phitmp_fu_385_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal phitmp_fu_376_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_585_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp1_cast_fu_410_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_13_fu_413_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_13_fu_413_p2 : signal is "no";
    signal tmp_14_fu_418_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp1_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_434_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_phitmp2_fu_452_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal phitmp2_fu_442_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_fu_474_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl1_fu_485_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_cast_fu_481_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl1_cast_fu_492_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_17_fu_496_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_20_cast_fu_351_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_35_cast_fu_502_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_18_fu_511_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_20_fu_517_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_fu_506_p2 : STD_LOGIC_VECTOR (17 downto 0);
    attribute use_dsp48 of tmp_19_fu_506_p2 : signal is "no";
    signal icmp2_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_533_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_phitmp3_fu_551_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal phitmp3_fu_541_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal bound_fu_579_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_fu_579_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_585_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_593_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_593_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_593_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_593_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_603_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_3 : STD_LOGIC;
    signal ap_sig_494 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal bound_fu_579_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_579_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_593_p10 : STD_LOGIC_VECTOR (8 downto 0);

    component yuv_filter_mul_mul_16ns_16ns_32_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component yuv_filter_mac_muladd_8s_8s_17ns_17_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component yuv_filter_ama_addmuladd_5s_8ns_10ns_9ns_18_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component yuv_filter_mac_muladd_10ns_8s_18s_18_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    yuv_filter_mul_mul_16ns_16ns_32_1_U36 : component yuv_filter_mul_mul_16ns_16ns_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => bound_fu_579_p0,
        din1 => bound_fu_579_p1,
        dout => bound_fu_579_p2);

    yuv_filter_mac_muladd_8s_8s_17ns_17_1_U37 : component yuv_filter_mac_muladd_8s_8s_17ns_17_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_585_p0,
        din1 => D_reg_670,
        din2 => tmp_11_reg_690,
        dout => grp_fu_585_p3);

    yuv_filter_ama_addmuladd_5s_8ns_10ns_9ns_18_1_U38 : component yuv_filter_ama_addmuladd_5s_8ns_10ns_9ns_18_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        din3_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_593_p0,
        din1 => grp_fu_593_p1,
        din2 => grp_fu_593_p2,
        din3 => grp_fu_593_p3,
        dout => grp_fu_593_p4);

    yuv_filter_mac_muladd_10ns_8s_18s_18_1_U39 : component yuv_filter_mac_muladd_10ns_8s_18s_18_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 8,
        din2_WIDTH => 18,
        dout_WIDTH => 18)
    port map (
        din0 => grp_fu_603_p0,
        din1 => E_reg_677,
        din2 => tmp_5_reg_682,
        dout => grp_fu_603_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_3)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and not((ap_const_lv1_0 = exitcond_flatten_fu_241_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = exitcond_flatten_fu_241_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and not((ap_const_lv1_0 = exitcond_flatten_fu_241_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                    ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = exitcond_flatten_fu_241_p2))) then 
                indvar_flatten_reg_202 <= indvar_flatten_next_fu_246_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                indvar_flatten_reg_202 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_631 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)))) then 
                x_reg_213 <= tmp_mid2_v_reg_640;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                x_reg_213 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    y_reg_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = exitcond_flatten_fu_241_p2))) then 
                y_reg_224 <= y_1_fu_319_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
                y_reg_224 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter2))) then
                B_reg_705 <= B_fu_565_p3;
                G_reg_700 <= G_fu_466_p3;
                R_reg_695 <= R_fu_399_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter1))) then
                D_reg_670 <= D_fu_328_p2;
                E_reg_677 <= E_fu_333_p2;
                tmp_11_reg_690 <= tmp_11_fu_342_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_reg_631 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)))) then
                U_reg_660 <= in_channels_ch2_dout;
                V_reg_665 <= in_channels_ch3_dout;
                Y_reg_655 <= in_channels_ch1_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)))) then
                ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter1 <= exitcond_flatten_reg_631;
                ap_reg_ppstg_tmp_s_reg_645_pp0_iter1 <= tmp_s_reg_645;
                exitcond_flatten_reg_631 <= exitcond_flatten_fu_241_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))) then
                ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter2 <= ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter1;
                ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3 <= ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter2;
                ap_reg_ppstg_tmp_s_reg_645_pp0_iter2 <= ap_reg_ppstg_tmp_s_reg_645_pp0_iter1;
                ap_reg_ppstg_tmp_s_reg_645_pp0_iter3 <= ap_reg_ppstg_tmp_s_reg_645_pp0_iter2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                bound_reg_626 <= bound_fu_579_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_121))) then
                height_reg_619 <= in_height_dout;
                width_reg_613 <= in_width_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter1))) then
                tmp_5_reg_682 <= grp_fu_593_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = exitcond_flatten_fu_241_p2))) then
                tmp_mid2_v_reg_640 <= tmp_mid2_v_fu_271_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = exitcond_flatten_fu_241_p2))) then
                tmp_s_reg_645 <= tmp_s_fu_313_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_121, exitcond_flatten_fu_241_p2, ap_sig_144)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_121)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and not((ap_const_lv1_0 = exitcond_flatten_fu_241_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and not((ap_const_lv1_0 = exitcond_flatten_fu_241_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st9_fsm_3 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    B_fu_565_p3 <= 
        p_phitmp3_fu_551_p3 when (tmp_22_fu_559_p2(0) = '1') else 
        phitmp3_fu_541_p4;
    D_fu_328_p2 <= (U_reg_660 xor ap_const_lv8_80);
    E_fu_333_p2 <= (V_reg_665 xor ap_const_lv8_80);
    G_fu_466_p3 <= 
        p_phitmp2_fu_452_p3 when (tmp_16_fu_460_p2(0) = '1') else 
        phitmp2_fu_442_p4;
    R_fu_399_p3 <= 
        p_phitmp_fu_385_p3 when (tmp_12_fu_393_p2(0) = '1') else 
        phitmp_fu_376_p4;

    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st9_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_3))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st9_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_121_assign_proc : process(ap_start, ap_done_reg, in_width_empty_n, in_height_empty_n)
    begin
                ap_sig_121 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (in_width_empty_n = ap_const_logic_0) or (in_height_empty_n = ap_const_logic_0));
    end process;


    ap_sig_133_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_133 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_144_assign_proc : process(in_channels_ch1_empty_n, in_channels_ch2_empty_n, in_channels_ch3_empty_n, exitcond_flatten_reg_631)
    begin
                ap_sig_144 <= (((exitcond_flatten_reg_631 = ap_const_lv1_0) and (in_channels_ch1_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_631 = ap_const_lv1_0) and (in_channels_ch2_empty_n = ap_const_logic_0)) or ((exitcond_flatten_reg_631 = ap_const_lv1_0) and (in_channels_ch3_empty_n = ap_const_logic_0)));
    end process;


    ap_sig_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_494_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_494 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_80_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_80 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_80)
    begin
        if (ap_sig_80) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_22)
    begin
        if (ap_sig_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_133)
    begin
        if (ap_sig_133) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_3_assign_proc : process(ap_sig_494)
    begin
        if (ap_sig_494) then 
            ap_sig_cseq_ST_st9_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;

    bound_fu_579_p0 <= bound_fu_579_p00(16 - 1 downto 0);
    bound_fu_579_p00 <= std_logic_vector(resize(unsigned(height_reg_619),32));
    bound_fu_579_p1 <= bound_fu_579_p10(16 - 1 downto 0);
    bound_fu_579_p10 <= std_logic_vector(resize(unsigned(width_reg_613),32));
    exitcond_flatten_fu_241_p2 <= "1" when (indvar_flatten_reg_202 = bound_reg_626) else "0";
    exitcond_fu_258_p2 <= "1" when (y_reg_224 = height_reg_619) else "0";
    grp_fu_585_p0 <= ap_const_lv16_FF9C(8 - 1 downto 0);
    grp_fu_593_p0 <= ap_const_lv9_1F0(5 - 1 downto 0);
    grp_fu_593_p1 <= grp_fu_593_p10(8 - 1 downto 0);
    grp_fu_593_p10 <= std_logic_vector(resize(unsigned(Y_reg_655),9));
    grp_fu_593_p2 <= ap_const_lv18_12A(10 - 1 downto 0);
    grp_fu_593_p3 <= ap_const_lv18_80(9 - 1 downto 0);
    grp_fu_603_p0 <= ap_const_lv18_199(10 - 1 downto 0);
    icmp1_fu_428_p2 <= "1" when (tmp_14_fu_418_p4 = ap_const_lv2_1) else "0";
    icmp2_fu_527_p2 <= "1" when (signed(tmp_20_fu_517_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_fu_363_p2 <= "1" when (tmp_8_fu_354_p4 = ap_const_lv2_1) else "0";

    in_channels_ch1_blk_n_assign_proc : process(in_channels_ch1_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_631)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_631 = ap_const_lv1_0))) then 
            in_channels_ch1_blk_n <= in_channels_ch1_empty_n;
        else 
            in_channels_ch1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_channels_ch1_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_631, ap_sig_144)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_631 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)))) then 
            in_channels_ch1_read <= ap_const_logic_1;
        else 
            in_channels_ch1_read <= ap_const_logic_0;
        end if; 
    end process;


    in_channels_ch2_blk_n_assign_proc : process(in_channels_ch2_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_631)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_631 = ap_const_lv1_0))) then 
            in_channels_ch2_blk_n <= in_channels_ch2_empty_n;
        else 
            in_channels_ch2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_channels_ch2_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_631, ap_sig_144)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_631 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)))) then 
            in_channels_ch2_read <= ap_const_logic_1;
        else 
            in_channels_ch2_read <= ap_const_logic_0;
        end if; 
    end process;


    in_channels_ch3_blk_n_assign_proc : process(in_channels_ch3_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_631)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_631 = ap_const_lv1_0))) then 
            in_channels_ch3_blk_n <= in_channels_ch3_empty_n;
        else 
            in_channels_ch3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_channels_ch3_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_631, ap_sig_144)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_631 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)))) then 
            in_channels_ch3_read <= ap_const_logic_1;
        else 
            in_channels_ch3_read <= ap_const_logic_0;
        end if; 
    end process;


    in_height_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_sig_cseq_ST_st1_fsm_0, in_height_empty_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            in_height_blk_n <= in_height_empty_n;
        else 
            in_height_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_height_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_121)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_121))) then 
            in_height_read <= ap_const_logic_1;
        else 
            in_height_read <= ap_const_logic_0;
        end if; 
    end process;


    in_width_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_sig_cseq_ST_st1_fsm_0, in_width_empty_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            in_width_blk_n <= in_width_empty_n;
        else 
            in_width_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_width_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_121)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_121))) then 
            in_width_read <= ap_const_logic_1;
        else 
            in_width_read <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_246_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_202) + unsigned(ap_const_lv32_1));
    out_channels_ch1_address0 <= tmp_19_cast_fu_573_p1(22 - 1 downto 0);

    out_channels_ch1_ce0_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_144)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))))) then 
            out_channels_ch1_ce0 <= ap_const_logic_1;
        else 
            out_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch1_d0 <= R_reg_695;

    out_channels_ch1_we0_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_sig_144, ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3)))) then 
            out_channels_ch1_we0 <= ap_const_logic_1;
        else 
            out_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch2_address0 <= tmp_19_cast_fu_573_p1(22 - 1 downto 0);

    out_channels_ch2_ce0_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_144)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))))) then 
            out_channels_ch2_ce0 <= ap_const_logic_1;
        else 
            out_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch2_d0 <= G_reg_700;

    out_channels_ch2_we0_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_sig_144, ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3)))) then 
            out_channels_ch2_we0 <= ap_const_logic_1;
        else 
            out_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch3_address0 <= tmp_19_cast_fu_573_p1(22 - 1 downto 0);

    out_channels_ch3_ce0_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_144)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144))))) then 
            out_channels_ch3_ce0 <= ap_const_logic_1;
        else 
            out_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch3_d0 <= B_reg_705;

    out_channels_ch3_we0_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it4, ap_sig_144, ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_144)) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond_flatten_reg_631_pp0_iter3)))) then 
            out_channels_ch3_we0 <= ap_const_logic_1;
        else 
            out_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_height <= height_reg_619;

    out_height_ap_vld_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            out_height_ap_vld <= ap_const_logic_1;
        else 
            out_height_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_width <= width_reg_613;

    out_width_ap_vld_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            out_width_ap_vld <= ap_const_logic_1;
        else 
            out_width_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_phitmp2_fu_452_p3 <= 
        ap_const_lv8_FF when (icmp1_fu_428_p2(0) = '1') else 
        ap_const_lv8_0;
    p_phitmp3_fu_551_p3 <= 
        ap_const_lv8_FF when (icmp2_fu_527_p2(0) = '1') else 
        ap_const_lv8_0;
    p_phitmp_fu_385_p3 <= 
        ap_const_lv8_FF when (icmp_fu_363_p2(0) = '1') else 
        ap_const_lv8_0;
        p_shl1_cast_fu_492_p1 <= std_logic_vector(resize(signed(p_shl1_fu_485_p3),18));

    p_shl1_fu_485_p3 <= (D_reg_670 & ap_const_lv2_0);
    p_shl2_cast_fu_283_p3 <= (tmp_fu_279_p1 & ap_const_lv10_0);
    p_shl3_cast_fu_295_p3 <= (tmp_1_fu_291_p1 & ap_const_lv8_0);
        p_shl_cast_fu_481_p1 <= std_logic_vector(resize(signed(p_shl_fu_474_p3),18));

    p_shl_fu_474_p3 <= (D_reg_670 & ap_const_lv9_0);
    phitmp2_fu_442_p4 <= tmp_13_fu_413_p2(15 downto 8);
    phitmp3_fu_541_p4 <= tmp_19_fu_506_p2(15 downto 8);
    phitmp_fu_376_p4 <= grp_fu_603_p3(15 downto 8);
        tmp1_cast_fu_410_p1 <= std_logic_vector(resize(signed(grp_fu_585_p3),18));

    tmp_11_fu_342_p1 <= E_fu_333_p2;
    tmp_11_fu_342_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(ap_const_lv17_1FF30) * signed(tmp_11_fu_342_p1))), 17));
    tmp_12_fu_393_p2 <= (icmp_fu_363_p2 or tmp_9_fu_369_p3);
    tmp_13_fu_413_p2 <= std_logic_vector(signed(tmp1_cast_fu_410_p1) + signed(tmp_5_reg_682));
    tmp_14_fu_418_p4 <= tmp_13_fu_413_p2(17 downto 16);
    tmp_15_fu_434_p3 <= tmp_13_fu_413_p2(17 downto 17);
    tmp_16_fu_460_p2 <= (icmp1_fu_428_p2 or tmp_15_fu_434_p3);
    tmp_17_fu_496_p2 <= std_logic_vector(signed(p_shl_cast_fu_481_p1) + signed(p_shl1_cast_fu_492_p1));
    tmp_18_fu_511_p2 <= std_logic_vector(signed(tmp_20_cast_fu_351_p1) + signed(tmp_35_cast_fu_502_p1));
    tmp_19_cast_fu_573_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_s_reg_645_pp0_iter3),64));
    tmp_19_fu_506_p2 <= std_logic_vector(unsigned(tmp_17_fu_496_p2) + unsigned(tmp_5_reg_682));
    tmp_1_fu_291_p1 <= tmp_mid2_v_fu_271_p3(15 - 1 downto 0);
        tmp_20_cast_fu_351_p1 <= std_logic_vector(resize(signed(tmp_5_reg_682),19));

    tmp_20_fu_517_p4 <= tmp_18_fu_511_p2(18 downto 16);
    tmp_21_fu_533_p3 <= tmp_18_fu_511_p2(18 downto 18);
    tmp_22_fu_559_p2 <= (icmp2_fu_527_p2 or tmp_21_fu_533_p3);
        tmp_35_cast_fu_502_p1 <= std_logic_vector(resize(signed(tmp_17_fu_496_p2),19));

    tmp_7_fu_303_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_295_p3) + unsigned(p_shl2_cast_fu_283_p3));
    tmp_8_fu_354_p4 <= grp_fu_603_p3(17 downto 16);
    tmp_9_fu_369_p3 <= grp_fu_603_p3(17 downto 17);
    tmp_cast_fu_309_p1 <= std_logic_vector(resize(unsigned(y_mid2_fu_263_p3),23));
    tmp_fu_279_p1 <= tmp_mid2_v_fu_271_p3(13 - 1 downto 0);
    tmp_mid2_v_fu_271_p3 <= 
        x_1_fu_252_p2 when (exitcond_fu_258_p2(0) = '1') else 
        x_phi_fu_217_p4;
    tmp_s_fu_313_p2 <= std_logic_vector(unsigned(tmp_7_fu_303_p2) + unsigned(tmp_cast_fu_309_p1));
    x_1_fu_252_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(x_phi_fu_217_p4));

    x_phi_fu_217_p4_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_flatten_reg_631, x_reg_213, tmp_mid2_v_reg_640)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_631 = ap_const_lv1_0))) then 
            x_phi_fu_217_p4 <= tmp_mid2_v_reg_640;
        else 
            x_phi_fu_217_p4 <= x_reg_213;
        end if; 
    end process;

    y_1_fu_319_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(y_mid2_fu_263_p3));
    y_mid2_fu_263_p3 <= 
        ap_const_lv16_0 when (exitcond_fu_258_p2(0) = '1') else 
        y_reg_224;
end behav;
