// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _yuv_filter_rgb2yuv11_HH_
#define _yuv_filter_rgb2yuv11_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "yuv_filter_mac_muladd_6ns_8ns_8ns_13_1.h"
#include "yuv_filter_mul_mul_16ns_16ns_32_1.h"
#include "yuv_filter_mac_muladd_8s_8ns_16ns_16_1.h"
#include "yuv_filter_mac_muladd_8ns_8ns_9ns_15_1.h"
#include "yuv_filter_mac_muladd_7s_8ns_9ns_15_1.h"

namespace ap_rtl {

struct yuv_filter_rgb2yuv11 : public sc_module {
    // Port declarations 45
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<22> > in_channels_ch1_address0;
    sc_out< sc_logic > in_channels_ch1_ce0;
    sc_in< sc_lv<8> > in_channels_ch1_q0;
    sc_out< sc_lv<22> > in_channels_ch2_address0;
    sc_out< sc_logic > in_channels_ch2_ce0;
    sc_in< sc_lv<8> > in_channels_ch2_q0;
    sc_out< sc_lv<22> > in_channels_ch3_address0;
    sc_out< sc_logic > in_channels_ch3_ce0;
    sc_in< sc_lv<8> > in_channels_ch3_q0;
    sc_in< sc_lv<16> > in_width;
    sc_in< sc_lv<16> > in_height;
    sc_out< sc_lv<8> > out_channels_ch1_din;
    sc_in< sc_logic > out_channels_ch1_full_n;
    sc_out< sc_logic > out_channels_ch1_write;
    sc_out< sc_lv<8> > out_channels_ch2_din;
    sc_in< sc_logic > out_channels_ch2_full_n;
    sc_out< sc_logic > out_channels_ch2_write;
    sc_out< sc_lv<8> > out_channels_ch3_din;
    sc_in< sc_logic > out_channels_ch3_full_n;
    sc_out< sc_logic > out_channels_ch3_write;
    sc_out< sc_lv<16> > out_width_din;
    sc_in< sc_logic > out_width_full_n;
    sc_out< sc_logic > out_width_write;
    sc_out< sc_lv<16> > out_height_din;
    sc_in< sc_logic > out_height_full_n;
    sc_out< sc_logic > out_height_write;
    sc_in< sc_lv<8> > Y_scale;
    sc_in< sc_lv<8> > U_scale;
    sc_in< sc_lv<8> > V_scale;
    sc_out< sc_lv<8> > Y_scale_out_din;
    sc_in< sc_logic > Y_scale_out_full_n;
    sc_out< sc_logic > Y_scale_out_write;
    sc_out< sc_lv<8> > U_scale_out_din;
    sc_in< sc_logic > U_scale_out_full_n;
    sc_out< sc_logic > U_scale_out_write;
    sc_out< sc_lv<8> > V_scale_out_din;
    sc_in< sc_logic > V_scale_out_full_n;
    sc_out< sc_logic > V_scale_out_write;


    // Module declarations
    yuv_filter_rgb2yuv11(sc_module_name name);
    SC_HAS_PROCESS(yuv_filter_rgb2yuv11);

    ~yuv_filter_rgb2yuv11();

    sc_trace_file* mVcdFile;

    yuv_filter_mac_muladd_6ns_8ns_8ns_13_1<1,1,6,8,8,13>* yuv_filter_mac_muladd_6ns_8ns_8ns_13_1_U0;
    yuv_filter_mul_mul_16ns_16ns_32_1<1,1,16,16,32>* yuv_filter_mul_mul_16ns_16ns_32_1_U1;
    yuv_filter_mac_muladd_8s_8ns_16ns_16_1<1,1,8,8,16,16>* yuv_filter_mac_muladd_8s_8ns_16ns_16_1_U2;
    yuv_filter_mac_muladd_8ns_8ns_9ns_15_1<1,1,8,8,9,15>* yuv_filter_mac_muladd_8ns_8ns_9ns_15_1_U3;
    yuv_filter_mac_muladd_8s_8ns_16ns_16_1<1,1,8,8,16,16>* yuv_filter_mac_muladd_8s_8ns_16ns_16_1_U4;
    yuv_filter_mac_muladd_7s_8ns_9ns_15_1<1,1,7,8,9,15>* yuv_filter_mac_muladd_7s_8ns_9ns_15_1_U5;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_21;
    sc_signal< sc_logic > out_channels_ch1_blk_n;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_659;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter5;
    sc_signal< sc_logic > out_channels_ch2_blk_n;
    sc_signal< sc_logic > out_channels_ch3_blk_n;
    sc_signal< sc_logic > out_width_blk_n;
    sc_signal< sc_logic > out_height_blk_n;
    sc_signal< sc_logic > Y_scale_out_blk_n;
    sc_signal< sc_logic > U_scale_out_blk_n;
    sc_signal< sc_logic > V_scale_out_blk_n;
    sc_signal< sc_lv<32> > indvar_flatten_reg_261;
    sc_signal< sc_lv<16> > x_i_i_reg_272;
    sc_signal< sc_lv<16> > y_i_i_reg_283;
    sc_signal< bool > ap_sig_134;
    sc_signal< sc_lv<32> > bound_fu_607_p2;
    sc_signal< sc_lv<32> > bound_reg_654;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_302_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_145;
    sc_signal< bool > ap_sig_155;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_659_pp0_iter4;
    sc_signal< sc_lv<32> > indvar_flatten_next_fu_307_p2;
    sc_signal< sc_lv<16> > tmp_i_i_mid2_v_fu_332_p3;
    sc_signal< sc_lv<16> > tmp_i_i_mid2_v_reg_668;
    sc_signal< sc_lv<23> > tmp_24_fu_374_p2;
    sc_signal< sc_lv<23> > tmp_24_reg_673;
    sc_signal< sc_lv<16> > y_fu_380_p2;
    sc_signal< sc_lv<8> > R_reg_698;
    sc_signal< sc_lv<8> > G_reg_705;
    sc_signal< sc_lv<8> > B_reg_712;
    sc_signal< sc_lv<12> > p_shl3_i_i_fu_392_p3;
    sc_signal< sc_lv<12> > p_shl3_i_i_reg_719;
    sc_signal< sc_lv<13> > p_neg_i_i_fu_404_p2;
    sc_signal< sc_lv<13> > p_neg_i_i_reg_724;
    sc_signal< sc_lv<8> > tmp_50_i_i_reg_729;
    sc_signal< sc_lv<8> > tmp_58_i_i_reg_734;
    sc_signal< sc_lv<8> > tmp_66_i_i_reg_739;
    sc_signal< sc_lv<16> > x_i_i_phi_fu_276_p4;
    sc_signal< sc_lv<64> > tmp_28_cast_fu_386_p1;
    sc_signal< sc_lv<1> > exitcond_i_i_fu_319_p2;
    sc_signal< sc_lv<16> > x_fu_313_p2;
    sc_signal< sc_lv<13> > tmp_22_fu_340_p1;
    sc_signal< sc_lv<15> > tmp_23_fu_352_p1;
    sc_signal< sc_lv<23> > p_shl_cast_fu_344_p3;
    sc_signal< sc_lv<23> > p_shl1_cast_fu_356_p3;
    sc_signal< sc_lv<16> > y_i_i_mid2_fu_324_p3;
    sc_signal< sc_lv<23> > tmp_i_i_cast_fu_370_p1;
    sc_signal< sc_lv<23> > tmp_s_fu_364_p2;
    sc_signal< sc_lv<13> > p_shl3_cast7_i_i_fu_400_p1;
    sc_signal< sc_lv<14> > p_shl5_i_i_fu_413_p3;
    sc_signal< sc_lv<9> > p_shl6_i_i_fu_424_p3;
    sc_signal< sc_lv<15> > p_shl4_i_i_fu_441_p3;
    sc_signal< sc_lv<10> > p_shl6_cast_i_i_cast_fu_431_p1;
    sc_signal< sc_lv<10> > tmp_fu_455_p2;
    sc_signal< sc_lv<15> > tmp_cast_fu_461_p1;
    sc_signal< sc_lv<15> > p_shl5_cast_i_i_fu_420_p1;
    sc_signal< sc_lv<15> > tmp_46_i_i_fu_465_p2;
    sc_signal< sc_lv<16> > p_shl4_cast_i_i_fu_448_p1;
    sc_signal< sc_lv<16> > tmp_46_cast_i_i_fu_471_p1;
    sc_signal< sc_lv<13> > grp_fu_598_p3;
    sc_signal< sc_lv<16> > tmp2_cast_fu_481_p1;
    sc_signal< sc_lv<16> > tmp1_fu_475_p2;
    sc_signal< sc_lv<16> > tmp_48_i_i_fu_484_p2;
    sc_signal< sc_lv<15> > p_shl2_i_i_fu_500_p3;
    sc_signal< sc_lv<16> > p_shl2_cast_i_i_fu_507_p1;
    sc_signal< sc_lv<16> > p_shl3_cast_i_i_fu_511_p1;
    sc_signal< sc_lv<15> > grp_fu_640_p3;
    sc_signal< sc_lv<16> > tmp_53_i_i_fu_514_p2;
    sc_signal< sc_lv<16> > tmp_54_cast_i_i_fu_520_p1;
    sc_signal< sc_lv<16> > grp_fu_631_p3;
    sc_signal< sc_lv<9> > p_shl1_i_i_fu_541_p3;
    sc_signal< sc_lv<14> > p_neg_cast_i_i_fu_538_p1;
    sc_signal< sc_lv<14> > p_shl1_cast_i_i_fu_548_p1;
    sc_signal< sc_lv<14> > tmp_61_i_i_fu_552_p2;
    sc_signal< sc_lv<15> > grp_fu_622_p3;
    sc_signal< sc_lv<16> > tmp_62_cast_i_i_fu_562_p1;
    sc_signal< sc_lv<16> > tmp_61_cast_i_i_fu_558_p1;
    sc_signal< sc_lv<16> > grp_fu_613_p3;
    sc_signal< sc_lv<6> > grp_fu_598_p0;
    sc_signal< sc_lv<8> > grp_fu_598_p1;
    sc_signal< sc_lv<8> > grp_fu_598_p2;
    sc_signal< sc_lv<16> > bound_fu_607_p0;
    sc_signal< sc_lv<16> > bound_fu_607_p1;
    sc_signal< sc_lv<8> > grp_fu_613_p0;
    sc_signal< sc_lv<8> > grp_fu_613_p1;
    sc_signal< sc_lv<16> > tmp_42_cast11_i_i_fu_435_p1;
    sc_signal< sc_lv<16> > grp_fu_613_p2;
    sc_signal< sc_lv<8> > grp_fu_622_p0;
    sc_signal< sc_lv<8> > grp_fu_622_p1;
    sc_signal< sc_lv<15> > tmp_40_cast14_i_i_fu_410_p1;
    sc_signal< sc_lv<9> > grp_fu_622_p2;
    sc_signal< sc_lv<8> > grp_fu_631_p0;
    sc_signal< sc_lv<8> > grp_fu_631_p1;
    sc_signal< sc_lv<16> > grp_fu_631_p2;
    sc_signal< sc_lv<7> > grp_fu_640_p0;
    sc_signal< sc_lv<8> > grp_fu_640_p1;
    sc_signal< sc_lv<9> > grp_fu_640_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_2;
    sc_signal< bool > ap_sig_494;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_lv<32> > bound_fu_607_p00;
    sc_signal< sc_lv<32> > bound_fu_607_p10;
    sc_signal< sc_lv<13> > grp_fu_598_p10;
    sc_signal< sc_lv<13> > grp_fu_598_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st9_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<10> ap_const_lv10_80;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<13> ap_const_lv13_19;
    static const sc_lv<16> ap_const_lv16_FFA2;
    static const sc_lv<15> ap_const_lv15_7A;
    static const sc_lv<15> ap_const_lv15_80;
    static const sc_lv<16> ap_const_lv16_FFB6;
    static const sc_lv<15> ap_const_lv15_7FDA;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_U_scale_out_blk_n();
    void thread_U_scale_out_din();
    void thread_U_scale_out_write();
    void thread_V_scale_out_blk_n();
    void thread_V_scale_out_din();
    void thread_V_scale_out_write();
    void thread_Y_scale_out_blk_n();
    void thread_Y_scale_out_din();
    void thread_Y_scale_out_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_134();
    void thread_ap_sig_145();
    void thread_ap_sig_155();
    void thread_ap_sig_21();
    void thread_ap_sig_494();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st9_fsm_2();
    void thread_bound_fu_607_p0();
    void thread_bound_fu_607_p00();
    void thread_bound_fu_607_p1();
    void thread_bound_fu_607_p10();
    void thread_exitcond_flatten_fu_302_p2();
    void thread_exitcond_i_i_fu_319_p2();
    void thread_grp_fu_598_p0();
    void thread_grp_fu_598_p1();
    void thread_grp_fu_598_p10();
    void thread_grp_fu_598_p2();
    void thread_grp_fu_598_p20();
    void thread_grp_fu_613_p0();
    void thread_grp_fu_613_p1();
    void thread_grp_fu_613_p2();
    void thread_grp_fu_622_p0();
    void thread_grp_fu_622_p1();
    void thread_grp_fu_622_p2();
    void thread_grp_fu_631_p0();
    void thread_grp_fu_631_p1();
    void thread_grp_fu_631_p2();
    void thread_grp_fu_640_p0();
    void thread_grp_fu_640_p1();
    void thread_grp_fu_640_p2();
    void thread_in_channels_ch1_address0();
    void thread_in_channels_ch1_ce0();
    void thread_in_channels_ch2_address0();
    void thread_in_channels_ch2_ce0();
    void thread_in_channels_ch3_address0();
    void thread_in_channels_ch3_ce0();
    void thread_indvar_flatten_next_fu_307_p2();
    void thread_out_channels_ch1_blk_n();
    void thread_out_channels_ch1_din();
    void thread_out_channels_ch1_write();
    void thread_out_channels_ch2_blk_n();
    void thread_out_channels_ch2_din();
    void thread_out_channels_ch2_write();
    void thread_out_channels_ch3_blk_n();
    void thread_out_channels_ch3_din();
    void thread_out_channels_ch3_write();
    void thread_out_height_blk_n();
    void thread_out_height_din();
    void thread_out_height_write();
    void thread_out_width_blk_n();
    void thread_out_width_din();
    void thread_out_width_write();
    void thread_p_neg_cast_i_i_fu_538_p1();
    void thread_p_neg_i_i_fu_404_p2();
    void thread_p_shl1_cast_fu_356_p3();
    void thread_p_shl1_cast_i_i_fu_548_p1();
    void thread_p_shl1_i_i_fu_541_p3();
    void thread_p_shl2_cast_i_i_fu_507_p1();
    void thread_p_shl2_i_i_fu_500_p3();
    void thread_p_shl3_cast7_i_i_fu_400_p1();
    void thread_p_shl3_cast_i_i_fu_511_p1();
    void thread_p_shl3_i_i_fu_392_p3();
    void thread_p_shl4_cast_i_i_fu_448_p1();
    void thread_p_shl4_i_i_fu_441_p3();
    void thread_p_shl5_cast_i_i_fu_420_p1();
    void thread_p_shl5_i_i_fu_413_p3();
    void thread_p_shl6_cast_i_i_cast_fu_431_p1();
    void thread_p_shl6_i_i_fu_424_p3();
    void thread_p_shl_cast_fu_344_p3();
    void thread_tmp1_fu_475_p2();
    void thread_tmp2_cast_fu_481_p1();
    void thread_tmp_22_fu_340_p1();
    void thread_tmp_23_fu_352_p1();
    void thread_tmp_24_fu_374_p2();
    void thread_tmp_28_cast_fu_386_p1();
    void thread_tmp_40_cast14_i_i_fu_410_p1();
    void thread_tmp_42_cast11_i_i_fu_435_p1();
    void thread_tmp_46_cast_i_i_fu_471_p1();
    void thread_tmp_46_i_i_fu_465_p2();
    void thread_tmp_48_i_i_fu_484_p2();
    void thread_tmp_53_i_i_fu_514_p2();
    void thread_tmp_54_cast_i_i_fu_520_p1();
    void thread_tmp_61_cast_i_i_fu_558_p1();
    void thread_tmp_61_i_i_fu_552_p2();
    void thread_tmp_62_cast_i_i_fu_562_p1();
    void thread_tmp_cast_fu_461_p1();
    void thread_tmp_fu_455_p2();
    void thread_tmp_i_i_cast_fu_370_p1();
    void thread_tmp_i_i_mid2_v_fu_332_p3();
    void thread_tmp_s_fu_364_p2();
    void thread_x_fu_313_p2();
    void thread_x_i_i_phi_fu_276_p4();
    void thread_y_fu_380_p2();
    void thread_y_i_i_mid2_fu_324_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
