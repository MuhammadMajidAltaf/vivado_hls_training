-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yuv_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch1_ce0 : OUT STD_LOGIC;
    in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch2_ce0 : OUT STD_LOGIC;
    in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch3_ce0 : OUT STD_LOGIC;
    in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_width : IN STD_LOGIC_VECTOR (15 downto 0);
    in_height : IN STD_LOGIC_VECTOR (15 downto 0);
    out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch1_ce0 : OUT STD_LOGIC;
    out_channels_ch1_we0 : OUT STD_LOGIC;
    out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch2_ce0 : OUT STD_LOGIC;
    out_channels_ch2_we0 : OUT STD_LOGIC;
    out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch3_ce0 : OUT STD_LOGIC;
    out_channels_ch3_we0 : OUT STD_LOGIC;
    out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_width : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_width_ap_vld : OUT STD_LOGIC;
    out_height : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_height_ap_vld : OUT STD_LOGIC;
    Y_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    U_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    V_scale : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of yuv_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "yuv_filter,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=11.190000,HLS_SYN_LAT=2353228,HLS_SYN_TPT=none,HLS_SYN_MEM=12288,HLS_SYN_DSP=15,HLS_SYN_FF=911,HLS_SYN_LUT=1145}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_st11_fsm_3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_st12_fsm_4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_20 : BOOLEAN;
    signal indvar_flatten_reg_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_i_reg_237 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_i_reg_248 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_yuv_width_reg_492 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_95 : BOOLEAN;
    signal grp_yuv_filter_rgb2yuv_fu_259_ap_done : STD_LOGIC;
    signal p_yuv_height_reg_497 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_cast_fu_302_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_cast_reg_503 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_i_cast_fu_306_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_i_cast_reg_508 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2_i_cast_fu_310_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2_i_cast_reg_513 : STD_LOGIC_VECTOR (14 downto 0);
    signal bound_fu_476_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_reg_518 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_flatten_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_523 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_118 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter5 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_327_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_i_mid2_v_fu_352_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_i_mid2_v_reg_532 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_394_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_3_reg_537 : STD_LOGIC_VECTOR (22 downto 0);
    signal y_fu_400_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_cast_fu_406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_cast_reg_547 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_yuv_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Y_reg_569 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal U_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal V_reg_579 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_i_reg_584 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_i_reg_589 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_i_reg_594 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch1_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch1_we0 : STD_LOGIC;
    signal p_yuv_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch2_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch2_we0 : STD_LOGIC;
    signal p_yuv_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch3_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch3_we0 : STD_LOGIC;
    signal p_scale_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch1_ce0 : STD_LOGIC;
    signal p_scale_channels_ch1_we0 : STD_LOGIC;
    signal p_scale_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch2_ce0 : STD_LOGIC;
    signal p_scale_channels_ch2_we0 : STD_LOGIC;
    signal p_scale_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch3_ce0 : STD_LOGIC;
    signal p_scale_channels_ch3_we0 : STD_LOGIC;
    signal p_scale_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_ap_start : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_ap_idle : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_ap_ready : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_259_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_ap_start : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_ap_done : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_ap_idle : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_ap_ready : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_279_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_i_phi_fu_241_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_grp_yuv_filter_rgb2yuv_fu_259_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_yuv_filter_yuv2rgb_fu_279_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st11_fsm_3 : STD_LOGIC;
    signal ap_sig_338 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_4 : STD_LOGIC;
    signal ap_sig_345 : BOOLEAN;
    signal exitcond_i5_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_333_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_360_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_372_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl_cast_fu_364_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl3_cast_fu_376_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal y_i_mid2_fu_344_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_i_cast_fu_390_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_2_fu_384_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_7_i_fu_415_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_i_fu_415_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_fu_423_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_fu_423_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_i_fu_431_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_i_fu_431_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_i_fu_415_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_fu_423_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_i_fu_431_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal bound_fu_476_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bound_fu_476_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal bound_fu_476_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_476_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_i_fu_415_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_i_fu_431_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_fu_423_p00 : STD_LOGIC_VECTOR (14 downto 0);

    component yuv_filter_rgb2yuv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        out_width : IN STD_LOGIC_VECTOR (15 downto 0);
        out_height : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_yuv2rgb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        out_width : IN STD_LOGIC_VECTOR (15 downto 0);
        out_height : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_mul_mul_16ns_16ns_32_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component yuv_filter_p_yuv_channels_ch1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    p_yuv_channels_ch1_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch1_address0,
        ce0 => p_yuv_channels_ch1_ce0,
        we0 => p_yuv_channels_ch1_we0,
        d0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_d0,
        q0 => p_yuv_channels_ch1_q0);

    p_yuv_channels_ch2_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch2_address0,
        ce0 => p_yuv_channels_ch2_ce0,
        we0 => p_yuv_channels_ch2_we0,
        d0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_d0,
        q0 => p_yuv_channels_ch2_q0);

    p_yuv_channels_ch3_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch3_address0,
        ce0 => p_yuv_channels_ch3_ce0,
        we0 => p_yuv_channels_ch3_we0,
        d0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_d0,
        q0 => p_yuv_channels_ch3_q0);

    p_scale_channels_ch1_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch1_address0,
        ce0 => p_scale_channels_ch1_ce0,
        we0 => p_scale_channels_ch1_we0,
        d0 => tmp_10_i_reg_584,
        q0 => p_scale_channels_ch1_q0);

    p_scale_channels_ch2_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch2_address0,
        ce0 => p_scale_channels_ch2_ce0,
        we0 => p_scale_channels_ch2_we0,
        d0 => tmp_11_i_reg_589,
        q0 => p_scale_channels_ch2_q0);

    p_scale_channels_ch3_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch3_address0,
        ce0 => p_scale_channels_ch3_ce0,
        we0 => p_scale_channels_ch3_we0,
        d0 => tmp_12_i_reg_594,
        q0 => p_scale_channels_ch3_q0);

    grp_yuv_filter_rgb2yuv_fu_259 : component yuv_filter_rgb2yuv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv_filter_rgb2yuv_fu_259_ap_start,
        ap_done => grp_yuv_filter_rgb2yuv_fu_259_ap_done,
        ap_idle => grp_yuv_filter_rgb2yuv_fu_259_ap_idle,
        ap_ready => grp_yuv_filter_rgb2yuv_fu_259_ap_ready,
        in_channels_ch1_address0 => grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch1_ce0,
        in_channels_ch1_q0 => in_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch2_ce0,
        in_channels_ch2_q0 => in_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch3_ce0,
        in_channels_ch3_q0 => in_channels_ch3_q0,
        out_width => in_width,
        out_height => in_height,
        out_channels_ch1_address0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_d0,
        ap_return_0 => grp_yuv_filter_rgb2yuv_fu_259_ap_return_0,
        ap_return_1 => grp_yuv_filter_rgb2yuv_fu_259_ap_return_1);

    grp_yuv_filter_yuv2rgb_fu_279 : component yuv_filter_yuv2rgb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv_filter_yuv2rgb_fu_279_ap_start,
        ap_done => grp_yuv_filter_yuv2rgb_fu_279_ap_done,
        ap_idle => grp_yuv_filter_yuv2rgb_fu_279_ap_idle,
        ap_ready => grp_yuv_filter_yuv2rgb_fu_279_ap_ready,
        in_channels_ch1_address0 => grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch1_ce0,
        in_channels_ch1_q0 => p_scale_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch2_ce0,
        in_channels_ch2_q0 => p_scale_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch3_ce0,
        in_channels_ch3_q0 => p_scale_channels_ch3_q0,
        out_width => p_yuv_width_reg_492,
        out_height => p_yuv_height_reg_497,
        out_channels_ch1_address0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_d0,
        ap_return_0 => grp_yuv_filter_yuv2rgb_fu_279_ap_return_0,
        ap_return_1 => grp_yuv_filter_yuv2rgb_fu_279_ap_return_1);

    yuv_filter_mul_mul_16ns_16ns_32_1_U24 : component yuv_filter_mul_mul_16ns_16ns_32_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        din0 => bound_fu_476_p0,
        din1 => bound_fu_476_p1,
        dout => bound_fu_476_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_yuv_filter_rgb2yuv_fu_259_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_yuv_filter_rgb2yuv_fu_259_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_grp_yuv_filter_rgb2yuv_fu_259_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_yuv_filter_rgb2yuv_fu_259_ap_ready)) then 
                    ap_reg_grp_yuv_filter_rgb2yuv_fu_259_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_yuv_filter_yuv2rgb_fu_279_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_yuv_filter_yuv2rgb_fu_279_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_3)) then 
                    ap_reg_grp_yuv_filter_yuv2rgb_fu_279_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_yuv_filter_yuv2rgb_fu_279_ap_ready)) then 
                    ap_reg_grp_yuv_filter_yuv2rgb_fu_279_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((exitcond_flatten_fu_322_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_259_ap_done)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_322_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_259_ap_done))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not((exitcond_flatten_fu_322_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
            end if;
        end if;
    end process;


    indvar_flatten_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_322_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_226 <= indvar_flatten_next_fu_327_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_259_ap_done)))) then 
                indvar_flatten_reg_226 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_i_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_523 = ap_const_lv1_0))) then 
                x_i_reg_237 <= tmp_3_i_mid2_v_reg_532;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_259_ap_done)))) then 
                x_i_reg_237 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    y_i_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_322_p2 = ap_const_lv1_0))) then 
                y_i_reg_248 <= y_fu_400_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_259_ap_done)))) then 
                y_i_reg_248 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter3 = ap_const_lv1_0)) then
                U_reg_574 <= p_yuv_channels_ch2_q0;
                V_reg_579 <= p_yuv_channels_ch3_q0;
                Y_reg_569 <= p_yuv_channels_ch1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2)) then
                ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter1 <= exitcond_flatten_reg_523;
                exitcond_flatten_reg_523 <= exitcond_flatten_fu_322_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_true = ap_true)) then
                ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter2 <= ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter1;
                ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter3 <= ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter2;
                ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter4 <= ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter3;
                ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter5 <= ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter4;
                    ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter2(22 downto 0) <= tmp_3_cast_reg_547(22 downto 0);
                    ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter3(22 downto 0) <= ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter2(22 downto 0);
                    ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter4(22 downto 0) <= ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter3(22 downto 0);
                    ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter5(22 downto 0) <= ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter4(22 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_259_ap_done)))) then
                bound_reg_518 <= bound_fu_476_p2;
                p_yuv_height_reg_497 <= grp_yuv_filter_rgb2yuv_fu_259_ap_return_1;
                p_yuv_width_reg_492 <= grp_yuv_filter_rgb2yuv_fu_259_ap_return_0;
                    tmp_1_i_cast_reg_508(7 downto 0) <= tmp_1_i_cast_fu_306_p1(7 downto 0);
                    tmp_2_i_cast_reg_513(7 downto 0) <= tmp_2_i_cast_fu_310_p1(7 downto 0);
                    tmp_i_cast_reg_503(7 downto 0) <= tmp_i_cast_fu_302_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter4 = ap_const_lv1_0)) then
                tmp_10_i_reg_584 <= tmp_7_i_fu_415_p2(14 downto 7);
                tmp_11_i_reg_589 <= tmp_i_fu_423_p2(14 downto 7);
                tmp_12_i_reg_594 <= tmp_8_i_fu_431_p2(14 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_reg_523 = ap_const_lv1_0))) then
                    tmp_3_cast_reg_547(22 downto 0) <= tmp_3_cast_fu_406_p1(22 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond_flatten_fu_322_p2 = ap_const_lv1_0))) then
                tmp_3_i_mid2_v_reg_532 <= tmp_3_i_mid2_v_fu_352_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (exitcond_flatten_fu_322_p2 = ap_const_lv1_0))) then
                tmp_3_reg_537 <= tmp_3_fu_394_p2;
            end if;
        end if;
    end process;
    tmp_i_cast_reg_503(14 downto 8) <= "0000000";
    tmp_1_i_cast_reg_508(14 downto 8) <= "0000000";
    tmp_2_i_cast_reg_513(14 downto 8) <= "0000000";
    tmp_3_cast_reg_547(63 downto 23) <= "00000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter2(63 downto 23) <= "00000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter3(63 downto 23) <= "00000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter4(63 downto 23) <= "00000000000000000000000000000000000000000";
    ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter5(63 downto 23) <= "00000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_yuv_filter_rgb2yuv_fu_259_ap_done, exitcond_flatten_fu_322_p2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, grp_yuv_filter_yuv2rgb_fu_279_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_259_ap_done))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((exitcond_flatten_fu_322_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((exitcond_flatten_fu_322_p2 = ap_const_lv1_0)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_3;
                end if;
            when ap_ST_st11_fsm_3 => 
                ap_NS_fsm <= ap_ST_st12_fsm_4;
            when ap_ST_st12_fsm_4 => 
                if (not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_279_ap_done))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_279_ap_done, ap_sig_cseq_ST_st12_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_4) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_279_ap_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_279_ap_done, ap_sig_cseq_ST_st12_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_4) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_279_ap_done)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_118_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_118 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_338_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_338 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_345_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_345 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_95_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_95 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_118)
    begin
        if (ap_sig_118) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_3_assign_proc : process(ap_sig_338)
    begin
        if (ap_sig_338) then 
            ap_sig_cseq_ST_st11_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_4_assign_proc : process(ap_sig_345)
    begin
        if (ap_sig_345) then 
            ap_sig_cseq_ST_st12_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_20)
    begin
        if (ap_sig_20) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_95)
    begin
        if (ap_sig_95) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;

    bound_fu_476_p0 <= bound_fu_476_p00(16 - 1 downto 0);
    bound_fu_476_p00 <= std_logic_vector(resize(unsigned(grp_yuv_filter_rgb2yuv_fu_259_ap_return_1),32));
    bound_fu_476_p1 <= bound_fu_476_p10(16 - 1 downto 0);
    bound_fu_476_p10 <= std_logic_vector(resize(unsigned(grp_yuv_filter_rgb2yuv_fu_259_ap_return_0),32));
    exitcond_flatten_fu_322_p2 <= "1" when (indvar_flatten_reg_226 = bound_reg_518) else "0";
    exitcond_i5_fu_339_p2 <= "1" when (y_i_reg_248 = p_yuv_height_reg_497) else "0";
    grp_yuv_filter_rgb2yuv_fu_259_ap_start <= ap_reg_grp_yuv_filter_rgb2yuv_fu_259_ap_start;
    grp_yuv_filter_yuv2rgb_fu_279_ap_start <= ap_reg_grp_yuv_filter_yuv2rgb_fu_279_ap_start;
    in_channels_ch1_address0 <= grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch1_address0;
    in_channels_ch1_ce0 <= grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch1_ce0;
    in_channels_ch2_address0 <= grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch2_address0;
    in_channels_ch2_ce0 <= grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch2_ce0;
    in_channels_ch3_address0 <= grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch3_address0;
    in_channels_ch3_ce0 <= grp_yuv_filter_rgb2yuv_fu_259_in_channels_ch3_ce0;
    indvar_flatten_next_fu_327_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_226) + unsigned(ap_const_lv32_1));
    out_channels_ch1_address0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_address0;
    out_channels_ch1_ce0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_ce0;
    out_channels_ch1_d0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_d0;
    out_channels_ch1_we0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch1_we0;
    out_channels_ch2_address0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_address0;
    out_channels_ch2_ce0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_ce0;
    out_channels_ch2_d0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_d0;
    out_channels_ch2_we0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch2_we0;
    out_channels_ch3_address0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_address0;
    out_channels_ch3_ce0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_ce0;
    out_channels_ch3_d0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_d0;
    out_channels_ch3_we0 <= grp_yuv_filter_yuv2rgb_fu_279_out_channels_ch3_we0;
    out_height <= grp_yuv_filter_yuv2rgb_fu_279_ap_return_1;

    out_height_ap_vld_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_279_ap_done, ap_sig_cseq_ST_st12_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_4) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_279_ap_done)))) then 
            out_height_ap_vld <= ap_const_logic_1;
        else 
            out_height_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_width <= grp_yuv_filter_yuv2rgb_fu_279_ap_return_0;

    out_width_ap_vld_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_279_ap_done, ap_sig_cseq_ST_st12_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_4) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_279_ap_done)))) then 
            out_width_ap_vld <= ap_const_logic_1;
        else 
            out_width_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch1_address0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter5, grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch1_address0, ap_sig_cseq_ST_st12_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)) then 
            p_scale_channels_ch1_address0 <= ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter5(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_4)) then 
            p_scale_channels_ch1_address0 <= grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch1_address0;
        else 
            p_scale_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch1_ce0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch1_ce0, ap_sig_cseq_ST_st12_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) or (ap_const_logic_1 = ap_reg_ppiten_pp0_it7))) then 
            p_scale_channels_ch1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_4)) then 
            p_scale_channels_ch1_ce0 <= grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch1_ce0;
        else 
            p_scale_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch1_we0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter5 = ap_const_lv1_0)))) then 
            p_scale_channels_ch1_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch2_address0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter5, grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch2_address0, ap_sig_cseq_ST_st12_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)) then 
            p_scale_channels_ch2_address0 <= ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter5(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_4)) then 
            p_scale_channels_ch2_address0 <= grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch2_address0;
        else 
            p_scale_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch2_ce0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch2_ce0, ap_sig_cseq_ST_st12_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) or (ap_const_logic_1 = ap_reg_ppiten_pp0_it7))) then 
            p_scale_channels_ch2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_4)) then 
            p_scale_channels_ch2_ce0 <= grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch2_ce0;
        else 
            p_scale_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch2_we0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter5 = ap_const_lv1_0)))) then 
            p_scale_channels_ch2_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch3_address0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter5, grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch3_address0, ap_sig_cseq_ST_st12_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)) then 
            p_scale_channels_ch3_address0 <= ap_reg_ppstg_tmp_3_cast_reg_547_pp0_iter5(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_4)) then 
            p_scale_channels_ch3_address0 <= grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch3_address0;
        else 
            p_scale_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch3_ce0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch3_ce0, ap_sig_cseq_ST_st12_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) or (ap_const_logic_1 = ap_reg_ppiten_pp0_it7))) then 
            p_scale_channels_ch3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_4)) then 
            p_scale_channels_ch3_ce0 <= grp_yuv_filter_yuv2rgb_fu_279_in_channels_ch3_ce0;
        else 
            p_scale_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch3_we0_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter5)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and (ap_reg_ppstg_exitcond_flatten_reg_523_pp0_iter5 = ap_const_lv1_0)))) then 
            p_scale_channels_ch3_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl3_cast_fu_376_p3 <= (tmp_1_fu_372_p1 & ap_const_lv8_0);
    p_shl_cast_fu_364_p3 <= (tmp_fu_360_p1 & ap_const_lv10_0);

    p_yuv_channels_ch1_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, tmp_3_cast_fu_406_p1, grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_address0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            p_yuv_channels_ch1_address0 <= tmp_3_cast_fu_406_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch1_address0 <= grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_address0;
        else 
            p_yuv_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch1_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) or (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) or (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
            p_yuv_channels_ch1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch1_ce0 <= grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_ce0;
        else 
            p_yuv_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch1_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch1_we0 <= grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch1_we0;
        else 
            p_yuv_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch2_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, tmp_3_cast_fu_406_p1, grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_address0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            p_yuv_channels_ch2_address0 <= tmp_3_cast_fu_406_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch2_address0 <= grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_address0;
        else 
            p_yuv_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch2_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) or (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) or (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
            p_yuv_channels_ch2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch2_ce0 <= grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_ce0;
        else 
            p_yuv_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch2_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch2_we0 <= grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch2_we0;
        else 
            p_yuv_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch3_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, tmp_3_cast_fu_406_p1, grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_address0)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            p_yuv_channels_ch3_address0 <= tmp_3_cast_fu_406_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch3_address0 <= grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_address0;
        else 
            p_yuv_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch3_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) or (ap_const_logic_1 = ap_reg_ppiten_pp0_it3) or (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then 
            p_yuv_channels_ch3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch3_ce0 <= grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_ce0;
        else 
            p_yuv_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch3_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch3_we0 <= grp_yuv_filter_rgb2yuv_fu_259_out_channels_ch3_we0;
        else 
            p_yuv_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_372_p1 <= tmp_3_i_mid2_v_fu_352_p3(15 - 1 downto 0);
    tmp_1_i_cast_fu_306_p1 <= std_logic_vector(resize(unsigned(U_scale),15));
    tmp_2_fu_384_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_364_p3) + unsigned(p_shl3_cast_fu_376_p3));
    tmp_2_i_cast_fu_310_p1 <= std_logic_vector(resize(unsigned(V_scale),15));
    tmp_3_cast_fu_406_p1 <= std_logic_vector(resize(unsigned(tmp_3_reg_537),64));
    tmp_3_fu_394_p2 <= std_logic_vector(unsigned(tmp_5_i_cast_fu_390_p1) + unsigned(tmp_2_fu_384_p2));
    tmp_3_i_mid2_v_fu_352_p3 <= 
        x_fu_333_p2 when (exitcond_i5_fu_339_p2(0) = '1') else 
        x_i_phi_fu_241_p4;
    tmp_5_i_cast_fu_390_p1 <= std_logic_vector(resize(unsigned(y_i_mid2_fu_344_p3),23));
    tmp_7_i_fu_415_p0 <= tmp_7_i_fu_415_p00(8 - 1 downto 0);
    tmp_7_i_fu_415_p00 <= std_logic_vector(resize(unsigned(Y_reg_569),15));
    tmp_7_i_fu_415_p1 <= tmp_i_cast_reg_503(8 - 1 downto 0);
    tmp_7_i_fu_415_p2 <= std_logic_vector(resize(unsigned(tmp_7_i_fu_415_p0) * unsigned(tmp_7_i_fu_415_p1), 15));
    tmp_8_i_fu_431_p0 <= tmp_8_i_fu_431_p00(8 - 1 downto 0);
    tmp_8_i_fu_431_p00 <= std_logic_vector(resize(unsigned(V_reg_579),15));
    tmp_8_i_fu_431_p1 <= tmp_2_i_cast_reg_513(8 - 1 downto 0);
    tmp_8_i_fu_431_p2 <= std_logic_vector(resize(unsigned(tmp_8_i_fu_431_p0) * unsigned(tmp_8_i_fu_431_p1), 15));
    tmp_fu_360_p1 <= tmp_3_i_mid2_v_fu_352_p3(13 - 1 downto 0);
    tmp_i_cast_fu_302_p1 <= std_logic_vector(resize(unsigned(Y_scale),15));
    tmp_i_fu_423_p0 <= tmp_i_fu_423_p00(8 - 1 downto 0);
    tmp_i_fu_423_p00 <= std_logic_vector(resize(unsigned(U_reg_574),15));
    tmp_i_fu_423_p1 <= tmp_1_i_cast_reg_508(8 - 1 downto 0);
    tmp_i_fu_423_p2 <= std_logic_vector(resize(unsigned(tmp_i_fu_423_p0) * unsigned(tmp_i_fu_423_p1), 15));
    x_fu_333_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(x_i_phi_fu_241_p4));

    x_i_phi_fu_241_p4_assign_proc : process(x_i_reg_237, exitcond_flatten_reg_523, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, tmp_3_i_mid2_v_reg_532)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_flatten_reg_523 = ap_const_lv1_0))) then 
            x_i_phi_fu_241_p4 <= tmp_3_i_mid2_v_reg_532;
        else 
            x_i_phi_fu_241_p4 <= x_i_reg_237;
        end if; 
    end process;

    y_fu_400_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(y_i_mid2_fu_344_p3));
    y_i_mid2_fu_344_p3 <= 
        ap_const_lv16_0 when (exitcond_i5_fu_339_p2(0) = '1') else 
        y_i_reg_248;
end behav;
