// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _yuv_filter_rgb2yuv_HH_
#define _yuv_filter_rgb2yuv_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "yuv_filter_mul_mul_16ns_16ns_32_1.h"
#include "yuv_filter_mac_muladd_8s_8ns_16ns_16_1.h"
#include "yuv_filter_mac_muladd_7s_8ns_16ns_16_1.h"
#include "yuv_filter_mac_muladd_6ns_8ns_9ns_13_1.h"

namespace ap_rtl {

struct yuv_filter_rgb2yuv : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<22> > in_channels_ch1_address0;
    sc_out< sc_logic > in_channels_ch1_ce0;
    sc_in< sc_lv<8> > in_channels_ch1_q0;
    sc_out< sc_lv<22> > in_channels_ch2_address0;
    sc_out< sc_logic > in_channels_ch2_ce0;
    sc_in< sc_lv<8> > in_channels_ch2_q0;
    sc_out< sc_lv<22> > in_channels_ch3_address0;
    sc_out< sc_logic > in_channels_ch3_ce0;
    sc_in< sc_lv<8> > in_channels_ch3_q0;
    sc_in< sc_lv<16> > out_width;
    sc_in< sc_lv<16> > out_height;
    sc_out< sc_lv<22> > out_channels_ch1_address0;
    sc_out< sc_logic > out_channels_ch1_ce0;
    sc_out< sc_logic > out_channels_ch1_we0;
    sc_out< sc_lv<8> > out_channels_ch1_d0;
    sc_out< sc_lv<22> > out_channels_ch2_address0;
    sc_out< sc_logic > out_channels_ch2_ce0;
    sc_out< sc_logic > out_channels_ch2_we0;
    sc_out< sc_lv<8> > out_channels_ch2_d0;
    sc_out< sc_lv<22> > out_channels_ch3_address0;
    sc_out< sc_logic > out_channels_ch3_ce0;
    sc_out< sc_logic > out_channels_ch3_we0;
    sc_out< sc_lv<8> > out_channels_ch3_d0;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;


    // Module declarations
    yuv_filter_rgb2yuv(sc_module_name name);
    SC_HAS_PROCESS(yuv_filter_rgb2yuv);

    ~yuv_filter_rgb2yuv();

    sc_trace_file* mVcdFile;

    yuv_filter_mul_mul_16ns_16ns_32_1<1,1,16,16,32>* yuv_filter_mul_mul_16ns_16ns_32_1_U0;
    yuv_filter_mac_muladd_8s_8ns_16ns_16_1<1,1,8,8,16,16>* yuv_filter_mac_muladd_8s_8ns_16ns_16_1_U1;
    yuv_filter_mac_muladd_7s_8ns_16ns_16_1<1,1,7,8,16,16>* yuv_filter_mac_muladd_7s_8ns_16ns_16_1_U2;
    yuv_filter_mac_muladd_6ns_8ns_9ns_13_1<1,1,6,8,9,13>* yuv_filter_mac_muladd_6ns_8ns_9ns_13_1_U3;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_20;
    sc_signal< sc_lv<32> > indvar_flatten_reg_190;
    sc_signal< sc_lv<16> > x_reg_201;
    sc_signal< sc_lv<16> > y_reg_212;
    sc_signal< sc_lv<32> > bound_fu_558_p2;
    sc_signal< sc_lv<32> > bound_reg_599;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_231_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_604;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_91;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it5;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it6;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it7;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it8;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_604_pp0_iter1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_604_pp0_iter2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_604_pp0_iter3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_604_pp0_iter4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_604_pp0_iter5;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_604_pp0_iter6;
    sc_signal< sc_lv<32> > indvar_flatten_next_fu_236_p2;
    sc_signal< sc_lv<16> > tmp_mid2_v_fu_261_p3;
    sc_signal< sc_lv<16> > tmp_mid2_v_reg_613;
    sc_signal< sc_lv<23> > tmp_22_fu_303_p2;
    sc_signal< sc_lv<23> > tmp_22_reg_618;
    sc_signal< sc_lv<16> > y_2_fu_309_p2;
    sc_signal< sc_lv<64> > tmp_24_cast_fu_315_p1;
    sc_signal< sc_lv<64> > tmp_24_cast_reg_628;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_24_cast_reg_628_pp0_iter2;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_24_cast_reg_628_pp0_iter3;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_24_cast_reg_628_pp0_iter4;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_24_cast_reg_628_pp0_iter5;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_24_cast_reg_628_pp0_iter6;
    sc_signal< sc_lv<8> > R_reg_651;
    sc_signal< sc_lv<8> > ap_reg_ppstg_R_reg_651_pp0_iter5;
    sc_signal< sc_lv<8> > G_reg_659;
    sc_signal< sc_lv<8> > ap_reg_ppstg_G_reg_659_pp0_iter5;
    sc_signal< sc_lv<8> > B_reg_666;
    sc_signal< sc_lv<16> > tmp_35_cast1_fu_323_p1;
    sc_signal< sc_lv<16> > tmp_35_cast1_reg_674;
    sc_signal< sc_lv<16> > tmp_27_fu_326_p2;
    sc_signal< sc_lv<16> > tmp_27_reg_679;
    sc_signal< sc_lv<16> > tmp_31_fu_332_p2;
    sc_signal< sc_lv<16> > tmp_31_reg_684;
    sc_signal< sc_lv<8> > tmp_25_reg_689;
    sc_signal< sc_lv<8> > tmp_30_reg_694;
    sc_signal< sc_lv<8> > tmp_35_reg_699;
    sc_signal< sc_lv<16> > x_phi_fu_205_p4;
    sc_signal< sc_lv<1> > exitcond9_fu_248_p2;
    sc_signal< sc_lv<16> > x_2_fu_242_p2;
    sc_signal< sc_lv<13> > tmp_fu_269_p1;
    sc_signal< sc_lv<15> > tmp_20_fu_281_p1;
    sc_signal< sc_lv<23> > p_shl_cast_fu_273_p3;
    sc_signal< sc_lv<23> > p_shl7_cast_fu_285_p3;
    sc_signal< sc_lv<16> > y_mid2_fu_253_p3;
    sc_signal< sc_lv<23> > tmp_cast_fu_299_p1;
    sc_signal< sc_lv<23> > tmp_s_fu_293_p2;
    sc_signal< sc_lv<8> > tmp_27_fu_326_p1;
    sc_signal< sc_lv<8> > tmp_31_fu_332_p1;
    sc_signal< sc_lv<14> > p_shl5_fu_341_p3;
    sc_signal< sc_lv<9> > p_shl6_fu_352_p3;
    sc_signal< sc_lv<15> > p_shl4_fu_366_p3;
    sc_signal< sc_lv<15> > p_shl6_cast_fu_359_p1;
    sc_signal< sc_lv<15> > p_shl5_cast_fu_348_p1;
    sc_signal< sc_lv<15> > tmp2_fu_380_p2;
    sc_signal< sc_lv<16> > tmp2_cast_fu_386_p1;
    sc_signal< sc_lv<16> > p_shl4_cast_fu_373_p1;
    sc_signal< sc_lv<9> > tmp_35_cast2_fu_363_p1;
    sc_signal< sc_lv<9> > tmp4_fu_396_p2;
    sc_signal< sc_lv<13> > grp_fu_579_p3;
    sc_signal< sc_lv<16> > tmp3_cast_fu_406_p1;
    sc_signal< sc_lv<16> > tmp1_fu_390_p2;
    sc_signal< sc_lv<16> > tmp_24_fu_409_p2;
    sc_signal< sc_lv<15> > p_shl2_fu_425_p3;
    sc_signal< sc_lv<12> > p_shl3_fu_436_p3;
    sc_signal< sc_lv<16> > p_shl2_cast_fu_432_p1;
    sc_signal< sc_lv<16> > p_shl3_cast_fu_447_p1;
    sc_signal< sc_lv<16> > tmp_28_fu_451_p2;
    sc_signal< sc_lv<16> > tmp6_fu_457_p2;
    sc_signal< sc_lv<16> > grp_fu_571_p3;
    sc_signal< sc_lv<16> > tmp_29_fu_463_p2;
    sc_signal< sc_lv<13> > p_shl3_cast9_fu_443_p1;
    sc_signal< sc_lv<13> > p_neg_fu_478_p2;
    sc_signal< sc_lv<9> > p_shl1_fu_488_p3;
    sc_signal< sc_lv<14> > p_neg_cast_fu_484_p1;
    sc_signal< sc_lv<14> > p_shl1_cast_fu_495_p1;
    sc_signal< sc_lv<14> > tmp_33_fu_499_p2;
    sc_signal< sc_lv<14> > tmp8_fu_505_p2;
    sc_signal< sc_lv<16> > tmp8_cast_fu_511_p1;
    sc_signal< sc_lv<16> > grp_fu_564_p3;
    sc_signal< sc_lv<16> > tmp_34_fu_515_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_2;
    sc_signal< bool > ap_sig_379;
    sc_signal< sc_lv<16> > bound_fu_558_p0;
    sc_signal< sc_lv<16> > bound_fu_558_p1;
    sc_signal< sc_lv<8> > grp_fu_564_p0;
    sc_signal< sc_lv<8> > grp_fu_564_p1;
    sc_signal< sc_lv<7> > grp_fu_571_p0;
    sc_signal< sc_lv<8> > grp_fu_571_p1;
    sc_signal< sc_lv<6> > grp_fu_579_p0;
    sc_signal< sc_lv<8> > grp_fu_579_p1;
    sc_signal< sc_lv<9> > grp_fu_579_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_lv<32> > bound_fu_558_p00;
    sc_signal< sc_lv<32> > bound_fu_558_p10;
    sc_signal< sc_lv<15> > grp_fu_571_p10;
    sc_signal< sc_lv<13> > grp_fu_579_p10;
    sc_signal< sc_lv<13> > grp_fu_579_p20;
    sc_signal< sc_lv<16> > tmp_27_fu_326_p10;
    sc_signal< sc_lv<16> > tmp_31_fu_332_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st11_fsm_2;
    static const bool ap_true;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_FFB6;
    static const sc_lv<16> ap_const_lv16_7A;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<9> ap_const_lv9_80;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<16> ap_const_lv16_80;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<14> ap_const_lv14_80;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<16> ap_const_lv16_FFA2;
    static const sc_lv<15> ap_const_lv15_7FDA;
    static const sc_lv<13> ap_const_lv13_19;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_sig_20();
    void thread_ap_sig_379();
    void thread_ap_sig_91();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st11_fsm_2();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_bound_fu_558_p0();
    void thread_bound_fu_558_p00();
    void thread_bound_fu_558_p1();
    void thread_bound_fu_558_p10();
    void thread_exitcond9_fu_248_p2();
    void thread_exitcond_flatten_fu_231_p2();
    void thread_grp_fu_564_p0();
    void thread_grp_fu_564_p1();
    void thread_grp_fu_571_p0();
    void thread_grp_fu_571_p1();
    void thread_grp_fu_571_p10();
    void thread_grp_fu_579_p0();
    void thread_grp_fu_579_p1();
    void thread_grp_fu_579_p10();
    void thread_grp_fu_579_p2();
    void thread_grp_fu_579_p20();
    void thread_in_channels_ch1_address0();
    void thread_in_channels_ch1_ce0();
    void thread_in_channels_ch2_address0();
    void thread_in_channels_ch2_ce0();
    void thread_in_channels_ch3_address0();
    void thread_in_channels_ch3_ce0();
    void thread_indvar_flatten_next_fu_236_p2();
    void thread_out_channels_ch1_address0();
    void thread_out_channels_ch1_ce0();
    void thread_out_channels_ch1_d0();
    void thread_out_channels_ch1_we0();
    void thread_out_channels_ch2_address0();
    void thread_out_channels_ch2_ce0();
    void thread_out_channels_ch2_d0();
    void thread_out_channels_ch2_we0();
    void thread_out_channels_ch3_address0();
    void thread_out_channels_ch3_ce0();
    void thread_out_channels_ch3_d0();
    void thread_out_channels_ch3_we0();
    void thread_p_neg_cast_fu_484_p1();
    void thread_p_neg_fu_478_p2();
    void thread_p_shl1_cast_fu_495_p1();
    void thread_p_shl1_fu_488_p3();
    void thread_p_shl2_cast_fu_432_p1();
    void thread_p_shl2_fu_425_p3();
    void thread_p_shl3_cast9_fu_443_p1();
    void thread_p_shl3_cast_fu_447_p1();
    void thread_p_shl3_fu_436_p3();
    void thread_p_shl4_cast_fu_373_p1();
    void thread_p_shl4_fu_366_p3();
    void thread_p_shl5_cast_fu_348_p1();
    void thread_p_shl5_fu_341_p3();
    void thread_p_shl6_cast_fu_359_p1();
    void thread_p_shl6_fu_352_p3();
    void thread_p_shl7_cast_fu_285_p3();
    void thread_p_shl_cast_fu_273_p3();
    void thread_tmp1_fu_390_p2();
    void thread_tmp2_cast_fu_386_p1();
    void thread_tmp2_fu_380_p2();
    void thread_tmp3_cast_fu_406_p1();
    void thread_tmp4_fu_396_p2();
    void thread_tmp6_fu_457_p2();
    void thread_tmp8_cast_fu_511_p1();
    void thread_tmp8_fu_505_p2();
    void thread_tmp_20_fu_281_p1();
    void thread_tmp_22_fu_303_p2();
    void thread_tmp_24_cast_fu_315_p1();
    void thread_tmp_24_fu_409_p2();
    void thread_tmp_27_fu_326_p1();
    void thread_tmp_27_fu_326_p10();
    void thread_tmp_27_fu_326_p2();
    void thread_tmp_28_fu_451_p2();
    void thread_tmp_29_fu_463_p2();
    void thread_tmp_31_fu_332_p1();
    void thread_tmp_31_fu_332_p10();
    void thread_tmp_31_fu_332_p2();
    void thread_tmp_33_fu_499_p2();
    void thread_tmp_34_fu_515_p2();
    void thread_tmp_35_cast1_fu_323_p1();
    void thread_tmp_35_cast2_fu_363_p1();
    void thread_tmp_cast_fu_299_p1();
    void thread_tmp_fu_269_p1();
    void thread_tmp_mid2_v_fu_261_p3();
    void thread_tmp_s_fu_293_p2();
    void thread_x_2_fu_242_p2();
    void thread_x_phi_fu_205_p4();
    void thread_y_2_fu_309_p2();
    void thread_y_mid2_fu_253_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
