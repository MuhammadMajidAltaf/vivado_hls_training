// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yuv_filter_yuv2rgb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_channels_ch1_address0,
        in_channels_ch1_ce0,
        in_channels_ch1_q0,
        in_channels_ch2_address0,
        in_channels_ch2_ce0,
        in_channels_ch2_q0,
        in_channels_ch3_address0,
        in_channels_ch3_ce0,
        in_channels_ch3_q0,
        out_width,
        out_height,
        out_channels_ch1_address0,
        out_channels_ch1_ce0,
        out_channels_ch1_we0,
        out_channels_ch1_d0,
        out_channels_ch2_address0,
        out_channels_ch2_ce0,
        out_channels_ch2_we0,
        out_channels_ch2_d0,
        out_channels_ch3_address0,
        out_channels_ch3_ce0,
        out_channels_ch3_we0,
        out_channels_ch3_d0,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st11_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv17_1FF30 = 17'b11111111100110000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv16_FF9C = 16'b1111111110011100;
parameter    ap_const_lv9_1F0 = 9'b111110000;
parameter    ap_const_lv18_12A = 18'b100101010;
parameter    ap_const_lv18_80 = 18'b10000000;
parameter    ap_const_lv18_199 = 18'b110011001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [21:0] in_channels_ch1_address0;
output   in_channels_ch1_ce0;
input  [7:0] in_channels_ch1_q0;
output  [21:0] in_channels_ch2_address0;
output   in_channels_ch2_ce0;
input  [7:0] in_channels_ch2_q0;
output  [21:0] in_channels_ch3_address0;
output   in_channels_ch3_ce0;
input  [7:0] in_channels_ch3_q0;
input  [15:0] out_width;
input  [15:0] out_height;
output  [21:0] out_channels_ch1_address0;
output   out_channels_ch1_ce0;
output   out_channels_ch1_we0;
output  [7:0] out_channels_ch1_d0;
output  [21:0] out_channels_ch2_address0;
output   out_channels_ch2_ce0;
output   out_channels_ch2_we0;
output  [7:0] out_channels_ch2_d0;
output  [21:0] out_channels_ch3_address0;
output   out_channels_ch3_ce0;
output   out_channels_ch3_we0;
output  [7:0] out_channels_ch3_d0;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_channels_ch1_ce0;
reg in_channels_ch2_ce0;
reg in_channels_ch3_ce0;
reg out_channels_ch1_ce0;
reg out_channels_ch1_we0;
reg out_channels_ch2_ce0;
reg out_channels_ch2_we0;
reg out_channels_ch3_ce0;
reg out_channels_ch3_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_20;
reg   [31:0] indvar_flatten_reg_196;
reg   [15:0] x_reg_207;
reg   [15:0] y_reg_218;
wire   [31:0] bound_fu_576_p2;
reg   [31:0] bound_reg_621;
wire   [0:0] exitcond_flatten_fu_237_p2;
reg   [0:0] exitcond_flatten_reg_626;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_91;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg    ap_reg_ppiten_pp0_it4;
reg    ap_reg_ppiten_pp0_it5;
reg    ap_reg_ppiten_pp0_it6;
reg    ap_reg_ppiten_pp0_it7;
reg    ap_reg_ppiten_pp0_it8;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter1;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter2;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter3;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter4;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter5;
reg   [0:0] ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter6;
wire   [31:0] indvar_flatten_next_fu_242_p2;
wire   [15:0] tmp_mid2_v_fu_267_p3;
reg   [15:0] tmp_mid2_v_reg_635;
wire   [22:0] tmp_1_fu_309_p2;
reg   [22:0] tmp_1_reg_640;
wire   [15:0] y_1_fu_315_p2;
wire   [63:0] tmp_21_cast_fu_321_p1;
reg   [63:0] tmp_21_cast_reg_650;
reg   [63:0] ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter2;
reg   [63:0] ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter3;
reg   [63:0] ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter4;
reg   [63:0] ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter5;
reg   [63:0] ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter6;
reg   [7:0] Y_reg_673;
reg   [7:0] V_reg_678;
wire   [7:0] D_fu_329_p2;
reg  signed [7:0] D_reg_683;
wire   [7:0] E_fu_335_p2;
reg  signed [7:0] E_reg_690;
wire  signed [17:0] grp_fu_590_p4;
reg  signed [17:0] tmp_3_reg_695;
wire   [16:0] tmp_12_fu_344_p2;
reg   [16:0] tmp_12_reg_702;
wire   [7:0] R_fu_398_p3;
reg   [7:0] R_reg_707;
wire   [7:0] G_fu_465_p3;
reg   [7:0] G_reg_712;
wire   [7:0] B_fu_558_p3;
reg   [7:0] B_reg_717;
reg   [15:0] x_phi_fu_211_p4;
wire   [0:0] exitcond5_fu_254_p2;
wire   [15:0] x_1_fu_248_p2;
wire   [12:0] tmp_fu_275_p1;
wire   [14:0] tmp_5_fu_287_p1;
wire   [22:0] p_shl3_cast_fu_291_p3;
wire   [22:0] p_shl2_cast_fu_279_p3;
wire   [15:0] y_mid2_fu_259_p3;
wire   [22:0] tmp_s_fu_299_p2;
wire   [22:0] tmp_cast_fu_305_p1;
wire  signed [7:0] tmp_12_fu_344_p1;
wire  signed [17:0] grp_fu_600_p3;
wire   [1:0] tmp_6_fu_353_p4;
wire   [0:0] icmp_fu_362_p2;
wire   [0:0] tmp_8_fu_368_p3;
wire   [0:0] tmp_10_fu_392_p2;
wire   [7:0] p_phitmp_fu_384_p3;
wire   [7:0] phitmp_fu_375_p4;
wire  signed [16:0] grp_fu_582_p3;
wire  signed [17:0] tmp1_cast_fu_409_p1;
(* use_dsp48 = "no" *) wire   [17:0] tmp_13_fu_412_p2;
wire   [1:0] tmp_14_fu_417_p4;
wire   [0:0] icmp1_fu_427_p2;
wire   [0:0] tmp_15_fu_433_p3;
wire   [0:0] tmp_16_fu_459_p2;
wire   [7:0] p_phitmp2_fu_451_p3;
wire   [7:0] phitmp2_fu_441_p4;
wire   [16:0] p_shl_fu_473_p3;
wire   [9:0] p_shl1_fu_484_p3;
wire  signed [17:0] p_shl1_cast_fu_491_p1;
(* use_dsp48 = "no" *) wire   [17:0] tmp2_fu_495_p2;
wire  signed [18:0] p_shl_cast_fu_480_p1;
wire  signed [18:0] tmp2_cast_fu_500_p1;
wire   [18:0] tmp_17_fu_504_p2;
wire   [2:0] tmp_18_fu_510_p4;
wire   [0:0] icmp2_fu_520_p2;
wire   [0:0] tmp_19_fu_526_p3;
wire   [0:0] tmp_20_fu_552_p2;
wire   [7:0] p_phitmp3_fu_544_p3;
wire   [7:0] phitmp3_fu_534_p4;
reg    ap_sig_cseq_ST_st11_fsm_2;
reg    ap_sig_381;
wire   [15:0] bound_fu_576_p0;
wire   [15:0] bound_fu_576_p1;
wire  signed [7:0] grp_fu_582_p0;
wire  signed [4:0] grp_fu_590_p0;
wire   [7:0] grp_fu_590_p1;
wire   [9:0] grp_fu_590_p2;
wire   [8:0] grp_fu_590_p3;
wire   [9:0] grp_fu_600_p0;
reg   [2:0] ap_NS_fsm;
wire   [31:0] bound_fu_576_p00;
wire   [31:0] bound_fu_576_p10;
wire   [8:0] grp_fu_590_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'b1;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
#0 ap_reg_ppiten_pp0_it4 = 1'b0;
#0 ap_reg_ppiten_pp0_it5 = 1'b0;
#0 ap_reg_ppiten_pp0_it6 = 1'b0;
#0 ap_reg_ppiten_pp0_it7 = 1'b0;
#0 ap_reg_ppiten_pp0_it8 = 1'b0;
end

yuv_filter_mul_mul_16ns_16ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
yuv_filter_mul_mul_16ns_16ns_32_1_U12(
    .din0(bound_fu_576_p0),
    .din1(bound_fu_576_p1),
    .dout(bound_fu_576_p2)
);

yuv_filter_mac_muladd_8s_8s_17ns_17_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
yuv_filter_mac_muladd_8s_8s_17ns_17_1_U13(
    .din0(grp_fu_582_p0),
    .din1(D_reg_683),
    .din2(tmp_12_reg_702),
    .dout(grp_fu_582_p3)
);

yuv_filter_ama_addmuladd_5s_8ns_10ns_9ns_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
yuv_filter_ama_addmuladd_5s_8ns_10ns_9ns_18_1_U14(
    .din0(grp_fu_590_p0),
    .din1(grp_fu_590_p1),
    .din2(grp_fu_590_p2),
    .din3(grp_fu_590_p3),
    .dout(grp_fu_590_p4)
);

yuv_filter_mac_muladd_10ns_8s_18s_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
yuv_filter_mac_muladd_10ns_8s_18s_18_1_U15(
    .din0(grp_fu_600_p0),
    .din1(E_reg_690),
    .din2(tmp_3_reg_695),
    .dout(grp_fu_600_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_237_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_237_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_237_p2 == 1'b0)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_237_p2 == 1'b0))) begin
        indvar_flatten_reg_196 <= indvar_flatten_next_fu_242_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        indvar_flatten_reg_196 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_626 == 1'b0))) begin
        x_reg_207 <= tmp_mid2_v_reg_635;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        x_reg_207 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_237_p2 == 1'b0))) begin
        y_reg_218 <= y_1_fu_315_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        y_reg_218 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter5 == 1'b0)) begin
        B_reg_717 <= B_fu_558_p3;
        G_reg_712 <= G_fu_465_p3;
        R_reg_707 <= R_fu_398_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter4 == 1'b0)) begin
        D_reg_683 <= D_fu_329_p2;
        E_reg_690 <= E_fu_335_p2;
        tmp_12_reg_702 <= tmp_12_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter3 == 1'b0)) begin
        V_reg_678 <= in_channels_ch3_q0;
        Y_reg_673 <= in_channels_ch1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter1 <= exitcond_flatten_reg_626;
        exitcond_flatten_reg_626 <= exitcond_flatten_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter2 <= ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter1;
        ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter3 <= ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter2;
        ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter4 <= ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter3;
        ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter5 <= ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter4;
        ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter6 <= ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter5;
        ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter2[22 : 0] <= tmp_21_cast_reg_650[22 : 0];
        ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter3[22 : 0] <= ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter2[22 : 0];
        ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter4[22 : 0] <= ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter3[22 : 0];
        ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter5[22 : 0] <= ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter4[22 : 0];
        ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter6[22 : 0] <= ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter5[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        bound_reg_621 <= bound_fu_576_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_237_p2 == 1'b0))) begin
        tmp_1_reg_640 <= tmp_1_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_reg_626 == 1'b0))) begin
        tmp_21_cast_reg_650[22 : 0] <= tmp_21_cast_fu_321_p1[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it5) & (ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter4 == 1'b0))) begin
        tmp_3_reg_695 <= grp_fu_590_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_237_p2 == 1'b0))) begin
        tmp_mid2_v_reg_635 <= tmp_mid2_v_fu_267_p3;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st11_fsm_2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_91) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_381) begin
        ap_sig_cseq_ST_st11_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) | (1'b1 == ap_reg_ppiten_pp0_it3) | (1'b1 == ap_reg_ppiten_pp0_it4) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1)))) begin
        in_channels_ch1_ce0 = 1'b1;
    end else begin
        in_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) | (1'b1 == ap_reg_ppiten_pp0_it3) | (1'b1 == ap_reg_ppiten_pp0_it4) | (1'b1 == ap_reg_ppiten_pp0_it5))) begin
        in_channels_ch2_ce0 = 1'b1;
    end else begin
        in_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) | (1'b1 == ap_reg_ppiten_pp0_it3) | (1'b1 == ap_reg_ppiten_pp0_it4) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1)))) begin
        in_channels_ch3_ce0 = 1'b1;
    end else begin
        in_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it7) | (1'b1 == ap_reg_ppiten_pp0_it8))) begin
        out_channels_ch1_ce0 = 1'b1;
    end else begin
        out_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it7) & (ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter6 == 1'b0))) begin
        out_channels_ch1_we0 = 1'b1;
    end else begin
        out_channels_ch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it7) | (1'b1 == ap_reg_ppiten_pp0_it8))) begin
        out_channels_ch2_ce0 = 1'b1;
    end else begin
        out_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it7) & (ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter6 == 1'b0))) begin
        out_channels_ch2_we0 = 1'b1;
    end else begin
        out_channels_ch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it7) | (1'b1 == ap_reg_ppiten_pp0_it8))) begin
        out_channels_ch3_ce0 = 1'b1;
    end else begin
        out_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it7) & (ap_reg_ppstg_exitcond_flatten_reg_626_pp0_iter6 == 1'b0))) begin
        out_channels_ch3_we0 = 1'b1;
    end else begin
        out_channels_ch3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_626 == 1'b0))) begin
        x_phi_fu_211_p4 = tmp_mid2_v_reg_635;
    end else begin
        x_phi_fu_211_p4 = x_reg_207;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it8) & ~(1'b1 == ap_reg_ppiten_pp0_it7)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_237_p2 == 1'b0) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_237_p2 == 1'b0) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st11_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_2;
            end
        end
        ap_ST_st11_fsm_2 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_fu_558_p3 = ((tmp_20_fu_552_p2[0:0] === 1'b1) ? p_phitmp3_fu_544_p3 : phitmp3_fu_534_p4);

assign D_fu_329_p2 = (in_channels_ch2_q0 ^ ap_const_lv8_80);

assign E_fu_335_p2 = (V_reg_678 ^ ap_const_lv8_80);

assign G_fu_465_p3 = ((tmp_16_fu_459_p2[0:0] === 1'b1) ? p_phitmp2_fu_451_p3 : phitmp2_fu_441_p4);

assign R_fu_398_p3 = ((tmp_10_fu_392_p2[0:0] === 1'b1) ? p_phitmp_fu_384_p3 : phitmp_fu_375_p4);

assign ap_return_0 = out_width;

assign ap_return_1 = out_height;

always @ (*) begin
    ap_sig_20 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_381 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_91 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign bound_fu_576_p0 = bound_fu_576_p00;

assign bound_fu_576_p00 = out_height;

assign bound_fu_576_p1 = bound_fu_576_p10;

assign bound_fu_576_p10 = out_width;

assign exitcond5_fu_254_p2 = ((y_reg_218 == out_height) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_237_p2 = ((indvar_flatten_reg_196 == bound_reg_621) ? 1'b1 : 1'b0);

assign grp_fu_582_p0 = ap_const_lv16_FF9C;

assign grp_fu_590_p0 = ap_const_lv9_1F0;

assign grp_fu_590_p1 = grp_fu_590_p10;

assign grp_fu_590_p10 = Y_reg_673;

assign grp_fu_590_p2 = ap_const_lv18_12A;

assign grp_fu_590_p3 = ap_const_lv18_80;

assign grp_fu_600_p0 = ap_const_lv18_199;

assign icmp1_fu_427_p2 = ((tmp_14_fu_417_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign icmp2_fu_520_p2 = (($signed(tmp_18_fu_510_p4) > $signed(3'b000)) ? 1'b1 : 1'b0);

assign icmp_fu_362_p2 = ((tmp_6_fu_353_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign in_channels_ch1_address0 = tmp_21_cast_fu_321_p1;

assign in_channels_ch2_address0 = tmp_21_cast_reg_650;

assign in_channels_ch3_address0 = tmp_21_cast_fu_321_p1;

assign indvar_flatten_next_fu_242_p2 = (indvar_flatten_reg_196 + ap_const_lv32_1);

assign out_channels_ch1_address0 = ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter6;

assign out_channels_ch1_d0 = R_reg_707;

assign out_channels_ch2_address0 = ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter6;

assign out_channels_ch2_d0 = G_reg_712;

assign out_channels_ch3_address0 = ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter6;

assign out_channels_ch3_d0 = B_reg_717;

assign p_phitmp2_fu_451_p3 = ((icmp1_fu_427_p2[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign p_phitmp3_fu_544_p3 = ((icmp2_fu_520_p2[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign p_phitmp_fu_384_p3 = ((icmp_fu_362_p2[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign p_shl1_cast_fu_491_p1 = $signed(p_shl1_fu_484_p3);

assign p_shl1_fu_484_p3 = {{D_reg_683}, {ap_const_lv2_0}};

assign p_shl2_cast_fu_279_p3 = {{tmp_fu_275_p1}, {ap_const_lv10_0}};

assign p_shl3_cast_fu_291_p3 = {{tmp_5_fu_287_p1}, {ap_const_lv8_0}};

assign p_shl_cast_fu_480_p1 = $signed(p_shl_fu_473_p3);

assign p_shl_fu_473_p3 = {{D_reg_683}, {ap_const_lv9_0}};

assign phitmp2_fu_441_p4 = {{tmp_13_fu_412_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign phitmp3_fu_534_p4 = {{tmp_17_fu_504_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign phitmp_fu_375_p4 = {{grp_fu_600_p3[ap_const_lv32_F : ap_const_lv32_8]}};

assign tmp1_cast_fu_409_p1 = grp_fu_582_p3;

assign tmp2_cast_fu_500_p1 = $signed(tmp2_fu_495_p2);

assign tmp2_fu_495_p2 = ($signed(tmp_3_reg_695) + $signed(p_shl1_cast_fu_491_p1));

assign tmp_10_fu_392_p2 = (icmp_fu_362_p2 | tmp_8_fu_368_p3);

assign tmp_12_fu_344_p1 = E_fu_335_p2;

assign tmp_12_fu_344_p2 = ($signed(ap_const_lv17_1FF30) * $signed(tmp_12_fu_344_p1));

assign tmp_13_fu_412_p2 = ($signed(tmp_3_reg_695) + $signed(tmp1_cast_fu_409_p1));

assign tmp_14_fu_417_p4 = {{tmp_13_fu_412_p2[ap_const_lv32_11 : ap_const_lv32_10]}};

assign tmp_15_fu_433_p3 = tmp_13_fu_412_p2[ap_const_lv32_11];

assign tmp_16_fu_459_p2 = (icmp1_fu_427_p2 | tmp_15_fu_433_p3);

assign tmp_17_fu_504_p2 = ($signed(p_shl_cast_fu_480_p1) + $signed(tmp2_cast_fu_500_p1));

assign tmp_18_fu_510_p4 = {{tmp_17_fu_504_p2[ap_const_lv32_12 : ap_const_lv32_10]}};

assign tmp_19_fu_526_p3 = tmp_17_fu_504_p2[ap_const_lv32_12];

assign tmp_1_fu_309_p2 = (tmp_s_fu_299_p2 + tmp_cast_fu_305_p1);

assign tmp_20_fu_552_p2 = (icmp2_fu_520_p2 | tmp_19_fu_526_p3);

assign tmp_21_cast_fu_321_p1 = tmp_1_reg_640;

assign tmp_5_fu_287_p1 = tmp_mid2_v_fu_267_p3[14:0];

assign tmp_6_fu_353_p4 = {{grp_fu_600_p3[ap_const_lv32_11 : ap_const_lv32_10]}};

assign tmp_8_fu_368_p3 = grp_fu_600_p3[ap_const_lv32_11];

assign tmp_cast_fu_305_p1 = y_mid2_fu_259_p3;

assign tmp_fu_275_p1 = tmp_mid2_v_fu_267_p3[12:0];

assign tmp_mid2_v_fu_267_p3 = ((exitcond5_fu_254_p2[0:0] === 1'b1) ? x_1_fu_248_p2 : x_phi_fu_211_p4);

assign tmp_s_fu_299_p2 = (p_shl3_cast_fu_291_p3 + p_shl2_cast_fu_279_p3);

assign x_1_fu_248_p2 = (ap_const_lv16_1 + x_phi_fu_211_p4);

assign y_1_fu_315_p2 = (ap_const_lv16_1 + y_mid2_fu_259_p3);

assign y_mid2_fu_259_p3 = ((exitcond5_fu_254_p2[0:0] === 1'b1) ? ap_const_lv16_0 : y_reg_218);

always @ (posedge ap_clk) begin
    tmp_21_cast_reg_650[63:23] <= 41'b00000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter2[63:23] <= 41'b00000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter3[63:23] <= 41'b00000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter4[63:23] <= 41'b00000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter5[63:23] <= 41'b00000000000000000000000000000000000000000;
    ap_reg_ppstg_tmp_21_cast_reg_650_pp0_iter6[63:23] <= 41'b00000000000000000000000000000000000000000;
end

endmodule //yuv_filter_yuv2rgb
