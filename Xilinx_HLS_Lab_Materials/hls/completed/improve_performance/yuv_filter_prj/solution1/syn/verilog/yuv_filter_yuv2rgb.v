// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yuv_filter_yuv2rgb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_channels_ch1_address0,
        in_channels_ch1_ce0,
        in_channels_ch1_q0,
        in_channels_ch2_address0,
        in_channels_ch2_ce0,
        in_channels_ch2_q0,
        in_channels_ch3_address0,
        in_channels_ch3_ce0,
        in_channels_ch3_q0,
        out_width,
        out_height,
        out_channels_ch1_address0,
        out_channels_ch1_ce0,
        out_channels_ch1_we0,
        out_channels_ch1_d0,
        out_channels_ch2_address0,
        out_channels_ch2_ce0,
        out_channels_ch2_we0,
        out_channels_ch2_d0,
        out_channels_ch3_address0,
        out_channels_ch3_ce0,
        out_channels_ch3_we0,
        out_channels_ch3_d0,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_st1_fsm_0 = 10'b1;
parameter    ap_ST_st2_fsm_1 = 10'b10;
parameter    ap_ST_st3_fsm_2 = 10'b100;
parameter    ap_ST_st4_fsm_3 = 10'b1000;
parameter    ap_ST_st5_fsm_4 = 10'b10000;
parameter    ap_ST_st6_fsm_5 = 10'b100000;
parameter    ap_ST_st7_fsm_6 = 10'b1000000;
parameter    ap_ST_st8_fsm_7 = 10'b10000000;
parameter    ap_ST_st9_fsm_8 = 10'b100000000;
parameter    ap_ST_st10_fsm_9 = 10'b1000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv8_80 = 8'b10000000;
parameter    ap_const_lv17_1FF30 = 17'b11111111100110000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv16_FF9C = 16'b1111111110011100;
parameter    ap_const_lv9_1F0 = 9'b111110000;
parameter    ap_const_lv18_12A = 18'b100101010;
parameter    ap_const_lv18_80 = 18'b10000000;
parameter    ap_const_lv18_199 = 18'b110011001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [21:0] in_channels_ch1_address0;
output   in_channels_ch1_ce0;
input  [7:0] in_channels_ch1_q0;
output  [21:0] in_channels_ch2_address0;
output   in_channels_ch2_ce0;
input  [7:0] in_channels_ch2_q0;
output  [21:0] in_channels_ch3_address0;
output   in_channels_ch3_ce0;
input  [7:0] in_channels_ch3_q0;
input  [15:0] out_width;
input  [15:0] out_height;
output  [21:0] out_channels_ch1_address0;
output   out_channels_ch1_ce0;
output   out_channels_ch1_we0;
output  [7:0] out_channels_ch1_d0;
output  [21:0] out_channels_ch2_address0;
output   out_channels_ch2_ce0;
output   out_channels_ch2_we0;
output  [7:0] out_channels_ch2_d0;
output  [21:0] out_channels_ch3_address0;
output   out_channels_ch3_ce0;
output   out_channels_ch3_we0;
output  [7:0] out_channels_ch3_d0;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_channels_ch1_ce0;
reg in_channels_ch2_ce0;
reg in_channels_ch3_ce0;
reg out_channels_ch1_ce0;
reg out_channels_ch1_we0;
reg out_channels_ch2_ce0;
reg out_channels_ch2_we0;
reg out_channels_ch3_ce0;
reg out_channels_ch3_we0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_27;
wire   [15:0] x_1_fu_219_p2;
reg   [15:0] x_1_reg_574;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_90;
wire   [22:0] tmp_s_fu_249_p2;
reg   [22:0] tmp_s_reg_579;
wire   [0:0] exitcond1_fu_214_p2;
wire   [15:0] y_1_fu_270_p2;
reg   [15:0] y_1_reg_587;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_105;
wire   [63:0] tmp_21_cast_fu_285_p1;
reg   [63:0] tmp_21_cast_reg_592;
wire   [0:0] exitcond_fu_265_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_123;
reg   [7:0] Y_reg_615;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_131;
reg   [7:0] V_reg_620;
wire   [7:0] D_fu_294_p2;
reg  signed [7:0] D_reg_625;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_141;
wire   [7:0] E_fu_300_p2;
reg  signed [7:0] E_reg_632;
wire  signed [17:0] grp_fu_539_p4;
reg  signed [17:0] tmp_3_reg_637;
wire   [16:0] tmp_13_fu_309_p2;
reg   [16:0] tmp_13_reg_644;
wire   [7:0] R_fu_363_p3;
reg   [7:0] R_reg_649;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_156;
wire   [7:0] G_fu_430_p3;
reg   [7:0] G_reg_654;
wire   [7:0] B_fu_523_p3;
reg   [7:0] B_reg_659;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_169;
reg   [15:0] x_reg_192;
reg   [15:0] y_reg_203;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_187;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_195;
wire   [12:0] tmp_fu_225_p1;
wire   [14:0] tmp_5_fu_237_p1;
wire   [22:0] p_shl2_cast_fu_229_p3;
wire   [22:0] p_shl3_cast_fu_241_p3;
wire   [22:0] tmp_cast_fu_276_p1;
wire   [22:0] tmp_6_fu_280_p2;
wire  signed [7:0] tmp_13_fu_309_p1;
wire  signed [17:0] grp_fu_549_p3;
wire   [1:0] tmp_8_fu_318_p4;
wire   [0:0] icmp_fu_327_p2;
wire   [0:0] tmp_10_fu_333_p3;
wire   [0:0] tmp_11_fu_357_p2;
wire   [7:0] p_phitmp_fu_349_p3;
wire   [7:0] phitmp_fu_340_p4;
wire  signed [16:0] grp_fu_531_p3;
wire  signed [17:0] tmp1_cast_fu_374_p1;
(* use_dsp48 = "no" *) wire   [17:0] tmp_14_fu_377_p2;
wire   [1:0] tmp_15_fu_382_p4;
wire   [0:0] icmp9_fu_392_p2;
wire   [0:0] tmp_16_fu_398_p3;
wire   [0:0] tmp_17_fu_424_p2;
wire   [7:0] p_phitmp2_fu_416_p3;
wire   [7:0] phitmp2_fu_406_p4;
wire   [16:0] p_shl_fu_438_p3;
wire   [9:0] p_shl1_fu_449_p3;
wire  signed [17:0] p_shl1_cast_fu_456_p1;
(* use_dsp48 = "no" *) wire   [17:0] tmp2_fu_460_p2;
wire  signed [18:0] tmp2_cast_fu_465_p1;
wire  signed [18:0] p_shl_cast_fu_445_p1;
wire   [18:0] tmp_18_fu_469_p2;
wire   [2:0] tmp_19_fu_475_p4;
wire   [0:0] icmp1_fu_485_p2;
wire   [0:0] tmp_20_fu_491_p3;
wire   [0:0] tmp_21_fu_517_p2;
wire   [7:0] p_phitmp3_fu_509_p3;
wire   [7:0] phitmp3_fu_499_p4;
wire  signed [7:0] grp_fu_531_p0;
wire  signed [4:0] grp_fu_539_p0;
wire   [7:0] grp_fu_539_p1;
wire   [9:0] grp_fu_539_p2;
wire   [8:0] grp_fu_539_p3;
wire   [9:0] grp_fu_549_p0;
reg   [9:0] ap_NS_fsm;
wire   [8:0] grp_fu_539_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'b1;
end

yuv_filter_mac_muladd_8s_8s_17ns_17_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
yuv_filter_mac_muladd_8s_8s_17ns_17_1_U11(
    .din0(grp_fu_531_p0),
    .din1(D_reg_625),
    .din2(tmp_13_reg_644),
    .dout(grp_fu_531_p3)
);

yuv_filter_ama_addmuladd_5s_8ns_10ns_9ns_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
yuv_filter_ama_addmuladd_5s_8ns_10ns_9ns_18_1_U12(
    .din0(grp_fu_539_p0),
    .din1(grp_fu_539_p1),
    .din2(grp_fu_539_p2),
    .din3(grp_fu_539_p3),
    .dout(grp_fu_539_p4)
);

yuv_filter_mac_muladd_10ns_8s_18s_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
yuv_filter_mac_muladd_10ns_8s_18s_18_1_U13(
    .din0(grp_fu_549_p0),
    .din1(E_reg_632),
    .din2(tmp_3_reg_637),
    .dout(grp_fu_549_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond_fu_265_p2))) begin
        x_reg_192 <= x_1_reg_574;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        x_reg_192 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        y_reg_203 <= y_1_reg_587;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_214_p2 == 1'b0))) begin
        y_reg_203 <= ap_const_lv16_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        B_reg_659 <= B_fu_523_p3;
        G_reg_654 <= G_fu_430_p3;
        R_reg_649 <= R_fu_363_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        D_reg_625 <= D_fu_294_p2;
        E_reg_632 <= E_fu_300_p2;
        tmp_13_reg_644 <= tmp_13_fu_309_p2;
        tmp_3_reg_637 <= grp_fu_539_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        V_reg_620 <= in_channels_ch3_q0;
        Y_reg_615 <= in_channels_ch1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond_fu_265_p2))) begin
        tmp_21_cast_reg_592[22 : 0] <= tmp_21_cast_fu_285_p1[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_fu_214_p2 == 1'b0))) begin
        tmp_s_reg_579[22 : 8] <= tmp_s_fu_249_p2[22 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        x_1_reg_574 <= x_1_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        y_1_reg_587 <= y_1_fu_270_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_214_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_fu_214_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_187) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_27) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_90) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_105) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_123) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_195) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_131) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_141) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_156) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_169) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        in_channels_ch1_ce0 = 1'b1;
    end else begin
        in_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        in_channels_ch2_ce0 = 1'b1;
    end else begin
        in_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        in_channels_ch3_ce0 = 1'b1;
    end else begin
        in_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        out_channels_ch1_ce0 = 1'b1;
    end else begin
        out_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        out_channels_ch1_we0 = 1'b1;
    end else begin
        out_channels_ch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        out_channels_ch2_ce0 = 1'b1;
    end else begin
        out_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        out_channels_ch2_we0 = 1'b1;
    end else begin
        out_channels_ch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        out_channels_ch3_ce0 = 1'b1;
    end else begin
        out_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        out_channels_ch3_we0 = 1'b1;
    end else begin
        out_channels_ch3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond1_fu_214_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == exitcond_fu_265_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_fu_523_p3 = ((tmp_21_fu_517_p2[0:0] === 1'b1) ? p_phitmp3_fu_509_p3 : phitmp3_fu_499_p4);

assign D_fu_294_p2 = (in_channels_ch2_q0 ^ ap_const_lv8_80);

assign E_fu_300_p2 = (V_reg_620 ^ ap_const_lv8_80);

assign G_fu_430_p3 = ((tmp_17_fu_424_p2[0:0] === 1'b1) ? p_phitmp2_fu_416_p3 : phitmp2_fu_406_p4);

assign R_fu_363_p3 = ((tmp_11_fu_357_p2[0:0] === 1'b1) ? p_phitmp_fu_349_p3 : phitmp_fu_340_p4);

assign ap_return_0 = out_width;

assign ap_return_1 = out_height;

always @ (*) begin
    ap_sig_105 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_123 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_131 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_141 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_156 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_169 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_187 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_195 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_27 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_90 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign exitcond1_fu_214_p2 = ((x_reg_192 == out_width) ? 1'b1 : 1'b0);

assign exitcond_fu_265_p2 = ((y_reg_203 == out_height) ? 1'b1 : 1'b0);

assign grp_fu_531_p0 = ap_const_lv16_FF9C;

assign grp_fu_539_p0 = ap_const_lv9_1F0;

assign grp_fu_539_p1 = grp_fu_539_p10;

assign grp_fu_539_p10 = Y_reg_615;

assign grp_fu_539_p2 = ap_const_lv18_12A;

assign grp_fu_539_p3 = ap_const_lv18_80;

assign grp_fu_549_p0 = ap_const_lv18_199;

assign icmp1_fu_485_p2 = (($signed(tmp_19_fu_475_p4) > $signed(3'b000)) ? 1'b1 : 1'b0);

assign icmp9_fu_392_p2 = ((tmp_15_fu_382_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign icmp_fu_327_p2 = ((tmp_8_fu_318_p4 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign in_channels_ch1_address0 = tmp_21_cast_fu_285_p1;

assign in_channels_ch2_address0 = tmp_21_cast_reg_592;

assign in_channels_ch3_address0 = tmp_21_cast_fu_285_p1;

assign out_channels_ch1_address0 = tmp_21_cast_reg_592;

assign out_channels_ch1_d0 = R_reg_649;

assign out_channels_ch2_address0 = tmp_21_cast_reg_592;

assign out_channels_ch2_d0 = G_reg_654;

assign out_channels_ch3_address0 = tmp_21_cast_reg_592;

assign out_channels_ch3_d0 = B_reg_659;

assign p_phitmp2_fu_416_p3 = ((icmp9_fu_392_p2[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign p_phitmp3_fu_509_p3 = ((icmp1_fu_485_p2[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign p_phitmp_fu_349_p3 = ((icmp_fu_327_p2[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign p_shl1_cast_fu_456_p1 = $signed(p_shl1_fu_449_p3);

assign p_shl1_fu_449_p3 = {{D_reg_625}, {ap_const_lv2_0}};

assign p_shl2_cast_fu_229_p3 = {{tmp_fu_225_p1}, {ap_const_lv10_0}};

assign p_shl3_cast_fu_241_p3 = {{tmp_5_fu_237_p1}, {ap_const_lv8_0}};

assign p_shl_cast_fu_445_p1 = $signed(p_shl_fu_438_p3);

assign p_shl_fu_438_p3 = {{D_reg_625}, {ap_const_lv9_0}};

assign phitmp2_fu_406_p4 = {{tmp_14_fu_377_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign phitmp3_fu_499_p4 = {{tmp_18_fu_469_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign phitmp_fu_340_p4 = {{grp_fu_549_p3[ap_const_lv32_F : ap_const_lv32_8]}};

assign tmp1_cast_fu_374_p1 = grp_fu_531_p3;

assign tmp2_cast_fu_465_p1 = $signed(tmp2_fu_460_p2);

assign tmp2_fu_460_p2 = ($signed(p_shl1_cast_fu_456_p1) + $signed(tmp_3_reg_637));

assign tmp_10_fu_333_p3 = grp_fu_549_p3[ap_const_lv32_11];

assign tmp_11_fu_357_p2 = (icmp_fu_327_p2 | tmp_10_fu_333_p3);

assign tmp_13_fu_309_p1 = E_fu_300_p2;

assign tmp_13_fu_309_p2 = ($signed(ap_const_lv17_1FF30) * $signed(tmp_13_fu_309_p1));

assign tmp_14_fu_377_p2 = ($signed(tmp1_cast_fu_374_p1) + $signed(tmp_3_reg_637));

assign tmp_15_fu_382_p4 = {{tmp_14_fu_377_p2[ap_const_lv32_11 : ap_const_lv32_10]}};

assign tmp_16_fu_398_p3 = tmp_14_fu_377_p2[ap_const_lv32_11];

assign tmp_17_fu_424_p2 = (icmp9_fu_392_p2 | tmp_16_fu_398_p3);

assign tmp_18_fu_469_p2 = ($signed(tmp2_cast_fu_465_p1) + $signed(p_shl_cast_fu_445_p1));

assign tmp_19_fu_475_p4 = {{tmp_18_fu_469_p2[ap_const_lv32_12 : ap_const_lv32_10]}};

assign tmp_20_fu_491_p3 = tmp_18_fu_469_p2[ap_const_lv32_12];

assign tmp_21_cast_fu_285_p1 = tmp_6_fu_280_p2;

assign tmp_21_fu_517_p2 = (icmp1_fu_485_p2 | tmp_20_fu_491_p3);

assign tmp_5_fu_237_p1 = x_reg_192[14:0];

assign tmp_6_fu_280_p2 = (tmp_cast_fu_276_p1 + tmp_s_reg_579);

assign tmp_8_fu_318_p4 = {{grp_fu_549_p3[ap_const_lv32_11 : ap_const_lv32_10]}};

assign tmp_cast_fu_276_p1 = y_reg_203;

assign tmp_fu_225_p1 = x_reg_192[12:0];

assign tmp_s_fu_249_p2 = (p_shl2_cast_fu_229_p3 + p_shl3_cast_fu_241_p3);

assign x_1_fu_219_p2 = (x_reg_192 + ap_const_lv16_1);

assign y_1_fu_270_p2 = (y_reg_203 + ap_const_lv16_1);

always @ (posedge ap_clk) begin
    tmp_s_reg_579[7:0] <= 8'b00000000;
    tmp_21_cast_reg_592[63:23] <= 41'b00000000000000000000000000000000000000000;
end

endmodule //yuv_filter_yuv2rgb
