-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yuv_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch1_ce0 : OUT STD_LOGIC;
    in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch2_ce0 : OUT STD_LOGIC;
    in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch3_ce0 : OUT STD_LOGIC;
    in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_width : IN STD_LOGIC_VECTOR (15 downto 0);
    in_height : IN STD_LOGIC_VECTOR (15 downto 0);
    out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch1_ce0 : OUT STD_LOGIC;
    out_channels_ch1_we0 : OUT STD_LOGIC;
    out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch2_ce0 : OUT STD_LOGIC;
    out_channels_ch2_we0 : OUT STD_LOGIC;
    out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch3_ce0 : OUT STD_LOGIC;
    out_channels_ch3_we0 : OUT STD_LOGIC;
    out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_width : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_width_ap_vld : OUT STD_LOGIC;
    out_height : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_height_ap_vld : OUT STD_LOGIC;
    Y_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    U_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    V_scale : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of yuv_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "yuv_filter,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=11.190000,HLS_SYN_LAT=18047565,HLS_SYN_TPT=none,HLS_SYN_MEM=12288,HLS_SYN_DSP=12,HLS_SYN_FF=716,HLS_SYN_LUT=760}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_26 : BOOLEAN;
    signal p_yuv_width_reg_441 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_95 : BOOLEAN;
    signal grp_yuv_filter_rgb2yuv_fu_244_ap_done : STD_LOGIC;
    signal p_yuv_height_reg_447 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_cast_fu_287_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_cast_reg_453 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_i_cast_fu_291_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_i_cast_reg_458 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2_i_cast_fu_295_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2_i_cast_reg_463 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_fu_304_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_reg_471 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_116 : BOOLEAN;
    signal tmp_2_fu_334_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_2_reg_476 : STD_LOGIC_VECTOR (22 downto 0);
    signal exitcond1_i_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_fu_345_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_reg_484 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_131 : BOOLEAN;
    signal tmp_3_cast_fu_360_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_cast_reg_489 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_yuv_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Y_reg_511 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_151 : BOOLEAN;
    signal p_yuv_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal U_reg_516 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal V_reg_521 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_i_reg_526 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_164 : BOOLEAN;
    signal tmp_11_i_reg_531 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_i_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_177 : BOOLEAN;
    signal p_yuv_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch1_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch1_we0 : STD_LOGIC;
    signal p_yuv_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch2_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch2_we0 : STD_LOGIC;
    signal p_yuv_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch3_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch3_we0 : STD_LOGIC;
    signal p_scale_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch1_ce0 : STD_LOGIC;
    signal p_scale_channels_ch1_we0 : STD_LOGIC;
    signal p_scale_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch2_ce0 : STD_LOGIC;
    signal p_scale_channels_ch2_we0 : STD_LOGIC;
    signal p_scale_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch3_ce0 : STD_LOGIC;
    signal p_scale_channels_ch3_we0 : STD_LOGIC;
    signal p_scale_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_ap_start : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_ap_idle : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_ap_ready : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_244_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_ap_start : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_ap_done : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_ap_idle : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_ap_ready : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_264_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_i_reg_222 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_i_reg_233 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_308 : BOOLEAN;
    signal ap_reg_grp_yuv_filter_rgb2yuv_fu_244_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_yuv_filter_yuv2rgb_fu_264_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_321 : BOOLEAN;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_336 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_344 : BOOLEAN;
    signal tmp_fu_310_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_322_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl_cast_fu_314_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl3_cast_fu_326_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_5_i_cast_fu_351_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_3_fu_355_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_7_i_fu_370_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_i_fu_370_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_fu_378_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_fu_378_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_i_fu_386_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_i_fu_386_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_i_fu_370_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_fu_378_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_i_fu_386_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_7_i_fu_370_p10 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_8_i_fu_386_p10 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_fu_378_p10 : STD_LOGIC_VECTOR (14 downto 0);

    component yuv_filter_rgb2yuv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        out_width : IN STD_LOGIC_VECTOR (15 downto 0);
        out_height : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_yuv2rgb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        out_width : IN STD_LOGIC_VECTOR (15 downto 0);
        out_height : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_p_yuv_channels_ch1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    p_yuv_channels_ch1_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch1_address0,
        ce0 => p_yuv_channels_ch1_ce0,
        we0 => p_yuv_channels_ch1_we0,
        d0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_d0,
        q0 => p_yuv_channels_ch1_q0);

    p_yuv_channels_ch2_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch2_address0,
        ce0 => p_yuv_channels_ch2_ce0,
        we0 => p_yuv_channels_ch2_we0,
        d0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_d0,
        q0 => p_yuv_channels_ch2_q0);

    p_yuv_channels_ch3_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch3_address0,
        ce0 => p_yuv_channels_ch3_ce0,
        we0 => p_yuv_channels_ch3_we0,
        d0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_d0,
        q0 => p_yuv_channels_ch3_q0);

    p_scale_channels_ch1_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch1_address0,
        ce0 => p_scale_channels_ch1_ce0,
        we0 => p_scale_channels_ch1_we0,
        d0 => tmp_10_i_reg_526,
        q0 => p_scale_channels_ch1_q0);

    p_scale_channels_ch2_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch2_address0,
        ce0 => p_scale_channels_ch2_ce0,
        we0 => p_scale_channels_ch2_we0,
        d0 => tmp_11_i_reg_531,
        q0 => p_scale_channels_ch2_q0);

    p_scale_channels_ch3_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch3_address0,
        ce0 => p_scale_channels_ch3_ce0,
        we0 => p_scale_channels_ch3_we0,
        d0 => tmp_12_i_reg_536,
        q0 => p_scale_channels_ch3_q0);

    grp_yuv_filter_rgb2yuv_fu_244 : component yuv_filter_rgb2yuv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv_filter_rgb2yuv_fu_244_ap_start,
        ap_done => grp_yuv_filter_rgb2yuv_fu_244_ap_done,
        ap_idle => grp_yuv_filter_rgb2yuv_fu_244_ap_idle,
        ap_ready => grp_yuv_filter_rgb2yuv_fu_244_ap_ready,
        in_channels_ch1_address0 => grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch1_ce0,
        in_channels_ch1_q0 => in_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch2_ce0,
        in_channels_ch2_q0 => in_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch3_ce0,
        in_channels_ch3_q0 => in_channels_ch3_q0,
        out_width => in_width,
        out_height => in_height,
        out_channels_ch1_address0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_d0,
        ap_return_0 => grp_yuv_filter_rgb2yuv_fu_244_ap_return_0,
        ap_return_1 => grp_yuv_filter_rgb2yuv_fu_244_ap_return_1);

    grp_yuv_filter_yuv2rgb_fu_264 : component yuv_filter_yuv2rgb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv_filter_yuv2rgb_fu_264_ap_start,
        ap_done => grp_yuv_filter_yuv2rgb_fu_264_ap_done,
        ap_idle => grp_yuv_filter_yuv2rgb_fu_264_ap_idle,
        ap_ready => grp_yuv_filter_yuv2rgb_fu_264_ap_ready,
        in_channels_ch1_address0 => grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch1_ce0,
        in_channels_ch1_q0 => p_scale_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch2_ce0,
        in_channels_ch2_q0 => p_scale_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch3_ce0,
        in_channels_ch3_q0 => p_scale_channels_ch3_q0,
        out_width => p_yuv_width_reg_441,
        out_height => p_yuv_height_reg_447,
        out_channels_ch1_address0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_d0,
        ap_return_0 => grp_yuv_filter_yuv2rgb_fu_264_ap_return_0,
        ap_return_1 => grp_yuv_filter_yuv2rgb_fu_264_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_yuv_filter_rgb2yuv_fu_244_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_yuv_filter_rgb2yuv_fu_244_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_grp_yuv_filter_rgb2yuv_fu_244_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_yuv_filter_rgb2yuv_fu_244_ap_ready)) then 
                    ap_reg_grp_yuv_filter_rgb2yuv_fu_244_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_yuv_filter_yuv2rgb_fu_264_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_yuv_filter_yuv2rgb_fu_264_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((exitcond1_i_fu_299_p2 = ap_const_lv1_0)))) then 
                    ap_reg_grp_yuv_filter_yuv2rgb_fu_264_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_yuv_filter_yuv2rgb_fu_264_ap_ready)) then 
                    ap_reg_grp_yuv_filter_yuv2rgb_fu_264_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_i_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond_i_fu_340_p2)))) then 
                x_i_reg_222 <= x_reg_471;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_244_ap_done)))) then 
                x_i_reg_222 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    y_i_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                y_i_reg_233 <= y_reg_484;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (exitcond1_i_fu_299_p2 = ap_const_lv1_0))) then 
                y_i_reg_233 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                U_reg_516 <= p_yuv_channels_ch2_q0;
                V_reg_521 <= p_yuv_channels_ch3_q0;
                Y_reg_511 <= p_yuv_channels_ch1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_244_ap_done)))) then
                p_yuv_height_reg_447 <= grp_yuv_filter_rgb2yuv_fu_244_ap_return_1;
                p_yuv_width_reg_441 <= grp_yuv_filter_rgb2yuv_fu_244_ap_return_0;
                    tmp_1_i_cast_reg_458(7 downto 0) <= tmp_1_i_cast_fu_291_p1(7 downto 0);
                    tmp_2_i_cast_reg_463(7 downto 0) <= tmp_2_i_cast_fu_295_p1(7 downto 0);
                    tmp_i_cast_reg_453(7 downto 0) <= tmp_i_cast_fu_287_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                tmp_10_i_reg_526 <= tmp_7_i_fu_370_p2(14 downto 7);
                tmp_11_i_reg_531 <= tmp_i_fu_378_p2(14 downto 7);
                tmp_12_i_reg_536 <= tmp_8_i_fu_386_p2(14 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (exitcond1_i_fu_299_p2 = ap_const_lv1_0))) then
                    tmp_2_reg_476(22 downto 8) <= tmp_2_fu_334_p2(22 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond_i_fu_340_p2))) then
                    tmp_3_cast_reg_489(22 downto 0) <= tmp_3_cast_fu_360_p1(22 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                x_reg_471 <= x_fu_304_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                y_reg_484 <= y_fu_345_p2;
            end if;
        end if;
    end process;
    tmp_i_cast_reg_453(14 downto 8) <= "0000000";
    tmp_1_i_cast_reg_458(14 downto 8) <= "0000000";
    tmp_2_i_cast_reg_463(14 downto 8) <= "0000000";
    tmp_2_reg_476(7 downto 0) <= "00000000";
    tmp_3_cast_reg_489(63 downto 23) <= "00000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_yuv_filter_rgb2yuv_fu_244_ap_done, exitcond1_i_fu_299_p2, exitcond_i_fu_340_p2, grp_yuv_filter_yuv2rgb_fu_264_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_244_ap_done))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((exitcond1_i_fu_299_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = exitcond_i_fu_340_p2))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_264_ap_done))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_264_ap_done, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_264_ap_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_264_ap_done, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_264_ap_done)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_116_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_116 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_131_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_131 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_151_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_151 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_164_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_164 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_177_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_177 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_26_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_26 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_308_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_308 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_321_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_321 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_336_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_336 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_344_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_344 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_95_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_95 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_308)
    begin
        if (ap_sig_308) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_321)
    begin
        if (ap_sig_321) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_26)
    begin
        if (ap_sig_26) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_95)
    begin
        if (ap_sig_95) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_116)
    begin
        if (ap_sig_116) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_131)
    begin
        if (ap_sig_131) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_336)
    begin
        if (ap_sig_336) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_344)
    begin
        if (ap_sig_344) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_151)
    begin
        if (ap_sig_151) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_164)
    begin
        if (ap_sig_164) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_177)
    begin
        if (ap_sig_177) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_i_fu_299_p2 <= "1" when (x_i_reg_222 = p_yuv_width_reg_441) else "0";
    exitcond_i_fu_340_p2 <= "1" when (y_i_reg_233 = p_yuv_height_reg_447) else "0";
    grp_yuv_filter_rgb2yuv_fu_244_ap_start <= ap_reg_grp_yuv_filter_rgb2yuv_fu_244_ap_start;
    grp_yuv_filter_yuv2rgb_fu_264_ap_start <= ap_reg_grp_yuv_filter_yuv2rgb_fu_264_ap_start;
    in_channels_ch1_address0 <= grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch1_address0;
    in_channels_ch1_ce0 <= grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch1_ce0;
    in_channels_ch2_address0 <= grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch2_address0;
    in_channels_ch2_ce0 <= grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch2_ce0;
    in_channels_ch3_address0 <= grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch3_address0;
    in_channels_ch3_ce0 <= grp_yuv_filter_rgb2yuv_fu_244_in_channels_ch3_ce0;
    out_channels_ch1_address0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_address0;
    out_channels_ch1_ce0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_ce0;
    out_channels_ch1_d0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_d0;
    out_channels_ch1_we0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch1_we0;
    out_channels_ch2_address0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_address0;
    out_channels_ch2_ce0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_ce0;
    out_channels_ch2_d0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_d0;
    out_channels_ch2_we0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch2_we0;
    out_channels_ch3_address0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_address0;
    out_channels_ch3_ce0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_ce0;
    out_channels_ch3_d0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_d0;
    out_channels_ch3_we0 <= grp_yuv_filter_yuv2rgb_fu_264_out_channels_ch3_we0;
    out_height <= grp_yuv_filter_yuv2rgb_fu_264_ap_return_1;

    out_height_ap_vld_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_264_ap_done, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_264_ap_done)))) then 
            out_height_ap_vld <= ap_const_logic_1;
        else 
            out_height_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_width <= grp_yuv_filter_yuv2rgb_fu_264_ap_return_0;

    out_width_ap_vld_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_264_ap_done, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_264_ap_done)))) then 
            out_width_ap_vld <= ap_const_logic_1;
        else 
            out_width_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch1_address0_assign_proc : process(tmp_3_cast_reg_489, ap_sig_cseq_ST_st9_fsm_8, grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch1_address0, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            p_scale_channels_ch1_address0 <= tmp_3_cast_reg_489(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            p_scale_channels_ch1_address0 <= grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch1_address0;
        else 
            p_scale_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch1_ce0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch1_ce0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            p_scale_channels_ch1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            p_scale_channels_ch1_ce0 <= grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch1_ce0;
        else 
            p_scale_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch1_we0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            p_scale_channels_ch1_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch2_address0_assign_proc : process(tmp_3_cast_reg_489, ap_sig_cseq_ST_st9_fsm_8, grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch2_address0, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            p_scale_channels_ch2_address0 <= tmp_3_cast_reg_489(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            p_scale_channels_ch2_address0 <= grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch2_address0;
        else 
            p_scale_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch2_ce0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch2_ce0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            p_scale_channels_ch2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            p_scale_channels_ch2_ce0 <= grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch2_ce0;
        else 
            p_scale_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch2_we0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            p_scale_channels_ch2_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch3_address0_assign_proc : process(tmp_3_cast_reg_489, ap_sig_cseq_ST_st9_fsm_8, grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch3_address0, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            p_scale_channels_ch3_address0 <= tmp_3_cast_reg_489(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            p_scale_channels_ch3_address0 <= grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch3_address0;
        else 
            p_scale_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch3_ce0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8, grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch3_ce0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            p_scale_channels_ch3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            p_scale_channels_ch3_ce0 <= grp_yuv_filter_yuv2rgb_fu_264_in_channels_ch3_ce0;
        else 
            p_scale_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch3_we0_assign_proc : process(ap_sig_cseq_ST_st9_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            p_scale_channels_ch3_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl3_cast_fu_326_p3 <= (tmp_1_fu_322_p1 & ap_const_lv8_0);
    p_shl_cast_fu_314_p3 <= (tmp_fu_310_p1 & ap_const_lv10_0);

    p_yuv_channels_ch1_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, tmp_3_cast_fu_360_p1, grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_address0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_yuv_channels_ch1_address0 <= tmp_3_cast_fu_360_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch1_address0 <= grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_address0;
        else 
            p_yuv_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch1_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6, grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            p_yuv_channels_ch1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch1_ce0 <= grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_ce0;
        else 
            p_yuv_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch1_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch1_we0 <= grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch1_we0;
        else 
            p_yuv_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch2_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, tmp_3_cast_fu_360_p1, grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_address0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_yuv_channels_ch2_address0 <= tmp_3_cast_fu_360_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch2_address0 <= grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_address0;
        else 
            p_yuv_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch2_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6, grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            p_yuv_channels_ch2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch2_ce0 <= grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_ce0;
        else 
            p_yuv_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch2_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch2_we0 <= grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch2_we0;
        else 
            p_yuv_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch3_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, tmp_3_cast_fu_360_p1, grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_address0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_yuv_channels_ch3_address0 <= tmp_3_cast_fu_360_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch3_address0 <= grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_address0;
        else 
            p_yuv_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch3_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st7_fsm_6, grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            p_yuv_channels_ch3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch3_ce0 <= grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_ce0;
        else 
            p_yuv_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch3_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch3_we0 <= grp_yuv_filter_rgb2yuv_fu_244_out_channels_ch3_we0;
        else 
            p_yuv_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_322_p1 <= x_i_reg_222(15 - 1 downto 0);
    tmp_1_i_cast_fu_291_p1 <= std_logic_vector(resize(unsigned(U_scale),15));
    tmp_2_fu_334_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_314_p3) + unsigned(p_shl3_cast_fu_326_p3));
    tmp_2_i_cast_fu_295_p1 <= std_logic_vector(resize(unsigned(V_scale),15));
    tmp_3_cast_fu_360_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_355_p2),64));
    tmp_3_fu_355_p2 <= std_logic_vector(unsigned(tmp_2_reg_476) + unsigned(tmp_5_i_cast_fu_351_p1));
    tmp_5_i_cast_fu_351_p1 <= std_logic_vector(resize(unsigned(y_i_reg_233),23));
    tmp_7_i_fu_370_p0 <= tmp_i_cast_reg_453(8 - 1 downto 0);
    tmp_7_i_fu_370_p1 <= tmp_7_i_fu_370_p10(8 - 1 downto 0);
    tmp_7_i_fu_370_p10 <= std_logic_vector(resize(unsigned(Y_reg_511),15));
    tmp_7_i_fu_370_p2 <= std_logic_vector(resize(unsigned(tmp_7_i_fu_370_p0) * unsigned(tmp_7_i_fu_370_p1), 15));
    tmp_8_i_fu_386_p0 <= tmp_2_i_cast_reg_463(8 - 1 downto 0);
    tmp_8_i_fu_386_p1 <= tmp_8_i_fu_386_p10(8 - 1 downto 0);
    tmp_8_i_fu_386_p10 <= std_logic_vector(resize(unsigned(V_reg_521),15));
    tmp_8_i_fu_386_p2 <= std_logic_vector(resize(unsigned(tmp_8_i_fu_386_p0) * unsigned(tmp_8_i_fu_386_p1), 15));
    tmp_fu_310_p1 <= x_i_reg_222(13 - 1 downto 0);
    tmp_i_cast_fu_287_p1 <= std_logic_vector(resize(unsigned(Y_scale),15));
    tmp_i_fu_378_p0 <= tmp_1_i_cast_reg_458(8 - 1 downto 0);
    tmp_i_fu_378_p1 <= tmp_i_fu_378_p10(8 - 1 downto 0);
    tmp_i_fu_378_p10 <= std_logic_vector(resize(unsigned(U_reg_516),15));
    tmp_i_fu_378_p2 <= std_logic_vector(resize(unsigned(tmp_i_fu_378_p0) * unsigned(tmp_i_fu_378_p1), 15));
    x_fu_304_p2 <= std_logic_vector(unsigned(x_i_reg_222) + unsigned(ap_const_lv16_1));
    y_fu_345_p2 <= std_logic_vector(unsigned(y_i_reg_233) + unsigned(ap_const_lv16_1));
end behav;
