

================================================================
== Vivado HLS Report for 'yuv_filter_rgb2yuv'
================================================================
* Date:           Fri Jun 10 13:58:13 2016

* Version:        2016.1 (Build 1538259 on Fri Apr 08 16:12:49 MDT 2016)
* Project:        yuv_filter_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.34|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+----------+--------+----------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min  |    max   |   min  |    max   |   Type  |
    +--------+----------+--------+----------+---------+
    |  320401|  19664641|  320401|  19664641|   none  |
    +--------+----------+--------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+--------+----------+--------------+-----------+-----------+------------+----------+
        |                   |      Latency      |   Iteration  |  Initiation Interval  |    Trip    |          |
        |     Loop Name     |   min  |    max   |    Latency   |  achieved |   target  |    Count   | Pipelined|
        +-------------------+--------+----------+--------------+-----------+-----------+------------+----------+
        |- RGB2YUV_LOOP_X   |  320400|  19664640| 1602 ~ 10242 |          -|          -| 200 ~ 1920 |    no    |
        | + RGB2YUV_LOOP_Y  |    1600|     10240|             8|          -|          -| 200 ~ 1280 |    no    |
        +-------------------+--------+----------+--------------+-----------+-----------+------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / (!exitcond)
	2  / (exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	3  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: in_height_read_2 [1/1] 0.00ns
:0  %in_height_read_2 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_height_read)

ST_1: in_width_read_2 [1/1] 0.00ns
:1  %in_width_read_2 = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %in_width_read)

ST_1: stg_13 [1/1] 1.57ns
:2  br label %1


 <State 2>: 2.28ns
ST_2: x [1/1] 0.00ns
:0  %x = phi i16 [ 0, %0 ], [ %x_2, %5 ]

ST_2: exitcond1 [1/1] 2.28ns
:1  %exitcond1 = icmp eq i16 %x, %in_width_read_2

ST_2: x_2 [1/1] 1.96ns
:2  %x_2 = add i16 %x, 1

ST_2: stg_17 [1/1] 0.00ns
:3  br i1 %exitcond1, label %6, label %2

ST_2: stg_18 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str) nounwind

ST_2: tmp_s [1/1] 0.00ns
:1  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str)

ST_2: stg_20 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 200, i32 1920, i32 1060, [1 x i8]* @p_str1) nounwind

ST_2: tmp [1/1] 0.00ns
:3  %tmp = trunc i16 %x to i13

ST_2: p_shl_cast [1/1] 0.00ns
:4  %p_shl_cast = call i23 @_ssdm_op_BitConcatenate.i23.i13.i10(i13 %tmp, i10 0)

ST_2: tmp_21 [1/1] 0.00ns
:5  %tmp_21 = trunc i16 %x to i15

ST_2: p_shl7_cast [1/1] 0.00ns
:6  %p_shl7_cast = call i23 @_ssdm_op_BitConcatenate.i23.i15.i8(i15 %tmp_21, i8 0)

ST_2: tmp_22 [1/1] 2.20ns
:7  %tmp_22 = add i23 %p_shl_cast, %p_shl7_cast

ST_2: stg_26 [1/1] 1.57ns
:8  br label %3

ST_2: mrv [1/1] 0.00ns
:0  %mrv = insertvalue { i16, i16 } undef, i16 %in_width_read_2, 0

ST_2: mrv_1 [1/1] 0.00ns
:1  %mrv_1 = insertvalue { i16, i16 } %mrv, i16 %in_height_read_2, 1

ST_2: stg_29 [1/1] 0.00ns
:2  ret { i16, i16 } %mrv_1


 <State 3>: 4.81ns
ST_3: y [1/1] 0.00ns
:0  %y = phi i16 [ 0, %2 ], [ %y_2, %4 ]

ST_3: exitcond [1/1] 2.28ns
:1  %exitcond = icmp eq i16 %y, %in_height_read_2

ST_3: y_2 [1/1] 1.96ns
:2  %y_2 = add i16 %y, 1

ST_3: stg_33 [1/1] 0.00ns
:3  br i1 %exitcond, label %5, label %4

ST_3: tmp_cast [1/1] 0.00ns
:3  %tmp_cast = zext i16 %y to i23

ST_3: tmp_24 [1/1] 2.20ns
:4  %tmp_24 = add i23 %tmp_cast, %tmp_22

ST_3: tmp_24_cast [1/1] 0.00ns
:5  %tmp_24_cast = zext i23 %tmp_24 to i64

ST_3: in_channels_ch1_addr [1/1] 0.00ns
:6  %in_channels_ch1_addr = getelementptr [2457600 x i8]* %in_channels_ch1, i64 0, i64 %tmp_24_cast

ST_3: in_channels_ch2_addr [1/1] 0.00ns
:7  %in_channels_ch2_addr = getelementptr [2457600 x i8]* %in_channels_ch2, i64 0, i64 %tmp_24_cast

ST_3: R [4/4] 2.61ns
:12  %R = load i8* %in_channels_ch1_addr, align 1

ST_3: G [4/4] 2.61ns
:13  %G = load i8* %in_channels_ch2_addr, align 1

ST_3: empty_17 [1/1] 0.00ns
:0  %empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str, i32 %tmp_s)

ST_3: stg_42 [1/1] 0.00ns
:1  br label %1


 <State 4>: 2.61ns
ST_4: in_channels_ch3_addr [1/1] 0.00ns
:8  %in_channels_ch3_addr = getelementptr [2457600 x i8]* %in_channels_ch3, i64 0, i64 %tmp_24_cast

ST_4: R [3/4] 2.61ns
:12  %R = load i8* %in_channels_ch1_addr, align 1

ST_4: G [3/4] 2.61ns
:13  %G = load i8* %in_channels_ch2_addr, align 1

ST_4: B [4/4] 2.61ns
:14  %B = load i8* %in_channels_ch3_addr, align 1


 <State 5>: 2.61ns
ST_5: R [2/4] 2.61ns
:12  %R = load i8* %in_channels_ch1_addr, align 1

ST_5: G [2/4] 2.61ns
:13  %G = load i8* %in_channels_ch2_addr, align 1

ST_5: B [3/4] 2.61ns
:14  %B = load i8* %in_channels_ch3_addr, align 1


 <State 6>: 2.61ns
ST_6: R [1/4] 2.61ns
:12  %R = load i8* %in_channels_ch1_addr, align 1

ST_6: G [1/4] 2.61ns
:13  %G = load i8* %in_channels_ch2_addr, align 1

ST_6: B [2/4] 2.61ns
:14  %B = load i8* %in_channels_ch3_addr, align 1


 <State 7>: 6.38ns
ST_7: B [1/4] 2.61ns
:14  %B = load i8* %in_channels_ch3_addr, align 1

ST_7: tmp_33_cast1 [1/1] 0.00ns
:15  %tmp_33_cast1 = zext i8 %R to i16

ST_7: tmp_35_cast1 [1/1] 0.00ns
:21  %tmp_35_cast1 = zext i8 %G to i16

ST_7: tmp_29 [1/1] 6.38ns
:39  %tmp_29 = mul i16 %tmp_35_cast1, -74

ST_7: tmp_33 [1/1] 6.38ns
:51  %tmp_33 = mul i16 %tmp_33_cast1, 122


 <State 8>: 8.34ns
ST_8: tmp_33_cast2 [1/1] 0.00ns
:16  %tmp_33_cast2 = zext i8 %R to i15

ST_8: p_shl5 [1/1] 0.00ns
:17  %p_shl5 = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %R, i6 0)

ST_8: p_shl5_cast [1/1] 0.00ns
:18  %p_shl5_cast = zext i14 %p_shl5 to i15

ST_8: p_shl6 [1/1] 0.00ns
:19  %p_shl6 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %R, i1 false)

ST_8: p_shl6_cast [1/1] 0.00ns
:20  %p_shl6_cast = zext i9 %p_shl6 to i15

ST_8: tmp_35_cast2 [1/1] 0.00ns
:22  %tmp_35_cast2 = zext i8 %G to i9

ST_8: p_shl4 [1/1] 0.00ns
:23  %p_shl4 = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %G, i7 0)

ST_8: p_shl4_cast [1/1] 0.00ns
:24  %p_shl4_cast = zext i15 %p_shl4 to i16

ST_8: tmp_37_cast1 [1/1] 0.00ns
:25  %tmp_37_cast1 = zext i8 %B to i13

ST_8: tmp_25 [1/1] 3.36ns
:26  %tmp_25 = mul i13 %tmp_37_cast1, 25

ST_8: tmp2 [1/1] 1.96ns
:27  %tmp2 = add i15 %p_shl6_cast, %p_shl5_cast

ST_8: tmp2_cast [1/1] 0.00ns
:28  %tmp2_cast = zext i15 %tmp2 to i16

ST_8: tmp1 [1/1] 1.73ns
:29  %tmp1 = add i16 %tmp2_cast, %p_shl4_cast

ST_8: tmp4 [1/1] 1.84ns
:30  %tmp4 = add i9 %tmp_35_cast2, 128

ST_8: tmp4_cast [1/1] 0.00ns
:31  %tmp4_cast = zext i9 %tmp4 to i13

ST_8: tmp3 [1/1] 3.02ns
:32  %tmp3 = add i13 %tmp4_cast, %tmp_25

ST_8: tmp3_cast [1/1] 0.00ns
:33  %tmp3_cast = zext i13 %tmp3 to i16

ST_8: tmp_26 [1/1] 1.73ns
:34  %tmp_26 = add i16 %tmp3_cast, %tmp1

ST_8: tmp_27 [1/1] 0.00ns
:35  %tmp_27 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_26, i32 8, i32 15)

ST_8: tmp_28 [1/1] 3.36ns
:37  %tmp_28 = mul i15 %tmp_33_cast2, -38

ST_8: tmp_44_cast [1/1] 0.00ns
:38  %tmp_44_cast = sext i15 %tmp_28 to i16

ST_8: p_shl2 [1/1] 0.00ns
:40  %p_shl2 = call i15 @_ssdm_op_BitConcatenate.i15.i8.i7(i8 %B, i7 0)

ST_8: p_shl2_cast [1/1] 0.00ns
:41  %p_shl2_cast = zext i15 %p_shl2 to i16

ST_8: p_shl3 [1/1] 0.00ns
:42  %p_shl3 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %B, i4 0)

ST_8: p_shl3_cast9 [1/1] 0.00ns
:43  %p_shl3_cast9 = zext i12 %p_shl3 to i13

ST_8: p_shl3_cast [1/1] 0.00ns
:44  %p_shl3_cast = zext i12 %p_shl3 to i16

ST_8: tmp_30 [1/1] 1.96ns
:45  %tmp_30 = sub i16 %p_shl2_cast, %p_shl3_cast

ST_8: tmp5 [1/1] 3.02ns
:46  %tmp5 = add i16 %tmp_44_cast, %tmp_29

ST_8: tmp6 [1/1] 1.73ns
:47  %tmp6 = add i16 %tmp_30, 128

ST_8: tmp_31 [1/1] 1.73ns
:48  %tmp_31 = add i16 %tmp6, %tmp5

ST_8: tmp_32 [1/1] 0.00ns
:49  %tmp_32 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_31, i32 8, i32 15)

ST_8: tmp_34 [1/1] 3.36ns
:52  %tmp_34 = mul i16 %tmp_35_cast1, -94

ST_8: p_neg [1/1] 1.84ns
:53  %p_neg = sub i13 0, %p_shl3_cast9

ST_8: p_neg_cast [1/1] 0.00ns
:54  %p_neg_cast = sext i13 %p_neg to i14

ST_8: p_shl1 [1/1] 0.00ns
:55  %p_shl1 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %B, i1 false)

ST_8: p_shl1_cast [1/1] 0.00ns
:56  %p_shl1_cast = zext i9 %p_shl1 to i14

ST_8: tmp_35 [1/1] 1.73ns
:57  %tmp_35 = sub i14 %p_neg_cast, %p_shl1_cast

ST_8: tmp7 [1/1] 3.02ns
:58  %tmp7 = add i16 %tmp_33, %tmp_34

ST_8: tmp8 [1/1] 1.73ns
:59  %tmp8 = add i14 %tmp_35, 128

ST_8: tmp8_cast [1/1] 0.00ns
:60  %tmp8_cast = sext i14 %tmp8 to i16

ST_8: tmp_36 [1/1] 1.96ns
:61  %tmp_36 = add i16 %tmp8_cast, %tmp7

ST_8: tmp_37 [1/1] 0.00ns
:62  %tmp_37 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_36, i32 8, i32 15)


 <State 9>: 4.33ns
ST_9: out_channels_ch1_addr [1/1] 0.00ns
:9  %out_channels_ch1_addr = getelementptr [2457600 x i8]* %out_channels_ch1, i64 0, i64 %tmp_24_cast

ST_9: out_channels_ch2_addr [1/1] 0.00ns
:10  %out_channels_ch2_addr = getelementptr [2457600 x i8]* %out_channels_ch2, i64 0, i64 %tmp_24_cast

ST_9: out_channels_ch3_addr [1/1] 0.00ns
:11  %out_channels_ch3_addr = getelementptr [2457600 x i8]* %out_channels_ch3, i64 0, i64 %tmp_24_cast

ST_9: Y [1/1] 1.72ns
:36  %Y = add i8 %tmp_27, 16

ST_9: U [1/1] 1.37ns
:50  %U = xor i8 %tmp_32, -128

ST_9: V [1/1] 1.37ns
:63  %V = xor i8 %tmp_37, -128

ST_9: stg_106 [2/2] 2.61ns
:64  store i8 %Y, i8* %out_channels_ch1_addr, align 1

ST_9: stg_107 [2/2] 2.61ns
:65  store i8 %U, i8* %out_channels_ch2_addr, align 1

ST_9: stg_108 [2/2] 2.61ns
:66  store i8 %V, i8* %out_channels_ch3_addr, align 1


 <State 10>: 2.61ns
ST_10: stg_109 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str2) nounwind

ST_10: tmp_23 [1/1] 0.00ns
:1  %tmp_23 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str2)

ST_10: stg_111 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 200, i32 1280, i32 740, [1 x i8]* @p_str1) nounwind

ST_10: stg_112 [1/2] 2.61ns
:64  store i8 %Y, i8* %out_channels_ch1_addr, align 1

ST_10: stg_113 [1/2] 2.61ns
:65  store i8 %U, i8* %out_channels_ch2_addr, align 1

ST_10: stg_114 [1/2] 2.61ns
:66  store i8 %V, i8* %out_channels_ch3_addr, align 1

ST_10: empty [1/1] 0.00ns
:67  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str2, i32 %tmp_23)

ST_10: stg_116 [1/1] 0.00ns
:68  br label %3



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
