// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axi_interfaces,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.649000,HLS_SYN_LAT=5,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=444,HLS_SYN_LUT=335}" *)

module axi_interfaces (
        ap_clk,
        ap_rst_n,
        d_o_0_TREADY,
        d_o_1_TREADY,
        d_o_2_TREADY,
        d_o_3_TREADY,
        d_o_4_TREADY,
        d_o_5_TREADY,
        d_o_6_TREADY,
        d_o_7_TREADY,
        d_o_0_TDATA,
        d_o_0_TVALID,
        d_o_1_TDATA,
        d_o_1_TVALID,
        d_o_2_TDATA,
        d_o_2_TVALID,
        d_o_3_TDATA,
        d_o_3_TVALID,
        d_o_4_TDATA,
        d_o_4_TVALID,
        d_o_5_TDATA,
        d_o_5_TVALID,
        d_o_6_TDATA,
        d_o_6_TVALID,
        d_o_7_TDATA,
        d_o_7_TVALID,
        d_i_0_address0,
        d_i_0_ce0,
        d_i_0_q0,
        d_i_1_address0,
        d_i_1_ce0,
        d_i_1_q0,
        d_i_2_address0,
        d_i_2_ce0,
        d_i_2_q0,
        d_i_3_address0,
        d_i_3_ce0,
        d_i_3_q0,
        d_i_4_address0,
        d_i_4_ce0,
        d_i_4_q0,
        d_i_5_address0,
        d_i_5_ce0,
        d_i_5_q0,
        d_i_6_address0,
        d_i_6_ce0,
        d_i_6_q0,
        d_i_7_address0,
        d_i_7_ce0,
        d_i_7_q0,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_st1_fsm_0 = 2'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 2'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv6_8 = 6'b1000;
parameter    ap_const_lv6_20 = 6'b100000;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input   d_o_0_TREADY;
input   d_o_1_TREADY;
input   d_o_2_TREADY;
input   d_o_3_TREADY;
input   d_o_4_TREADY;
input   d_o_5_TREADY;
input   d_o_6_TREADY;
input   d_o_7_TREADY;
output  [15:0] d_o_0_TDATA;
output   d_o_0_TVALID;
output  [15:0] d_o_1_TDATA;
output   d_o_1_TVALID;
output  [15:0] d_o_2_TDATA;
output   d_o_2_TVALID;
output  [15:0] d_o_3_TDATA;
output   d_o_3_TVALID;
output  [15:0] d_o_4_TDATA;
output   d_o_4_TVALID;
output  [15:0] d_o_5_TDATA;
output   d_o_5_TVALID;
output  [15:0] d_o_6_TDATA;
output   d_o_6_TVALID;
output  [15:0] d_o_7_TDATA;
output   d_o_7_TVALID;
output  [1:0] d_i_0_address0;
output   d_i_0_ce0;
input  [15:0] d_i_0_q0;
output  [1:0] d_i_1_address0;
output   d_i_1_ce0;
input  [15:0] d_i_1_q0;
output  [1:0] d_i_2_address0;
output   d_i_2_ce0;
input  [15:0] d_i_2_q0;
output  [1:0] d_i_3_address0;
output   d_i_3_ce0;
input  [15:0] d_i_3_q0;
output  [1:0] d_i_4_address0;
output   d_i_4_ce0;
input  [15:0] d_i_4_q0;
output  [1:0] d_i_5_address0;
output   d_i_5_ce0;
input  [15:0] d_i_5_q0;
output  [1:0] d_i_6_address0;
output   d_i_6_ce0;
input  [15:0] d_i_6_q0;
output  [1:0] d_i_7_address0;
output   d_i_7_ce0;
input  [15:0] d_i_7_q0;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg d_o_0_TVALID;
reg d_o_1_TVALID;
reg d_o_2_TVALID;
reg d_o_3_TVALID;
reg d_o_4_TVALID;
reg d_o_5_TVALID;
reg d_o_6_TVALID;
reg d_o_7_TVALID;
reg d_i_0_ce0;
reg d_i_1_ce0;
reg d_i_2_ce0;
reg d_i_3_ce0;
reg d_i_4_ce0;
reg d_i_5_ce0;
reg d_i_6_ce0;
reg d_i_7_ce0;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_19;
reg    ap_ready;
wire   [0:0] exitcond_fu_320_p2;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_35;
wire    ap_reg_ppiten_pp0_it0;
reg    ap_sig_ioackin_d_o_0_TREADY;
reg    ap_sig_ioackin_d_o_1_TREADY;
reg    ap_sig_ioackin_d_o_2_TREADY;
reg    ap_sig_ioackin_d_o_3_TREADY;
reg    ap_sig_ioackin_d_o_4_TREADY;
reg    ap_sig_ioackin_d_o_5_TREADY;
reg    ap_sig_ioackin_d_o_6_TREADY;
reg    ap_sig_ioackin_d_o_7_TREADY;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it1;
reg   [31:0] acc_0;
reg   [31:0] acc_1;
reg   [31:0] acc_2;
reg   [31:0] acc_3;
reg   [31:0] acc_4;
reg   [31:0] acc_5;
reg   [31:0] acc_6;
reg   [31:0] acc_7;
reg    d_o_0_TDATA_blk_n;
reg    d_o_1_TDATA_blk_n;
reg    d_o_2_TDATA_blk_n;
reg    d_o_3_TDATA_blk_n;
reg    d_o_4_TDATA_blk_n;
reg    d_o_5_TDATA_blk_n;
reg    d_o_6_TDATA_blk_n;
reg    d_o_7_TDATA_blk_n;
reg   [4:0] i1_reg_270;
wire   [4:0] tmp_12_fu_316_p1;
reg   [4:0] tmp_12_reg_560;
reg   [0:0] exitcond_reg_565;
reg   [0:0] ap_reg_ppstg_exitcond_reg_565_pp0_iter1;
reg   [15:0] d_i_0_load_reg_569;
reg   [15:0] d_i_1_load_reg_574;
reg   [15:0] d_i_2_load_reg_579;
reg   [15:0] d_i_3_load_reg_584;
reg   [15:0] d_i_4_load_reg_589;
reg   [15:0] d_i_5_load_reg_594;
reg   [15:0] d_i_6_load_reg_599;
reg   [15:0] d_i_7_load_reg_604;
reg   [4:0] i1_phi_fu_274_p6;
wire   [63:0] newIndex_fu_298_p1;
wire   [31:0] tmp_3_fu_333_p2;
wire   [31:0] tmp_3_1_fu_357_p2;
wire   [31:0] tmp_3_2_fu_381_p2;
wire   [31:0] tmp_3_3_fu_405_p2;
wire   [31:0] tmp_3_4_fu_429_p2;
wire   [31:0] tmp_3_5_fu_453_p2;
wire   [31:0] tmp_3_6_fu_477_p2;
wire   [31:0] tmp_3_7_fu_501_p2;
reg    ap_reg_ioackin_d_o_0_TREADY;
reg    ap_reg_ioackin_d_o_1_TREADY;
reg    ap_reg_ioackin_d_o_2_TREADY;
reg    ap_reg_ioackin_d_o_3_TREADY;
reg    ap_reg_ioackin_d_o_4_TREADY;
reg    ap_reg_ioackin_d_o_5_TREADY;
reg    ap_reg_ioackin_d_o_6_TREADY;
reg    ap_reg_ioackin_d_o_7_TREADY;
wire   [1:0] tmp_1_fu_288_p4;
wire   [5:0] i1_cast_fu_284_p1;
wire   [5:0] i_1_7_fu_310_p2;
wire  signed [31:0] tmp_2_fu_330_p1;
wire  signed [31:0] tmp_2_1_fu_354_p1;
wire  signed [31:0] tmp_2_2_fu_378_p1;
wire  signed [31:0] tmp_2_3_fu_402_p1;
wire  signed [31:0] tmp_2_4_fu_426_p1;
wire  signed [31:0] tmp_2_5_fu_450_p1;
wire  signed [31:0] tmp_2_6_fu_474_p1;
wire  signed [31:0] tmp_2_7_fu_498_p1;
reg   [1:0] ap_NS_fsm;
reg    ap_sig_pprstidle_pp0;
reg    ap_sig_235;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'b1;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 acc_0 = 32'b00000000000000000000000000000000;
#0 acc_1 = 32'b00000000000000000000000000000000;
#0 acc_2 = 32'b00000000000000000000000000000000;
#0 acc_3 = 32'b00000000000000000000000000000000;
#0 acc_4 = 32'b00000000000000000000000000000000;
#0 acc_5 = 32'b00000000000000000000000000000000;
#0 acc_6 = 32'b00000000000000000000000000000000;
#0 acc_7 = 32'b00000000000000000000000000000000;
#0 ap_reg_ioackin_d_o_0_TREADY = 1'b0;
#0 ap_reg_ioackin_d_o_1_TREADY = 1'b0;
#0 ap_reg_ioackin_d_o_2_TREADY = 1'b0;
#0 ap_reg_ioackin_d_o_3_TREADY = 1'b0;
#0 ap_reg_ioackin_d_o_4_TREADY = 1'b0;
#0 ap_reg_ioackin_d_o_5_TREADY = 1'b0;
#0 ap_reg_ioackin_d_o_6_TREADY = 1'b0;
#0 ap_reg_ioackin_d_o_7_TREADY = 1'b0;
end

axi_interfaces_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
axi_interfaces_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_0_TREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
            if (~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2))) begin
                ap_reg_ioackin_d_o_0_TREADY <= 1'b0;
            end else if ((1'b1 == d_o_0_TREADY)) begin
                ap_reg_ioackin_d_o_0_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_1_TREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
            if (~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2))) begin
                ap_reg_ioackin_d_o_1_TREADY <= 1'b0;
            end else if ((1'b1 == d_o_1_TREADY)) begin
                ap_reg_ioackin_d_o_1_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_2_TREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
            if (~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2))) begin
                ap_reg_ioackin_d_o_2_TREADY <= 1'b0;
            end else if ((1'b1 == d_o_2_TREADY)) begin
                ap_reg_ioackin_d_o_2_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_3_TREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
            if (~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2))) begin
                ap_reg_ioackin_d_o_3_TREADY <= 1'b0;
            end else if ((1'b1 == d_o_3_TREADY)) begin
                ap_reg_ioackin_d_o_3_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_4_TREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
            if (~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2))) begin
                ap_reg_ioackin_d_o_4_TREADY <= 1'b0;
            end else if ((1'b1 == d_o_4_TREADY)) begin
                ap_reg_ioackin_d_o_4_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_5_TREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
            if (~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2))) begin
                ap_reg_ioackin_d_o_5_TREADY <= 1'b0;
            end else if ((1'b1 == d_o_5_TREADY)) begin
                ap_reg_ioackin_d_o_5_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_6_TREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
            if (~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2))) begin
                ap_reg_ioackin_d_o_6_TREADY <= 1'b0;
            end else if ((1'b1 == d_o_6_TREADY)) begin
                ap_reg_ioackin_d_o_6_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_7_TREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
            if (~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2))) begin
                ap_reg_ioackin_d_o_7_TREADY <= 1'b0;
            end else if ((1'b1 == d_o_7_TREADY)) begin
                ap_reg_ioackin_d_o_7_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_start;
        end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
            ap_reg_ppiten_pp0_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)) & (1'b0 == exitcond_reg_565))) begin
        i1_reg_270 <= tmp_12_reg_560;
    end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)) & ~(1'b0 == exitcond_reg_565)))) begin
        i1_reg_270 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        acc_0 <= tmp_3_fu_333_p2;
        acc_1 <= tmp_3_1_fu_357_p2;
        acc_2 <= tmp_3_2_fu_381_p2;
        acc_3 <= tmp_3_3_fu_405_p2;
        acc_4 <= tmp_3_4_fu_429_p2;
        acc_5 <= tmp_3_5_fu_453_p2;
        acc_6 <= tmp_3_6_fu_477_p2;
        acc_7 <= tmp_3_7_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        ap_reg_ppstg_exitcond_reg_565_pp0_iter1 <= exitcond_reg_565;
        d_i_0_load_reg_569 <= d_i_0_q0;
        d_i_1_load_reg_574 <= d_i_1_q0;
        d_i_2_load_reg_579 <= d_i_2_q0;
        d_i_3_load_reg_584 <= d_i_3_q0;
        d_i_4_load_reg_589 <= d_i_4_q0;
        d_i_5_load_reg_594 <= d_i_5_q0;
        d_i_6_load_reg_599 <= d_i_6_q0;
        d_i_7_load_reg_604 <= d_i_7_q0;
        exitcond_reg_565 <= exitcond_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        tmp_12_reg_560 <= tmp_12_fu_316_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)) & ~(1'b0 == ap_reg_ppstg_exitcond_reg_565_pp0_iter1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~(exitcond_fu_320_p2 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_35) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_19) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_d_o_0_TREADY)) begin
        ap_sig_ioackin_d_o_0_TREADY = d_o_0_TREADY;
    end else begin
        ap_sig_ioackin_d_o_0_TREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_d_o_1_TREADY)) begin
        ap_sig_ioackin_d_o_1_TREADY = d_o_1_TREADY;
    end else begin
        ap_sig_ioackin_d_o_1_TREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_d_o_2_TREADY)) begin
        ap_sig_ioackin_d_o_2_TREADY = d_o_2_TREADY;
    end else begin
        ap_sig_ioackin_d_o_2_TREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_d_o_3_TREADY)) begin
        ap_sig_ioackin_d_o_3_TREADY = d_o_3_TREADY;
    end else begin
        ap_sig_ioackin_d_o_3_TREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_d_o_4_TREADY)) begin
        ap_sig_ioackin_d_o_4_TREADY = d_o_4_TREADY;
    end else begin
        ap_sig_ioackin_d_o_4_TREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_d_o_5_TREADY)) begin
        ap_sig_ioackin_d_o_5_TREADY = d_o_5_TREADY;
    end else begin
        ap_sig_ioackin_d_o_5_TREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_d_o_6_TREADY)) begin
        ap_sig_ioackin_d_o_6_TREADY = d_o_6_TREADY;
    end else begin
        ap_sig_ioackin_d_o_6_TREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_d_o_7_TREADY)) begin
        ap_sig_ioackin_d_o_7_TREADY = d_o_7_TREADY;
    end else begin
        ap_sig_ioackin_d_o_7_TREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b0 == ap_reg_ppiten_pp0_it0) & (1'b0 == ap_reg_ppiten_pp0_it1))) begin
        ap_sig_pprstidle_pp0 = 1'b1;
    end else begin
        ap_sig_pprstidle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        d_i_0_ce0 = 1'b1;
    end else begin
        d_i_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        d_i_1_ce0 = 1'b1;
    end else begin
        d_i_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        d_i_2_ce0 = 1'b1;
    end else begin
        d_i_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        d_i_3_ce0 = 1'b1;
    end else begin
        d_i_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        d_i_4_ce0 = 1'b1;
    end else begin
        d_i_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        d_i_5_ce0 = 1'b1;
    end else begin
        d_i_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        d_i_6_ce0 = 1'b1;
    end else begin
        d_i_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)))) begin
        d_i_7_ce0 = 1'b1;
    end else begin
        d_i_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        d_o_0_TDATA_blk_n = d_o_0_TREADY;
    end else begin
        d_o_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ioackin_d_o_0_TREADY))) begin
        d_o_0_TVALID = 1'b1;
    end else begin
        d_o_0_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        d_o_1_TDATA_blk_n = d_o_1_TREADY;
    end else begin
        d_o_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ioackin_d_o_1_TREADY))) begin
        d_o_1_TVALID = 1'b1;
    end else begin
        d_o_1_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        d_o_2_TDATA_blk_n = d_o_2_TREADY;
    end else begin
        d_o_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ioackin_d_o_2_TREADY))) begin
        d_o_2_TVALID = 1'b1;
    end else begin
        d_o_2_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        d_o_3_TDATA_blk_n = d_o_3_TREADY;
    end else begin
        d_o_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ioackin_d_o_3_TREADY))) begin
        d_o_3_TVALID = 1'b1;
    end else begin
        d_o_3_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        d_o_4_TDATA_blk_n = d_o_4_TREADY;
    end else begin
        d_o_4_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ioackin_d_o_4_TREADY))) begin
        d_o_4_TVALID = 1'b1;
    end else begin
        d_o_4_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        d_o_5_TDATA_blk_n = d_o_5_TREADY;
    end else begin
        d_o_5_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ioackin_d_o_5_TREADY))) begin
        d_o_5_TVALID = 1'b1;
    end else begin
        d_o_5_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        d_o_6_TDATA_blk_n = d_o_6_TREADY;
    end else begin
        d_o_6_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ioackin_d_o_6_TREADY))) begin
        d_o_6_TVALID = 1'b1;
    end else begin
        d_o_6_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it2)) begin
        d_o_7_TDATA_blk_n = d_o_7_TREADY;
    end else begin
        d_o_7_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ioackin_d_o_7_TREADY))) begin
        d_o_7_TVALID = 1'b1;
    end else begin
        d_o_7_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_235) begin
        if (~(1'b0 == exitcond_reg_565)) begin
            i1_phi_fu_274_p6 = ap_const_lv5_0;
        end else if ((1'b0 == exitcond_reg_565)) begin
            i1_phi_fu_274_p6 = tmp_12_reg_560;
        end else begin
            i1_phi_fu_274_p6 = i1_reg_270;
        end
    end else begin
        i1_phi_fu_274_p6 = i1_reg_270;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : begin
            if (~(1'b1 == ap_sig_pprstidle_pp0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if ((~(((1'b0 == ap_sig_ioackin_d_o_0_TREADY) | (1'b0 == ap_sig_ioackin_d_o_1_TREADY) | (1'b0 == ap_sig_ioackin_d_o_2_TREADY) | (1'b0 == ap_sig_ioackin_d_o_3_TREADY) | (1'b0 == ap_sig_ioackin_d_o_4_TREADY) | (1'b0 == ap_sig_ioackin_d_o_5_TREADY) | (1'b0 == ap_sig_ioackin_d_o_6_TREADY) | (1'b0 == ap_sig_ioackin_d_o_7_TREADY)) & (1'b1 == ap_reg_ppiten_pp0_it2)) & (1'b1 == ap_sig_pprstidle_pp0))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_reg_ppiten_pp0_it0 = ap_start;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_19 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_235 = ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1));
end

always @ (*) begin
    ap_sig_35 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign d_i_0_address0 = newIndex_fu_298_p1;

assign d_i_1_address0 = newIndex_fu_298_p1;

assign d_i_2_address0 = newIndex_fu_298_p1;

assign d_i_3_address0 = newIndex_fu_298_p1;

assign d_i_4_address0 = newIndex_fu_298_p1;

assign d_i_5_address0 = newIndex_fu_298_p1;

assign d_i_6_address0 = newIndex_fu_298_p1;

assign d_i_7_address0 = newIndex_fu_298_p1;

assign d_o_0_TDATA = tmp_3_fu_333_p2[15:0];

assign d_o_1_TDATA = tmp_3_1_fu_357_p2[15:0];

assign d_o_2_TDATA = tmp_3_2_fu_381_p2[15:0];

assign d_o_3_TDATA = tmp_3_3_fu_405_p2[15:0];

assign d_o_4_TDATA = tmp_3_4_fu_429_p2[15:0];

assign d_o_5_TDATA = tmp_3_5_fu_453_p2[15:0];

assign d_o_6_TDATA = tmp_3_6_fu_477_p2[15:0];

assign d_o_7_TDATA = tmp_3_7_fu_501_p2[15:0];

assign exitcond_fu_320_p2 = ((i_1_7_fu_310_p2 == ap_const_lv6_20) ? 1'b1 : 1'b0);

assign i1_cast_fu_284_p1 = i1_phi_fu_274_p6;

assign i_1_7_fu_310_p2 = (ap_const_lv6_8 + i1_cast_fu_284_p1);

assign newIndex_fu_298_p1 = tmp_1_fu_288_p4;

assign tmp_12_fu_316_p1 = i_1_7_fu_310_p2[4:0];

assign tmp_1_fu_288_p4 = {{i1_phi_fu_274_p6[ap_const_lv32_4 : ap_const_lv32_3]}};

assign tmp_2_1_fu_354_p1 = $signed(d_i_1_load_reg_574);

assign tmp_2_2_fu_378_p1 = $signed(d_i_2_load_reg_579);

assign tmp_2_3_fu_402_p1 = $signed(d_i_3_load_reg_584);

assign tmp_2_4_fu_426_p1 = $signed(d_i_4_load_reg_589);

assign tmp_2_5_fu_450_p1 = $signed(d_i_5_load_reg_594);

assign tmp_2_6_fu_474_p1 = $signed(d_i_6_load_reg_599);

assign tmp_2_7_fu_498_p1 = $signed(d_i_7_load_reg_604);

assign tmp_2_fu_330_p1 = $signed(d_i_0_load_reg_569);

assign tmp_3_1_fu_357_p2 = ($signed(acc_1) + $signed(tmp_2_1_fu_354_p1));

assign tmp_3_2_fu_381_p2 = ($signed(acc_2) + $signed(tmp_2_2_fu_378_p1));

assign tmp_3_3_fu_405_p2 = ($signed(acc_3) + $signed(tmp_2_3_fu_402_p1));

assign tmp_3_4_fu_429_p2 = ($signed(acc_4) + $signed(tmp_2_4_fu_426_p1));

assign tmp_3_5_fu_453_p2 = ($signed(acc_5) + $signed(tmp_2_5_fu_450_p1));

assign tmp_3_6_fu_477_p2 = ($signed(acc_6) + $signed(tmp_2_6_fu_474_p1));

assign tmp_3_7_fu_501_p2 = ($signed(acc_7) + $signed(tmp_2_7_fu_498_p1));

assign tmp_3_fu_333_p2 = ($signed(acc_0) + $signed(tmp_2_fu_330_p1));

endmodule //axi_interfaces
