-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity axi_interfaces is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    d_o_0_TREADY : IN STD_LOGIC;
    d_o_1_TREADY : IN STD_LOGIC;
    d_o_2_TREADY : IN STD_LOGIC;
    d_o_3_TREADY : IN STD_LOGIC;
    d_o_4_TREADY : IN STD_LOGIC;
    d_o_5_TREADY : IN STD_LOGIC;
    d_o_6_TREADY : IN STD_LOGIC;
    d_o_7_TREADY : IN STD_LOGIC;
    d_o_0_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_TVALID : OUT STD_LOGIC;
    d_o_1_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_TVALID : OUT STD_LOGIC;
    d_o_2_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_TVALID : OUT STD_LOGIC;
    d_o_3_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_TVALID : OUT STD_LOGIC;
    d_o_4_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_4_TVALID : OUT STD_LOGIC;
    d_o_5_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_5_TVALID : OUT STD_LOGIC;
    d_o_6_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_6_TVALID : OUT STD_LOGIC;
    d_o_7_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_7_TVALID : OUT STD_LOGIC;
    d_i_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    d_i_0_ce0 : OUT STD_LOGIC;
    d_i_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    d_i_1_ce0 : OUT STD_LOGIC;
    d_i_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    d_i_2_ce0 : OUT STD_LOGIC;
    d_i_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    d_i_3_ce0 : OUT STD_LOGIC;
    d_i_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_4_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    d_i_4_ce0 : OUT STD_LOGIC;
    d_i_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_5_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    d_i_5_ce0 : OUT STD_LOGIC;
    d_i_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_6_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    d_i_6_ce0 : OUT STD_LOGIC;
    d_i_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_7_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    d_i_7_ce0 : OUT STD_LOGIC;
    d_i_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of axi_interfaces is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "axi_interfaces,hls_ip_2016_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.649000,HLS_SYN_LAT=5,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=444,HLS_SYN_LUT=335}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_19 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal exitcond_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_35 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC;
    signal ap_sig_ioackin_d_o_0_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_1_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_2_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_3_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_4_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_5_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_6_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_7_TREADY : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal d_o_0_TDATA_blk_n : STD_LOGIC;
    signal d_o_1_TDATA_blk_n : STD_LOGIC;
    signal d_o_2_TDATA_blk_n : STD_LOGIC;
    signal d_o_3_TDATA_blk_n : STD_LOGIC;
    signal d_o_4_TDATA_blk_n : STD_LOGIC;
    signal d_o_5_TDATA_blk_n : STD_LOGIC;
    signal d_o_6_TDATA_blk_n : STD_LOGIC;
    signal d_o_7_TDATA_blk_n : STD_LOGIC;
    signal i1_reg_270 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_fu_316_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_reg_560 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_reg_565 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond_reg_565_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_i_0_load_reg_569 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_1_load_reg_574 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_2_load_reg_579 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_3_load_reg_584 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_4_load_reg_589 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_5_load_reg_594 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_6_load_reg_599 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_i_7_load_reg_604 : STD_LOGIC_VECTOR (15 downto 0);
    signal i1_phi_fu_274_p6 : STD_LOGIC_VECTOR (4 downto 0);
    signal newIndex_fu_298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_1_fu_357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_fu_381_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_fu_405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_4_fu_429_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_5_fu_453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_6_fu_477_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_7_fu_501_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_d_o_0_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_1_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_2_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_3_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_4_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_5_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_6_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_7_TREADY : STD_LOGIC := '0';
    signal tmp_1_fu_288_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i1_cast_fu_284_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_1_7_fu_310_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_330_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_fu_354_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_fu_378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_fu_402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_4_fu_426_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_5_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_6_fu_474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_7_fu_498_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;
    signal ap_sig_235 : BOOLEAN;

    component axi_interfaces_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    axi_interfaces_AXILiteS_s_axi_U : component axi_interfaces_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_d_o_0_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_0_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then
                    if (not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then 
                        ap_reg_ioackin_d_o_0_TREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = d_o_0_TREADY)) then 
                        ap_reg_ioackin_d_o_0_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_d_o_1_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_1_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then
                    if (not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then 
                        ap_reg_ioackin_d_o_1_TREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = d_o_1_TREADY)) then 
                        ap_reg_ioackin_d_o_1_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_d_o_2_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_2_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then
                    if (not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then 
                        ap_reg_ioackin_d_o_2_TREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = d_o_2_TREADY)) then 
                        ap_reg_ioackin_d_o_2_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_d_o_3_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_3_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then
                    if (not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then 
                        ap_reg_ioackin_d_o_3_TREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = d_o_3_TREADY)) then 
                        ap_reg_ioackin_d_o_3_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_d_o_4_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_4_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then
                    if (not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then 
                        ap_reg_ioackin_d_o_4_TREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = d_o_4_TREADY)) then 
                        ap_reg_ioackin_d_o_4_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_d_o_5_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_5_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then
                    if (not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then 
                        ap_reg_ioackin_d_o_5_TREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = d_o_5_TREADY)) then 
                        ap_reg_ioackin_d_o_5_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_d_o_6_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_6_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then
                    if (not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then 
                        ap_reg_ioackin_d_o_6_TREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = d_o_6_TREADY)) then 
                        ap_reg_ioackin_d_o_6_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_d_o_7_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_7_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then
                    if (not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then 
                        ap_reg_ioackin_d_o_7_TREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = d_o_7_TREADY)) then 
                        ap_reg_ioackin_d_o_7_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_start;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (ap_const_lv1_0 = exitcond_reg_565))) then 
                i1_reg_270 <= tmp_12_reg_560;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and not((ap_const_lv1_0 = exitcond_reg_565))))) then 
                i1_reg_270 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then
                acc_0 <= tmp_3_fu_333_p2;
                acc_1 <= tmp_3_1_fu_357_p2;
                acc_2 <= tmp_3_2_fu_381_p2;
                acc_3 <= tmp_3_3_fu_405_p2;
                acc_4 <= tmp_3_4_fu_429_p2;
                acc_5 <= tmp_3_5_fu_453_p2;
                acc_6 <= tmp_3_6_fu_477_p2;
                acc_7 <= tmp_3_7_fu_501_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then
                ap_reg_ppstg_exitcond_reg_565_pp0_iter1 <= exitcond_reg_565;
                d_i_0_load_reg_569 <= d_i_0_q0;
                d_i_1_load_reg_574 <= d_i_1_q0;
                d_i_2_load_reg_579 <= d_i_2_q0;
                d_i_3_load_reg_584 <= d_i_3_q0;
                d_i_4_load_reg_589 <= d_i_4_q0;
                d_i_5_load_reg_594 <= d_i_5_q0;
                d_i_6_load_reg_599 <= d_i_6_q0;
                d_i_7_load_reg_604 <= d_i_7_q0;
                exitcond_reg_565 <= exitcond_fu_320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then
                tmp_12_reg_560 <= tmp_12_fu_316_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if (not((ap_const_logic_1 = ap_sig_pprstidle_pp0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif ((not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and (ap_const_logic_1 = ap_sig_pprstidle_pp0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_exitcond_reg_565_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) and not((ap_const_lv1_0 = ap_reg_ppstg_exitcond_reg_565_pp0_iter1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond_fu_320_p2, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if ((not((exitcond_fu_320_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_ppiten_pp0_it0 <= ap_start;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_19_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_19 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_235_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1)
    begin
                ap_sig_235 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1));
    end process;


    ap_sig_35_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_35 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_35)
    begin
        if (ap_sig_35) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_19)
    begin
        if (ap_sig_19) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_d_o_0_TREADY_assign_proc : process(d_o_0_TREADY, ap_reg_ioackin_d_o_0_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_0_TREADY)) then 
            ap_sig_ioackin_d_o_0_TREADY <= d_o_0_TREADY;
        else 
            ap_sig_ioackin_d_o_0_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_d_o_1_TREADY_assign_proc : process(d_o_1_TREADY, ap_reg_ioackin_d_o_1_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_1_TREADY)) then 
            ap_sig_ioackin_d_o_1_TREADY <= d_o_1_TREADY;
        else 
            ap_sig_ioackin_d_o_1_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_d_o_2_TREADY_assign_proc : process(d_o_2_TREADY, ap_reg_ioackin_d_o_2_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_2_TREADY)) then 
            ap_sig_ioackin_d_o_2_TREADY <= d_o_2_TREADY;
        else 
            ap_sig_ioackin_d_o_2_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_d_o_3_TREADY_assign_proc : process(d_o_3_TREADY, ap_reg_ioackin_d_o_3_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_3_TREADY)) then 
            ap_sig_ioackin_d_o_3_TREADY <= d_o_3_TREADY;
        else 
            ap_sig_ioackin_d_o_3_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_d_o_4_TREADY_assign_proc : process(d_o_4_TREADY, ap_reg_ioackin_d_o_4_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_4_TREADY)) then 
            ap_sig_ioackin_d_o_4_TREADY <= d_o_4_TREADY;
        else 
            ap_sig_ioackin_d_o_4_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_d_o_5_TREADY_assign_proc : process(d_o_5_TREADY, ap_reg_ioackin_d_o_5_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_5_TREADY)) then 
            ap_sig_ioackin_d_o_5_TREADY <= d_o_5_TREADY;
        else 
            ap_sig_ioackin_d_o_5_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_d_o_6_TREADY_assign_proc : process(d_o_6_TREADY, ap_reg_ioackin_d_o_6_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_6_TREADY)) then 
            ap_sig_ioackin_d_o_6_TREADY <= d_o_6_TREADY;
        else 
            ap_sig_ioackin_d_o_6_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_d_o_7_TREADY_assign_proc : process(d_o_7_TREADY, ap_reg_ioackin_d_o_7_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_7_TREADY)) then 
            ap_sig_ioackin_d_o_7_TREADY <= d_o_7_TREADY;
        else 
            ap_sig_ioackin_d_o_7_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_pprstidle_pp0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1))) then 
            ap_sig_pprstidle_pp0 <= ap_const_logic_1;
        else 
            ap_sig_pprstidle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    d_i_0_address0 <= newIndex_fu_298_p1(2 - 1 downto 0);

    d_i_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
            d_i_0_ce0 <= ap_const_logic_1;
        else 
            d_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_i_1_address0 <= newIndex_fu_298_p1(2 - 1 downto 0);

    d_i_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
            d_i_1_ce0 <= ap_const_logic_1;
        else 
            d_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_i_2_address0 <= newIndex_fu_298_p1(2 - 1 downto 0);

    d_i_2_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
            d_i_2_ce0 <= ap_const_logic_1;
        else 
            d_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_i_3_address0 <= newIndex_fu_298_p1(2 - 1 downto 0);

    d_i_3_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
            d_i_3_ce0 <= ap_const_logic_1;
        else 
            d_i_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_i_4_address0 <= newIndex_fu_298_p1(2 - 1 downto 0);

    d_i_4_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
            d_i_4_ce0 <= ap_const_logic_1;
        else 
            d_i_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_i_5_address0 <= newIndex_fu_298_p1(2 - 1 downto 0);

    d_i_5_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
            d_i_5_ce0 <= ap_const_logic_1;
        else 
            d_i_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_i_6_address0 <= newIndex_fu_298_p1(2 - 1 downto 0);

    d_i_6_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
            d_i_6_ce0 <= ap_const_logic_1;
        else 
            d_i_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_i_7_address0 <= newIndex_fu_298_p1(2 - 1 downto 0);

    d_i_7_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it0, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2))))) then 
            d_i_7_ce0 <= ap_const_logic_1;
        else 
            d_i_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_o_0_TDATA <= tmp_3_fu_333_p2(16 - 1 downto 0);

    d_o_0_TDATA_blk_n_assign_proc : process(d_o_0_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            d_o_0_TDATA_blk_n <= d_o_0_TREADY;
        else 
            d_o_0_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_0_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ioackin_d_o_0_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ioackin_d_o_0_TREADY))) then 
            d_o_0_TVALID <= ap_const_logic_1;
        else 
            d_o_0_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_1_TDATA <= tmp_3_1_fu_357_p2(16 - 1 downto 0);

    d_o_1_TDATA_blk_n_assign_proc : process(d_o_1_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            d_o_1_TDATA_blk_n <= d_o_1_TREADY;
        else 
            d_o_1_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_1_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ioackin_d_o_1_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ioackin_d_o_1_TREADY))) then 
            d_o_1_TVALID <= ap_const_logic_1;
        else 
            d_o_1_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_2_TDATA <= tmp_3_2_fu_381_p2(16 - 1 downto 0);

    d_o_2_TDATA_blk_n_assign_proc : process(d_o_2_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            d_o_2_TDATA_blk_n <= d_o_2_TREADY;
        else 
            d_o_2_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_2_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ioackin_d_o_2_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ioackin_d_o_2_TREADY))) then 
            d_o_2_TVALID <= ap_const_logic_1;
        else 
            d_o_2_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_3_TDATA <= tmp_3_3_fu_405_p2(16 - 1 downto 0);

    d_o_3_TDATA_blk_n_assign_proc : process(d_o_3_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            d_o_3_TDATA_blk_n <= d_o_3_TREADY;
        else 
            d_o_3_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_3_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ioackin_d_o_3_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ioackin_d_o_3_TREADY))) then 
            d_o_3_TVALID <= ap_const_logic_1;
        else 
            d_o_3_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_4_TDATA <= tmp_3_4_fu_429_p2(16 - 1 downto 0);

    d_o_4_TDATA_blk_n_assign_proc : process(d_o_4_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            d_o_4_TDATA_blk_n <= d_o_4_TREADY;
        else 
            d_o_4_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_4_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ioackin_d_o_4_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ioackin_d_o_4_TREADY))) then 
            d_o_4_TVALID <= ap_const_logic_1;
        else 
            d_o_4_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_5_TDATA <= tmp_3_5_fu_453_p2(16 - 1 downto 0);

    d_o_5_TDATA_blk_n_assign_proc : process(d_o_5_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            d_o_5_TDATA_blk_n <= d_o_5_TREADY;
        else 
            d_o_5_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_5_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ioackin_d_o_5_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ioackin_d_o_5_TREADY))) then 
            d_o_5_TVALID <= ap_const_logic_1;
        else 
            d_o_5_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_6_TDATA <= tmp_3_6_fu_477_p2(16 - 1 downto 0);

    d_o_6_TDATA_blk_n_assign_proc : process(d_o_6_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            d_o_6_TDATA_blk_n <= d_o_6_TREADY;
        else 
            d_o_6_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_6_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ioackin_d_o_6_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ioackin_d_o_6_TREADY))) then 
            d_o_6_TVALID <= ap_const_logic_1;
        else 
            d_o_6_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_7_TDATA <= tmp_3_7_fu_501_p2(16 - 1 downto 0);

    d_o_7_TDATA_blk_n_assign_proc : process(d_o_7_TREADY, ap_reg_ppiten_pp0_it2)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
            d_o_7_TDATA_blk_n <= d_o_7_TREADY;
        else 
            d_o_7_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    d_o_7_TVALID_assign_proc : process(ap_reg_ppiten_pp0_it2, ap_reg_ioackin_d_o_7_TREADY)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ioackin_d_o_7_TREADY))) then 
            d_o_7_TVALID <= ap_const_logic_1;
        else 
            d_o_7_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_320_p2 <= "1" when (i_1_7_fu_310_p2 = ap_const_lv6_20) else "0";
    i1_cast_fu_284_p1 <= std_logic_vector(resize(unsigned(i1_phi_fu_274_p6),6));

    i1_phi_fu_274_p6_assign_proc : process(i1_reg_270, tmp_12_reg_560, exitcond_reg_565, ap_sig_235)
    begin
        if (ap_sig_235) then
            if (not((ap_const_lv1_0 = exitcond_reg_565))) then 
                i1_phi_fu_274_p6 <= ap_const_lv5_0;
            elsif ((ap_const_lv1_0 = exitcond_reg_565)) then 
                i1_phi_fu_274_p6 <= tmp_12_reg_560;
            else 
                i1_phi_fu_274_p6 <= i1_reg_270;
            end if;
        else 
            i1_phi_fu_274_p6 <= i1_reg_270;
        end if; 
    end process;

    i_1_7_fu_310_p2 <= std_logic_vector(unsigned(ap_const_lv6_8) + unsigned(i1_cast_fu_284_p1));
    newIndex_fu_298_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_288_p4),64));
    tmp_12_fu_316_p1 <= i_1_7_fu_310_p2(5 - 1 downto 0);
    tmp_1_fu_288_p4 <= i1_phi_fu_274_p6(4 downto 3);
        tmp_2_1_fu_354_p1 <= std_logic_vector(resize(signed(d_i_1_load_reg_574),32));

        tmp_2_2_fu_378_p1 <= std_logic_vector(resize(signed(d_i_2_load_reg_579),32));

        tmp_2_3_fu_402_p1 <= std_logic_vector(resize(signed(d_i_3_load_reg_584),32));

        tmp_2_4_fu_426_p1 <= std_logic_vector(resize(signed(d_i_4_load_reg_589),32));

        tmp_2_5_fu_450_p1 <= std_logic_vector(resize(signed(d_i_5_load_reg_594),32));

        tmp_2_6_fu_474_p1 <= std_logic_vector(resize(signed(d_i_6_load_reg_599),32));

        tmp_2_7_fu_498_p1 <= std_logic_vector(resize(signed(d_i_7_load_reg_604),32));

        tmp_2_fu_330_p1 <= std_logic_vector(resize(signed(d_i_0_load_reg_569),32));

    tmp_3_1_fu_357_p2 <= std_logic_vector(unsigned(acc_1) + unsigned(tmp_2_1_fu_354_p1));
    tmp_3_2_fu_381_p2 <= std_logic_vector(unsigned(acc_2) + unsigned(tmp_2_2_fu_378_p1));
    tmp_3_3_fu_405_p2 <= std_logic_vector(unsigned(acc_3) + unsigned(tmp_2_3_fu_402_p1));
    tmp_3_4_fu_429_p2 <= std_logic_vector(unsigned(acc_4) + unsigned(tmp_2_4_fu_426_p1));
    tmp_3_5_fu_453_p2 <= std_logic_vector(unsigned(acc_5) + unsigned(tmp_2_5_fu_450_p1));
    tmp_3_6_fu_477_p2 <= std_logic_vector(unsigned(acc_6) + unsigned(tmp_2_6_fu_474_p1));
    tmp_3_7_fu_501_p2 <= std_logic_vector(unsigned(acc_7) + unsigned(tmp_2_7_fu_498_p1));
    tmp_3_fu_333_p2 <= std_logic_vector(unsigned(acc_0) + unsigned(tmp_2_fu_330_p1));
end behav;
